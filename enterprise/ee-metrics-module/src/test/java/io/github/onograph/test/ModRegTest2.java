package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest2 {

  public static boolean debug = false;

  @Test
  public void test1001() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1001");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "hi!", metricRegistryManager6);
    jVMAdapterMemoryHeapImpl10.start();
    try {
      jVMAdapterMemoryHeapImpl10.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1002() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1002");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1003() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1003");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getOneMinuteRate();
    double double15 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) ' ');
    long long18 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
  }

  @Test
  public void test1004() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1004");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.setabys((long) 1);
    long long5 = livingCacheMeta0.getLgBm();
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.sememt((int) (byte) -1);
    livingCacheMeta0.sembe(10L);
    long long11 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
  }

  @Test
  public void test1005() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1005");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.getName();
    java.lang.String str2 = metricsServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "globalMetrics" + "'", str1,
        "globalMetrics");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "globalMetrics" + "'", str2,
        "globalMetrics");
  }

  @Test
  public void test1006() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1006");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    java.time.Duration duration2 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration2);
    com.codahale.metrics.Timer timer4 = consensusMessageStats0.getTimer();
    long long5 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats6 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType7 = null;
    com.codahale.metrics.Timer timer8 = consensusMessageStats6.getTimer(raftConsensusMessageType7);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long10 = consensusMessageStats9.dea();
    java.time.Duration duration11 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration11);
    consensusMessageStats6.sedaForDu(duration11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration11, raftConsensusMessageType14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(duration2);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 600000L + "'", long5 == 600000L);
    org.junit.Assert.assertNotNull(consensusMessageStats6);
    org.junit.Assert.assertNull(timer8);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertNotNull(duration11);
  }

  @Test
  public void test1007() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1007");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    long long4 = livingCacheMeta0.gehs();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test1008() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1008");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge13);
  }

  @Test
  public void test1009() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1009");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, memoryPools19,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools23, "vm.heap.used");
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        memoryPools26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    java.lang.String str30 = jVMAdapterPoolImpl28.moydmdmineString("neo4j.count.node");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "neo4j.count.node" + "'", str30,
        "neo4j.count.node");
  }

  @Test
  public void test1010() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1010");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        storeEntityCountersSupplier20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager10);
    boolean boolean24 = metricRegistryManager10.isEnlForSt("db.operation.count.drop");
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier25 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "globalMetrics", metricRegistryManager10, transactionIdStoreSupplier25,
        transactionCounters26);
    try {
      globalTransactionStatsAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1011() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1011");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier20, pageCacheTracer21);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager12, webContainerThreadInfoSupplier23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager12, storeEntityCountersSupplier25);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter27 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "hi!", monitors1, metricRegistryManager12);
    try {
      txCatchupAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1012() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1012");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, memoryPools19,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools23, "vm.heap.used");
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier26 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        monitorsClusterConsensusImpl1, metricRegistryManager12, coreNodeLeaderCheckSupplier26);
    try {
      consensusCoreNodeAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1013() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1013");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext2 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents3 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle4 = metricsServiceExtensionFactory0.newInstance(
          extensionContext2, requiredComponents3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "globalMetrics" + "'", str1,
        "globalMetrics");
  }

  @Test
  public void test1014() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1014");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getOneMinuteRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark(10L);
    double double6 = metricsMeter1.getOneMinuteRate();
    double double7 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
  }

  @Test
  public void test1015() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1015");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getIEm();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.setabys((long) 'a');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1016() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1016");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "db.query.execution", metricRegistryManager12, monitors30);
    try {
      jVMAdapterSDPImpl31.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1017() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1017");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier16 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter17 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager10, webContainerThreadInfoSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager10, storeEntityCountersSupplier18, pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager10, webContainerThreadInfoSupplier21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        storeEntityCountersSupplier23);
    gdbElementStatsAdapter24.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1018() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1018");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.norlad();
  }

  @Test
  public void test1019() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1019");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.committed", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier28 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter29 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.stop", metricRegistryManager13, webContainerThreadInfoSupplier28);
    try {
      jettyAdapter29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1020() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1020");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, jobScheduler20, fileSystemAbstraction21,
        databaseLayout22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors2, metricRegistryManager12);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        pageCacheCounters25);
    try {
      neoPageCacheAdapter26.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1021() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1021");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1022() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1022");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager8, memoryPools14,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools17,
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1023() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1023");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType9, (int) (short) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1024() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1024");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl21 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "", metricRegistryManager9, monitors20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager9, jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    try {
      gdbStoreStatsAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1025() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1025");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
  }

  @Test
  public void test1026() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1026");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier2 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter3 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager1, storeEntityCountersSupplier2);
  }

  @Test
  public void test1027() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1027");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    queryExecutionMonitorMetricsImpl15.init();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery25, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery28);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1028() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1028");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    java.lang.Throwable throwable25 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery24, throwable25);
    try {
      queryExecutionMonitorMetricsImpl15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1029() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1029");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager11, memoryPools22, "db.operation.count.create");
    java.lang.String str26 = memoryPoolsAdapterGdbImpl24.moydmdmineString(
        "db.operation.count.start");
    try {
      memoryPoolsAdapterGdbImpl24.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "pool.<pool>.<database>.db.operation.count.start" + "'", str26,
        "pool.<pool>.<database>.db.operation.count.start");
  }

  @Test
  public void test1030() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1030");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier19 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionIdStoreSupplier19, transactionCounters20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager12, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.create", metricRegistryManager12, memoryPools27,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    try {
      memoryPoolsAdapterGdbImpl29.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1031() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1031");
    }
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl0 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl();
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType1 = memoryPoolsAdapterGdbImpl0.getGrp();
    java.lang.String str3 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "db.operation.count.create");
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType1 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType1.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "pool.<pool>.<database>.db.operation.count.create" + "'", str3,
        "pool.<pool>.<database>.db.operation.count.create");
  }

  @Test
  public void test1032() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1032");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryExecutionMonitorMetricsImpl13.startProcessing(executingQuery20);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl13.startExecution(executingQuery22);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1033() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1033");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl25 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryExecutionMonitorMetricsImpl25.startProcessing(executingQuery26);
    try {
      queryExecutionMonitorMetricsImpl25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1034() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1034");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.norlad();
    syncStat0.suslrle();
    syncStat0.suslrle();
    syncStat0.marc();
  }

  @Test
  public void test1035() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1035");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.startExecution(executingQuery17);
    try {
      queryExecutionMonitorMetricsImpl13.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1036() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1036");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9);
    jVMAdapterThreadMXImpl17.start();
    try {
      jVMAdapterThreadMXImpl17.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1037() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1037");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry6);
    boolean boolean8 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) metricRegistry6);
    java.lang.String str9 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents11 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext10, dependentComponents11);
    java.lang.Object obj13 = null;
    boolean boolean14 = extensionFactoryGdbMetricsImpl0.equals(obj13);
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "databaseMetrics" + "'", str9,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(lifecycle12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1038() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1038");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 'a');
    consensusLogAdditions0.apeie((long) 10);
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) 0);
    consensusLogAdditions0.apeie(97L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
  }

  @Test
  public void test1039() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1039");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager11);
    jVMAdapterMemoryHeapImpl21.init();
    java.lang.String str24 = jVMAdapterMemoryHeapImpl21.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    java.lang.String str26 = jVMAdapterMemoryHeapImpl21.moydmdmineString(
        "db.operation.count.start");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "pool.<pool>.<database>.db.operation.count.failed" + "'", str24,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "db.operation.count.start" + "'", str26,
        "db.operation.count.start");
  }

  @Test
  public void test1040() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1040");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl20 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12,
        monitors19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl4,
        metricRegistryManager12, coreNodeLeaderCheckSupplier21);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12,
        databaseOperationCounts23);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier25 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionIdStoreSupplier25, transactionCounters26);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl29 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, monitors28);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1041() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1041");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter12 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors3, metricRegistryManager9);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter14 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.recovered", metricRegistryManager9, pageCacheCounters13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager9);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1042() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1042");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "pool.<pool>.<database>.vm.heap.used");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1043() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1043");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitors1, metricRegistryManager2);
    try {
      readReplicaNodeAdapter3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1044() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1044");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType5, (int) (byte) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1045() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1045");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) (short) 100);
    double double18 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
  }

  @Test
  public void test1046() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1046");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier14 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter15 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager8, webContainerThreadInfoSupplier14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager8, storeEntityCountersSupplier16, pageCacheTracer17);
    gdbStatsAdapter18.start();
    try {
      gdbStatsAdapter18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1047() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1047");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager6);
    jVMAdapterPoolImpl10.start();
    java.lang.String str13 = jVMAdapterPoolImpl10.moydmdmineString("");
    jVMAdapterPoolImpl10.init();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
  }

  @Test
  public void test1048() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1048");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors2, metricRegistryManager9);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9,
        databaseOperationCounts15);
    com.codahale.metrics.MetricFilter metricFilter17 = null;
    try {
      metricRegistryManager9.reomcnForMe(metricFilter17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1049() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1049");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter16 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors7, metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter17 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors5, metricRegistryManager13);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter19 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager13,
        pageCacheCounters18);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier20 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter21 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager13, webContainerThreadInfoSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl23 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager13, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.drop", metricRegistryManager13, monitors24);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1050() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1050");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1051() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1051");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier15 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter16 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager9, webContainerThreadInfoSupplier15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager9);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1052() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1052");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        storeEntityCountersSupplier17, pageCacheTracer18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        memoryPools20, "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager10);
    jVMAdapterMemoryHeapImpl23.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1053() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1053");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager14,
        storeEntityCountersSupplier22, pageCacheTracer23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, transactionLogCounters25);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager14, databaseOperationCounts27);
    org.neo4j.monitoring.Monitors monitors29 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl30 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager14, monitors29);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager14);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter33 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "", metricRegistryManager14, checkpointCounters32);
    try {
      checkpointCounterAdapter33.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1054() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1054");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    java.time.Duration duration2 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration2);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats4 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats4.getTimer(raftConsensusMessageType5);
    long long7 = consensusMessageStats4.dea();
    long long8 = consensusMessageStats4.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long10 = consensusMessageStats9.dea();
    java.time.Duration duration11 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration11);
    consensusMessageStats4.sedaForDu(duration11);
    consensusMessageStats0.sedaForDu(duration11);
    java.time.Duration duration15 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType16 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration15, raftConsensusMessageType16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(duration2);
    org.junit.Assert.assertNotNull(consensusMessageStats4);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertNotNull(duration11);
  }

  @Test
  public void test1055() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1055");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter9 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager7);
    try {
      discoveryCoreNodeAdapter9.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1056() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1056");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getOneMinuteRate();
    double double10 = metricsMeter1.getOneMinuteRate();
    double double11 = metricsMeter1.getOneMinuteRate();
    double double12 = metricsMeter1.getFiveMinuteRate();
    double double13 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
  }

  @Test
  public void test1057() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1057");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1058() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1058");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    java.lang.String str9 = metricsServiceExtensionFactory0.toString();
    java.lang.String str10 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str9, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str10, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1059() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1059");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        storeEntityCountersSupplier18, pageCacheTracer19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10);
    jVMAdapterGarbageCollectionImpl21.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1060() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1060");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager10);
    java.lang.String str20 = jVMAdapterGarbageCollectionImpl18.moydmdmineString(
        "dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "dbms.pool.<pool>.vm.heap.max" + "'",
        str20, "dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test1061() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1061");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors2, metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager9);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType17 = jVMAdapterThreadMXImpl16.getGrp();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType17 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM + "'",
        enterpriseMetricsType17.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM));
  }

  @Test
  public void test1062() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1062");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    java.time.Duration duration2 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration2);
    com.codahale.metrics.Timer timer4 = consensusMessageStats0.getTimer();
    long long5 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(duration2);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 600000L + "'", long5 == 600000L);
    org.junit.Assert.assertNull(timer7);
  }

  @Test
  public void test1063() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1063");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager6);
    java.lang.String str10 = jVMAdapterThreadMXImpl8.moydmdmineString(
        "causal_clustering.core.discovery.cluster.unreachable");
    jVMAdapterThreadMXImpl8.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "causal_clustering.core.discovery.cluster.unreachable" + "'",
        str10, "causal_clustering.core.discovery.cluster.unreachable");
  }

  @Test
  public void test1064() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1064");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
  }

  @Test
  public void test1065() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1065");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    long long4 = livingCacheMeta0.gehs();
    livingCacheMeta0.cacheMiss();
    long long6 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sembe(100L);
    long long9 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
  }

  @Test
  public void test1066() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1066");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.drop", metricRegistryManager1, memoryPools2);
    java.lang.String str5 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "causal_clustering.core.discovery.replicated_data");
    java.lang.String str7 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    try {
      memoryPoolsAdapterNeoStackImpl3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data"
            + "'", str5, "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertEquals("'" + str7 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data"
            + "'", str7,
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
  }

  @Test
  public void test1067() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1067");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager15, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager15, monitors23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager15, storeEntityCountersSupplier25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        memoryPools27, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager15, memoryPools30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager15);
    boolean boolean34 = metricRegistryManager15.isEnlForSt(
        "dbms.pool.<pool>.db.operation.count.failed");
    org.neo4j.monitoring.Monitors monitors35 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager15, monitors35);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl37 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager15);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters38 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter39 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.db.operation.count.drop", metricRegistryManager15,
        transactionLogCounters38);
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1068() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1068");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 'a');
    consensusLogAdditions0.apeie((long) 10);
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(97L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
  }

  @Test
  public void test1069() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1069");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    java.lang.String str19 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    jVMAdapterPoolImpl13.start();
    try {
      jVMAdapterPoolImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "db.operation.count.drop" + "'", str17,
        "db.operation.count.drop");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str19,
        "dbms.pool.<pool>.db.operation.count.failed");
  }

  @Test
  public void test1070() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1070");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getICe();
    long long8 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
  }

  @Test
  public void test1071() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1071");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager8);
    java.lang.String str21 = jVMAdapterGarbageCollectionImpl19.moydmdmineString(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    java.lang.String str23 = jVMAdapterGarbageCollectionImpl19.moydmdmineString("databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str21, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "databaseMetrics" + "'", str23,
        "databaseMetrics");
  }

  @Test
  public void test1072() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1072");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(100);
    livingCacheMeta0.setabys((long) 100);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
  }

  @Test
  public void test1073() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1073");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (long) (-1), 10, compressionOption5,
          rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1074() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1074");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier15 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter16 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager9, webContainerThreadInfoSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        memoryPools19, "databaseMetrics");
    java.lang.String str23 = memoryPoolsAdapterGdbImpl21.moydmdmineString("");
    java.lang.String str25 = memoryPoolsAdapterGdbImpl21.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pool.<pool>.<database>." + "'", str23,
        "pool.<pool>.<database>.");
    org.junit.Assert.assertEquals("'" + str25 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship"
            + "'", str25,
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1075() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1075");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats0.getTimer(raftConsensusMessageType5);
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer8 = consensusMessageStats0.getTimer();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertNotNull(timer7);
    org.junit.Assert.assertNotNull(timer8);
  }

  @Test
  public void test1076() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1076");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "pool.<pool>.<database>.db.operation.count.create");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1077() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1077");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.marc();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.norlad();
    syncStat0.suslrle();
  }

  @Test
  public void test1078() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1078");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter12 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors3, metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter14 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager9, monitors13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager9, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    try {
      gdbStoreStatsAdapter18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1079() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1079");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager11, memoryPools18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter21 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        monitors1, metricRegistryManager11);
    try {
      txCatchupAdapter21.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1080() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1080");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "db.query.execution", metricRegistryManager12, monitors30);
    try {
      jVMAdapterSDPImpl31.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1081() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1081");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        storeEntityCountersSupplier18);
    gdbElementStatsAdapter19.start();
    gdbElementStatsAdapter19.start();
    gdbElementStatsAdapter19.start();
    try {
      gdbElementStatsAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1082() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1082");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getOneMinuteRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 'a');
    long long6 = metricsMeter1.getCount();
    double double7 = metricsMeter1.getFiveMinuteRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    long long10 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test1083() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1083");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl4 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "neo4j.count.node", metricRegistryManager1, memoryPools2, "db.operation.count.create");
    java.lang.String str6 = memoryPoolsAdapterGdbImpl4.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str6 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str6,
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1084() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1084");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.query.execution", metricRegistryManager9, monitors17);
    try {
      queryExecutionMonitorMetricsImpl18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1085() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1085");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    long long1 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid(0L);
    long long4 = petConsensusLogApplied0.apldid();
    long long5 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid(97L);
    long long8 = petConsensusLogApplied0.apldid();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 97L + "'", long8 == 97L);
  }

  @Test
  public void test1086() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1086");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl20 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, memoryPools18,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier22 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        transactionIdStoreSupplier22, transactionCounters23);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.create", metricRegistryManager11, pageCacheCounters25);
    try {
      neoPageCacheAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1087() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1087");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.Object obj3 = null;
    boolean boolean4 = extensionFactoryGdbMetricsImpl0.equals(obj3);
    java.lang.String str5 = extensionFactoryGdbMetricsImpl0.toString();
    java.util.function.LongSupplier longSupplier6 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter7 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier6);
    double double8 = metricsMeter7.getMeanRate();
    double double9 = metricsMeter7.getFiveMinuteRate();
    double double10 = metricsMeter7.getOneMinuteRate();
    double double11 = metricsMeter7.getMeanRate();
    boolean boolean12 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) double11);
    java.lang.String str13 = extensionFactoryGdbMetricsImpl0.getName();
    java.lang.String str14 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str5, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "databaseMetrics" + "'", str13,
        "databaseMetrics");
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str14, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1088() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1088");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    consensusElectionTerm0.termLength((long) 10);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
  }

  @Test
  public void test1089() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1089");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        storeEntityCountersSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors21);
    try {
      jVMAdapterSDPImpl22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1090() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1090");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "db.operation.count.recovered");
    java.lang.String str8 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    try {
      jVMAdapterGarbageCollectionImpl2.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "db.operation.count.recovered" + "'",
        str6, "db.operation.count.recovered");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "causal_clustering.core.last_leader_message" + "'", str8,
        "causal_clustering.core.last_leader_message");
  }

  @Test
  public void test1091() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1091");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors5, metricRegistryManager12);
    boolean boolean19 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) readReplicaNodeAdapter18);
    java.lang.String str20 = extensionFactoryGdbMetricsImpl0.getName();
    java.lang.String str21 = extensionFactoryGdbMetricsImpl0.getName();
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "databaseMetrics" + "'", str20,
        "databaseMetrics");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "databaseMetrics" + "'", str21,
        "databaseMetrics");
  }

  @Test
  public void test1092() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1092");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge11 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge10);
    org.junit.Assert.assertNotNull(intGauge11);
  }

  @Test
  public void test1093() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1093");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager11,
        transactionIdStoreSupplier17, transactionCounters18);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "", monitors1, metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1094() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1094");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) (short) 1);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys(1L);
    long long9 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
  }

  @Test
  public void test1095() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1095");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery22, throwable23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery25);
    java.lang.String str28 = queryExecutionMonitorMetricsImpl15.moydmdmineString(
        "causal_clustering.core.discovery.cluster.members");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "causal_clustering.core.discovery.cluster.members" + "'", str28,
        "causal_clustering.core.discovery.cluster.members");
  }

  @Test
  public void test1096() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1096");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager9, memoryPools15,
        "pool.<pool>.<database>.db.operation.count.start");
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "", monitors1, metricRegistryManager9);
    try {
      discoveryCoreNodeAdapter18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1097() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1097");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1098() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1098");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, jobScheduler21, fileSystemAbstraction22,
        databaseLayout23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors3, metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.failed", monitors1, metricRegistryManager13);
    try {
      readReplicaNodeAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1099() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1099");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, 0L, (int) (short) 1, compressionOption5,
          rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1100() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1100");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer4 = consensusMessageStats0.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats5 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats5.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats5.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType9 = null;
    com.codahale.metrics.Timer timer10 = consensusMessageStats5.getTimer(raftConsensusMessageType9);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType11 = null;
    com.codahale.metrics.Timer timer12 = consensusMessageStats5.getTimer(
        raftConsensusMessageType11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats5.getTimer(
        raftConsensusMessageType13);
    java.time.Duration duration15 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats5.sedaForDu(duration15);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats17 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long18 = consensusMessageStats17.dea();
    com.codahale.metrics.Timer timer19 = consensusMessageStats17.getTimer();
    com.codahale.metrics.Timer timer20 = consensusMessageStats17.getTimer();
    java.time.Duration duration21 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats17.sedaForDu(duration21);
    consensusMessageStats5.sedaForDu(duration21);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats24 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats24.getTimer(
        raftConsensusMessageType25);
    long long27 = consensusMessageStats24.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats28 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    com.codahale.metrics.Timer timer30 = consensusMessageStats28.getTimer(
        raftConsensusMessageType29);
    long long31 = consensusMessageStats28.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType32 = null;
    com.codahale.metrics.Timer timer33 = consensusMessageStats28.getTimer(
        raftConsensusMessageType32);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType34 = null;
    com.codahale.metrics.Timer timer35 = consensusMessageStats28.getTimer(
        raftConsensusMessageType34);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType36 = null;
    com.codahale.metrics.Timer timer37 = consensusMessageStats28.getTimer(
        raftConsensusMessageType36);
    java.time.Duration duration38 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats28.sedaForDu(duration38);
    consensusMessageStats24.sedaForDu(duration38);
    consensusMessageStats5.sedaForDu(duration38);
    consensusMessageStats0.sedaForDu(duration38);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertNotNull(consensusMessageStats5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNull(timer10);
    org.junit.Assert.assertNull(timer12);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNotNull(duration15);
    org.junit.Assert.assertNotNull(consensusMessageStats17);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    org.junit.Assert.assertNotNull(timer19);
    org.junit.Assert.assertNotNull(timer20);
    org.junit.Assert.assertNotNull(duration21);
    org.junit.Assert.assertNotNull(consensusMessageStats24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats28);
    org.junit.Assert.assertNull(timer30);
    org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    org.junit.Assert.assertNull(timer33);
    org.junit.Assert.assertNull(timer35);
    org.junit.Assert.assertNull(timer37);
    org.junit.Assert.assertNotNull(duration38);
  }

  @Test
  public void test1101() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1101");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager15, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager15, monitors23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager15, storeEntityCountersSupplier25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        memoryPools27, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager15, memoryPools30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager15);
    boolean boolean34 = metricRegistryManager15.isEnlForSt(
        "dbms.pool.<pool>.db.operation.count.failed");
    org.neo4j.monitoring.Monitors monitors35 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager15, monitors35);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl37 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager15);
    org.neo4j.memory.MemoryPools memoryPools38 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl40 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "neo4j.count.relationship", metricRegistryManager15, memoryPools38,
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    com.codahale.metrics.MetricFilter metricFilter41 = null;
    try {
      metricRegistryManager15.reomcnForMe(metricFilter41);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1102() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1102");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(0);
    clusterMembersCount0.secvg(false);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1103() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1103");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager12, pageCacheCounters28);
    boolean boolean31 = metricRegistryManager12.isEnlForSt("vm.heap.max");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12);
    java.lang.String str34 = jVMAdapterPoolImpl32.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    java.lang.String str36 = jVMAdapterPoolImpl32.moydmdmineString("dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged" + "'", str34,
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "dbms.pool.<pool>.vm.heap.max" + "'",
        str36, "dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test1104() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1104");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager8);
    boolean boolean16 = metricRegistryManager8.isEnlForSt(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, databaseOperationCounts17);
    try {
      gdbActionsAdapter18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1105() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1105");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier16 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter17 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager10, webContainerThreadInfoSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager10, storeEntityCountersSupplier18, pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager10, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter24 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager10, monitors23);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1106() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1106");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    consensusMessageStats0.sedaForDu(duration19);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats22 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long23 = consensusMessageStats22.dea();
    com.codahale.metrics.Timer timer24 = consensusMessageStats22.getTimer();
    com.codahale.metrics.Timer timer25 = consensusMessageStats22.getTimer();
    java.time.Duration duration26 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats22.sedaForDu(duration26);
    consensusMessageStats0.sedaForDu(duration26);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats29 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType30 = null;
    com.codahale.metrics.Timer timer31 = consensusMessageStats29.getTimer(
        raftConsensusMessageType30);
    long long32 = consensusMessageStats29.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType33 = null;
    com.codahale.metrics.Timer timer34 = consensusMessageStats29.getTimer(
        raftConsensusMessageType33);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType35 = null;
    com.codahale.metrics.Timer timer36 = consensusMessageStats29.getTimer(
        raftConsensusMessageType35);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType37 = null;
    com.codahale.metrics.Timer timer38 = consensusMessageStats29.getTimer(
        raftConsensusMessageType37);
    java.time.Duration duration39 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats29.sedaForDu(duration39);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats41 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long42 = consensusMessageStats41.dea();
    com.codahale.metrics.Timer timer43 = consensusMessageStats41.getTimer();
    com.codahale.metrics.Timer timer44 = consensusMessageStats41.getTimer();
    java.time.Duration duration45 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats41.sedaForDu(duration45);
    consensusMessageStats29.sedaForDu(duration45);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats48 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType49 = null;
    com.codahale.metrics.Timer timer50 = consensusMessageStats48.getTimer(
        raftConsensusMessageType49);
    long long51 = consensusMessageStats48.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats52 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType53 = null;
    com.codahale.metrics.Timer timer54 = consensusMessageStats52.getTimer(
        raftConsensusMessageType53);
    long long55 = consensusMessageStats52.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType56 = null;
    com.codahale.metrics.Timer timer57 = consensusMessageStats52.getTimer(
        raftConsensusMessageType56);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType58 = null;
    com.codahale.metrics.Timer timer59 = consensusMessageStats52.getTimer(
        raftConsensusMessageType58);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType60 = null;
    com.codahale.metrics.Timer timer61 = consensusMessageStats52.getTimer(
        raftConsensusMessageType60);
    java.time.Duration duration62 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats52.sedaForDu(duration62);
    consensusMessageStats48.sedaForDu(duration62);
    consensusMessageStats29.sedaForDu(duration62);
    consensusMessageStats0.sedaForDu(duration62);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertNotNull(consensusMessageStats22);
    org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    org.junit.Assert.assertNotNull(timer24);
    org.junit.Assert.assertNotNull(timer25);
    org.junit.Assert.assertNotNull(duration26);
    org.junit.Assert.assertNotNull(consensusMessageStats29);
    org.junit.Assert.assertNull(timer31);
    org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    org.junit.Assert.assertNull(timer34);
    org.junit.Assert.assertNull(timer36);
    org.junit.Assert.assertNull(timer38);
    org.junit.Assert.assertNotNull(duration39);
    org.junit.Assert.assertNotNull(consensusMessageStats41);
    org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    org.junit.Assert.assertNotNull(timer43);
    org.junit.Assert.assertNotNull(timer44);
    org.junit.Assert.assertNotNull(duration45);
    org.junit.Assert.assertNotNull(consensusMessageStats48);
    org.junit.Assert.assertNull(timer50);
    org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats52);
    org.junit.Assert.assertNull(timer54);
    org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
    org.junit.Assert.assertNull(timer57);
    org.junit.Assert.assertNull(timer59);
    org.junit.Assert.assertNull(timer61);
    org.junit.Assert.assertNotNull(duration62);
  }

  @Test
  public void test1107() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1107");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (byte) 0);
    clusterMembersCount0.seuehl(1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs((int) (byte) 10);
    clusterMembersCount0.secvg(true);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test1108() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1108");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry7);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter12 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.query.execution", metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier13);
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1109() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1109");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.setabys(0L);
    long long13 = livingCacheMeta0.gehs();
    long long14 = livingCacheMeta0.gehs();
    long long15 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
  }

  @Test
  public void test1110() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1110");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric2 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric2.comie(0L);
    long long5 = submittedConsensusLogCommitIndexMetric2.comie();
    submittedConsensusLogCommitIndexMetric2.comie((long) (byte) 0);
    long long8 = submittedConsensusLogCommitIndexMetric2.comie();
    boolean boolean9 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) submittedConsensusLogCommitIndexMetric2);
    java.lang.String str10 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory11 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray14 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList15 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        globbingPatternArray14);
    com.codahale.metrics.MetricRegistry metricRegistry17 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager18 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        metricRegistry17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager18, memoryPools19,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager18, monitors22);
    boolean boolean24 = metricsServiceExtensionFactory11.equals(
        (java.lang.Object) metricRegistryManager18);
    boolean boolean25 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) metricsServiceExtensionFactory11);
    java.lang.String str26 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext27 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents28 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle29 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext27, dependentComponents28);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext30 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents31 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle32 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext30, dependentComponents31);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "databaseMetrics" + "'", str1,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "databaseMetrics" + "'", str10,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str26, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle29);
    org.junit.Assert.assertNotNull(lifecycle32);
  }

  @Test
  public void test1111() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1111");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    queryExecutionMonitorMetricsImpl15.shutdown();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery23, true);
    try {
      queryExecutionMonitorMetricsImpl15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1112() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1112");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getIEm();
    long long3 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sembe((long) 0);
    long long6 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1113() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1113");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier9 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager6, storeEntityCountersSupplier9,
        pageCacheTracer10);
    gdbStatsAdapter11.start();
    gdbStatsAdapter11.start();
    try {
      gdbStatsAdapter11.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1114() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1114");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager13, jobScheduler26,
        fileSystemAbstraction27, databaseLayout28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl33 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager13, memoryPools31,
        "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1115() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1115");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter22 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier23,
        pageCacheTracer24);
    gdbStatsAdapter25.start();
    try {
      gdbStatsAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1116() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1116");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.drop", metricRegistryManager6, monitors8);
    java.lang.Class<?> wildcardClass10 = metricRegistryManager6.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1117() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1117");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery17, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery20, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery23, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery26, throwable27);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1118() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1118");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager8, databaseOperationCounts15);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.create", metricRegistryManager8,
        transactionIdStoreSupplier17, transactionCounters18);
    try {
      globalTransactionStatsAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1119() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1119");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType5, (int) (short) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1120() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1120");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl26 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, monitors25);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter28 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "globalMetrics", metricRegistryManager11, checkpointCounters27);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1121() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1121");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getOneMinuteRate();
    double double15 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
  }

  @Test
  public void test1122() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1122");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "dbms.pool.<pool>.neo4j.count.relationship", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16,
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", config18, path19);
  }

  @Test
  public void test1123() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1123");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl19 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        monitors18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl3,
        metricRegistryManager11, coreNodeLeaderCheckSupplier20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.used", metricRegistryManager11, pageCacheCounters22);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager11,
        webContainerThreadInfoSupplier24);
    try {
      jettyAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1124() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1124");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier11 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters12 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        transactionIdStoreSupplier11, transactionCounters12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier15 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters16 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager10, transactionIdStoreSupplier15,
        transactionCounters16);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter19 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.drop", metricRegistryManager10, checkpointCounters18);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitors1,
        metricRegistryManager10);
    java.lang.String str22 = discoveryCoreNodeAdapter20.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop");
    try {
      discoveryCoreNodeAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop"
            + "'", str22, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1125() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1125");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager6, monitors10);
    try {
      cypherPlanAdapter11.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1126() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1126");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    java.time.Duration duration2 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration2);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats4 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats4.getTimer(raftConsensusMessageType5);
    long long7 = consensusMessageStats4.dea();
    long long8 = consensusMessageStats4.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long10 = consensusMessageStats9.dea();
    java.time.Duration duration11 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration11);
    consensusMessageStats4.sedaForDu(duration11);
    consensusMessageStats0.sedaForDu(duration11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats0.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats0.getTimer(
        raftConsensusMessageType17);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(duration2);
    org.junit.Assert.assertNotNull(consensusMessageStats4);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertNotNull(duration11);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
  }

  @Test
  public void test1127() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1127");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    long long2 = consensusLogAdditions0.apeie();
    long long3 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) 10);
    consensusLogAdditions0.apeie(600000L);
    consensusLogAdditions0.apeie((long) 1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1128() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1128");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    java.time.Duration duration2 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration2);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats4 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats4.getTimer(raftConsensusMessageType5);
    long long7 = consensusMessageStats4.dea();
    long long8 = consensusMessageStats4.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long10 = consensusMessageStats9.dea();
    java.time.Duration duration11 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration11);
    consensusMessageStats4.sedaForDu(duration11);
    consensusMessageStats0.sedaForDu(duration11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats0.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats17 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType18 = null;
    com.codahale.metrics.Timer timer19 = consensusMessageStats17.getTimer(
        raftConsensusMessageType18);
    long long20 = consensusMessageStats17.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType21 = null;
    com.codahale.metrics.Timer timer22 = consensusMessageStats17.getTimer(
        raftConsensusMessageType21);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats17.getTimer(
        raftConsensusMessageType23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats17.getTimer(
        raftConsensusMessageType25);
    java.time.Duration duration27 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats17.sedaForDu(duration27);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration27, raftConsensusMessageType29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(duration2);
    org.junit.Assert.assertNotNull(consensusMessageStats4);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertNotNull(duration11);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNotNull(consensusMessageStats17);
    org.junit.Assert.assertNull(timer19);
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    org.junit.Assert.assertNull(timer22);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertNotNull(duration27);
  }

  @Test
  public void test1129() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1129");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors2, metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager9);
    jVMAdapterThreadMXImpl16.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1130() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1130");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType9, (int) (short) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1131() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1131");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    long long1 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid(0L);
    long long4 = petConsensusLogApplied0.apldid();
    long long5 = petConsensusLogApplied0.apldid();
    long long6 = petConsensusLogApplied0.apldid();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1132() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1132");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager14);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.stop", monitorsClusterConsensusImpl2, metricRegistryManager14,
        coreNodeLeaderCheckSupplier30);
    org.neo4j.monitoring.Monitors monitors32 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter33 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14,
        monitors32);
    try {
      boltAdapter33.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1133() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1133");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    java.lang.Throwable throwable23 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery22, throwable23);
    java.lang.String str26 = queryExecutionMonitorMetricsImpl15.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str26,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
  }

  @Test
  public void test1134() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1134");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType7, (int) (short) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
  }

  @Test
  public void test1135() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1135");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager11, monitors21);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter24 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager11, pageCacheCounters23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.query.execution", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1136() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1136");
    }
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl0 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl();
    java.lang.String str2 = jVMAdapterMBImpl0.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertEquals("'" + str2 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship"
            + "'", str2,
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1137() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1137");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors2, metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager13, monitors27);
    try {
      cypherPlanAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1138() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1138");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (long) (byte) 10, (-1),
          compressionOption5, rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1139() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1139");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.marc();
    syncStat0.clerut();
  }

  @Test
  public void test1140() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1140");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheMiss();
    long long9 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
  }

  @Test
  public void test1141() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1141");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark();
    long long6 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1142() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1142");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    double double16 = metricsMeter1.getOneMinuteRate();
    double double17 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
  }

  @Test
  public void test1143() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1143");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager14, transactionLogCounters25);
    gdbTransactionLogAdapter26.start();
    boolean boolean28 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter26);
    java.lang.String str29 = metricsServiceExtensionFactory0.toString();
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl();
    java.lang.String str32 = jVMAdapterPoolImpl30.moydmdmineString("neo4j.count.node");
    java.lang.String str34 = jVMAdapterPoolImpl30.moydmdmineString("db.operation.count.stop");
    boolean boolean35 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) jVMAdapterPoolImpl30);
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str29, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "neo4j.count.node" + "'", str32,
        "neo4j.count.node");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "db.operation.count.stop" + "'", str34,
        "db.operation.count.stop");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test1144() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1144");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    long long4 = livingCacheMeta0.gems();
    long long5 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1145() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1145");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType9);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType11 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType11, (int) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
  }

  @Test
  public void test1146() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1146");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (-1));
    transactionSizeMonitorImpl0.addHeapTransactionSize(600000L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (short) -1);
  }

  @Test
  public void test1147() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1147");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge3 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge3);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1148() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1148");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager11, memoryPools18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager11, databaseOperationCounts21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1149() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1149");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str3 = extensionFactoryGdbMetricsImpl0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "databaseMetrics" + "'", str3,
        "databaseMetrics");
  }

  @Test
  public void test1150() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1150");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager9);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager9, databaseOperationCounts14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager9, storeEntityCountersSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager9, storeEntityCountersSupplier18);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1151() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1151");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getMeanRate();
    double double15 = metricsMeter1.getFifteenMinuteRate();
    double double16 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
  }

  @Test
  public void test1152() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1152");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.committed", metricRegistryManager9, webContainerThreadInfoSupplier21);
    jettyAdapter22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1153() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1153");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getMeanRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    double double4 = metricsMeter1.getOneMinuteRate();
    double double5 = metricsMeter1.getMeanRate();
    double double6 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test1154() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1154");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        storeEntityCountersSupplier19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager9,
        webContainerThreadInfoSupplier21);
    jettyAdapter22.start();
    jettyAdapter22.init();
    jettyAdapter22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1155() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1155");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    consensusMessageStats0.sedaForDu(duration19);
    long long22 = consensusMessageStats0.dea();
    long long23 = consensusMessageStats0.dea();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 600000L + "'", long22 == 600000L);
    org.junit.Assert.assertTrue("'" + long23 + "' != '" + 600000L + "'", long23 == 600000L);
  }

  @Test
  public void test1156() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1156");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter10 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors1, metricRegistryManager7);
    try {
      txCatchupAdapter10.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1157() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1157");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(10);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge14 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge15 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge13);
    org.junit.Assert.assertNotNull(intGauge14);
    org.junit.Assert.assertNotNull(intGauge15);
  }

  @Test
  public void test1158() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1158");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getMeanRate();
    long long3 = metricsMeter1.getCount();
    double double4 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
  }

  @Test
  public void test1159() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1159");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl4 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "neo4j.count.node", metricRegistryManager1, memoryPools2, "db.operation.count.create");
    java.lang.String str6 = memoryPoolsAdapterGdbImpl4.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    try {
      memoryPoolsAdapterGdbImpl4.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str6 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str6, "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1160() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1160");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (byte) 0);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge5 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.sembs((int) (short) 100);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge5);
  }

  @Test
  public void test1161() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1161");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.stop();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1162() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1162");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.Object obj3 = null;
    boolean boolean4 = extensionFactoryGdbMetricsImpl0.equals(obj3);
    java.lang.String str5 = extensionFactoryGdbMetricsImpl0.toString();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats6 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType7 = null;
    com.codahale.metrics.Timer timer8 = consensusMessageStats6.getTimer(raftConsensusMessageType7);
    long long9 = consensusMessageStats6.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats6.getTimer(
        raftConsensusMessageType10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType12 = null;
    com.codahale.metrics.Timer timer13 = consensusMessageStats6.getTimer(
        raftConsensusMessageType12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats6.getTimer(
        raftConsensusMessageType14);
    boolean boolean16 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) timer15);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext17 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents18 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle19 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext17, dependentComponents18);
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount20 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge21 = clusterMembersCount20.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge22 = clusterMembersCount20.unehlGauge();
    clusterMembersCount20.seuehl((int) (short) -1);
    clusterMembersCount20.sembs((int) (byte) 1);
    clusterMembersCount20.secvg(false);
    clusterMembersCount20.sembs(10);
    clusterMembersCount20.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge33 = clusterMembersCount20.covgGauge();
    boolean boolean34 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) intGauge33);
    java.lang.String str35 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str5, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(consensusMessageStats6);
    org.junit.Assert.assertNull(timer8);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertNull(timer13);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(lifecycle19);
    org.junit.Assert.assertNotNull(intGauge21);
    org.junit.Assert.assertNotNull(intGauge22);
    org.junit.Assert.assertNotNull(intGauge33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str35, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1163() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1163");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery24, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery30,
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    try {
      queryExecutionMonitorMetricsImpl15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1164() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1164");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    long long5 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (-1));
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
  }

  @Test
  public void test1165() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1165");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager8);
    java.lang.String str21 = jVMAdapterGarbageCollectionImpl19.moydmdmineString(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    java.lang.String str23 = jVMAdapterGarbageCollectionImpl19.moydmdmineString("");
    java.lang.String str25 = jVMAdapterGarbageCollectionImpl19.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.create");
    java.lang.String str27 = jVMAdapterGarbageCollectionImpl19.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str21, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "pool.<pool>.<database>.db.operation.count.create" + "'", str25,
        "pool.<pool>.<database>.db.operation.count.create");
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start"
            + "'", str27, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start");
  }

  @Test
  public void test1166() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1166");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager10);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1167() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1167");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors5, metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        databaseOperationCounts18);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors2, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        storeEntityCountersSupplier21, pageCacheTracer22);
    gdbStatsAdapter23.start();
    try {
      gdbStatsAdapter23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1168() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1168");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager12, memoryPools24);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier26 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12,
        transactionIdStoreSupplier26, transactionCounters27);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier29 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl1,
        metricRegistryManager12, coreNodeLeaderCheckSupplier29);
    try {
      consensusCoreNodeAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1169() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1169");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    long long2 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType3 = null;
    com.codahale.metrics.Timer timer4 = consensusMessageStats0.getTimer(raftConsensusMessageType3);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNull(timer4);
  }

  @Test
  public void test1170() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1170");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        storeEntityCountersSupplier17, pageCacheTracer18);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", monitors1, metricRegistryManager10);
    try {
      discoveryCoreNodeAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1171() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1171");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getFiveMinuteRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
  }

  @Test
  public void test1172() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1172");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats3 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long4 = consensusMessageStats3.dea();
    java.time.Duration duration5 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats3.sedaForDu(duration5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType7 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration5, raftConsensusMessageType7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertNotNull(consensusMessageStats3);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(duration5);
  }

  @Test
  public void test1173() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1173");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, memoryPools19,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools23, "vm.heap.used");
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier26 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", monitorsClusterConsensusImpl1,
        metricRegistryManager12, coreNodeLeaderCheckSupplier26);
    com.codahale.metrics.MetricFilter metricFilter28 = null;
    try {
      metricRegistryManager12.reomcnForMe(metricFilter28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1174() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1174");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterThreadMXImpl13.moydmdmineString("vm.heap.used");
    jVMAdapterThreadMXImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "vm.heap.used" + "'", str15,
        "vm.heap.used");
  }

  @Test
  public void test1175() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1175");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, transactionIdStoreSupplier17, transactionCounters18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager10, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.stop", metricRegistryManager10);
    try {
      jVMAdapterMemoryHeapImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1176() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1176");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, 2L, (int) (short) 100, compressionOption5,
          rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1177() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1177");
    }
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl0 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl();
    java.lang.String str2 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.create");
    java.lang.String str4 = memoryPoolsAdapterGdbImpl0.moydmdmineString("");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create"
            + "'", str2, "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pool.<pool>.<database>." + "'", str4,
        "pool.<pool>.<database>.");
  }

  @Test
  public void test1178() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1178");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl25 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery26, throwable27);
    try {
      queryExecutionMonitorMetricsImpl25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1179() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1179");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.secvg(false);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1180() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1180");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager12);
    try {
      jVMAdapterThreadMXImpl23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1181() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1181");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager12, pageCacheCounters28);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier30 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters31 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager12, transactionIdStoreSupplier30,
        transactionCounters31);
    try {
      globalTransactionStatsAdapter32.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1182() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1182");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getSizeCnt();
    long long7 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1183() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1183");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "db.query.execution", metricRegistryManager12, monitors30);
    try {
      jVMAdapterSDPImpl31.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1184() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1184");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryExecutionMonitorMetricsImpl13.startProcessing(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery16, "db.operation.count.start");
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType19 = queryExecutionMonitorMetricsImpl13.getGrp();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType19 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType19.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
  }

  @Test
  public void test1185() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1185");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl2,
        metricRegistryManager10, coreNodeLeaderCheckSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.", metricRegistryManager10, monitors21);
    try {
      boltAdapter22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1186() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1186");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (-1));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 100);
  }

  @Test
  public void test1187() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1187");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (-1L), (int) (byte) 10,
          compressionOption5, rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1188() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1188");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.clerut();
    syncStat0.norlad();
  }

  @Test
  public void test1189() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1189");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager7);
    jVMAdapterThreadMXImpl13.start();
    jVMAdapterThreadMXImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1190() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1190");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors5, metricRegistryManager12);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        monitors18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create",
        metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1191() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1191");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager9);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager9, memoryPools16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager9);
    try {
      metricRegistryManager9.reoForSt("pool.<pool>.<database>.db.operation.count.create");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1192() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1192");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType9);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
  }

  @Test
  public void test1193() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1193");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getICe();
    long long8 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys(0L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test1194() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1194");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors6, metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier25 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter26 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager14, webContainerThreadInfoSupplier25);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors3, metricRegistryManager14);
    boolean boolean29 = metricRegistryManager14.isEnlForSt("db.operation.count.drop");
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitorsClusterConsensusImpl1, metricRegistryManager14,
        coreNodeLeaderCheckSupplier30);
    try {
      consensusCoreNodeAdapter31.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
  }

  @Test
  public void test1195() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1195");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "globalMetrics", config8, path9);
  }

  @Test
  public void test1196() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1196");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier19 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionIdStoreSupplier19, transactionCounters20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager12, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager12);
    org.neo4j.scheduler.JobScheduler jobScheduler25 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12, jobScheduler25,
        fileSystemAbstraction26, databaseLayout27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager12);
    jVMAdapterThreadMXImpl29.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1197() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1197");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.suslrle();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.marc();
  }

  @Test
  public void test1198() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1198");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    java.lang.String str9 = metricsServiceExtensionFactory0.toString();
    java.util.function.LongSupplier longSupplier10 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter11 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier10);
    metricsMeter11.mark(100L);
    metricsMeter11.mark();
    metricsMeter11.mark((long) 10);
    double double17 = metricsMeter11.getMeanRate();
    double double18 = metricsMeter11.getMeanRate();
    metricsMeter11.mark();
    metricsMeter11.mark((long) '4');
    metricsMeter11.mark((long) 1);
    boolean boolean24 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter11);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext25 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents26 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle27 = metricsServiceExtensionFactory0.newInstance(
          extensionContext25, requiredComponents26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str9, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1199() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1199");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        storeEntityCountersSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        monitors23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitors1, metricRegistryManager11);
    try {
      txCatchupAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1200() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1200");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (short) 10);
  }

  @Test
  public void test1201() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1201");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager13, databaseOperationCounts20);
    gdbActionsAdapter21.start();
    gdbActionsAdapter21.start();
    boolean boolean24 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbActionsAdapter21);
    java.util.function.LongSupplier longSupplier25 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter26 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier25);
    metricsMeter26.mark(100L);
    metricsMeter26.mark();
    metricsMeter26.mark((long) 10);
    double double32 = metricsMeter26.getMeanRate();
    double double33 = metricsMeter26.getMeanRate();
    metricsMeter26.mark();
    metricsMeter26.mark();
    boolean boolean36 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter26);
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta37 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long38 = livingCacheMeta37.gehs();
    long long39 = livingCacheMeta37.getSizeCnt();
    long long40 = livingCacheMeta37.getLgBm();
    livingCacheMeta37.sememt(10);
    livingCacheMeta37.setabys((long) 100);
    long long45 = livingCacheMeta37.gehs();
    long long46 = livingCacheMeta37.getSizeCnt();
    boolean boolean47 = metricsServiceExtensionFactory0.equals((java.lang.Object) long46);
    java.lang.String str48 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    org.junit.Assert.assertTrue("'" + long46 + "' != '" + 100L + "'", long46 == 100L);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertEquals(
        "'" + str48 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str48, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1202() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1202");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        storeEntityCountersSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors22);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager10, pageCacheCounters24);
    try {
      neoPageCacheAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1203() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1203");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery28, false);
    try {
      queryExecutionMonitorMetricsImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1204() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1204");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager14, memoryPools26);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier28 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier28,
        pageCacheTracer29);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier31 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl3, metricRegistryManager14,
        coreNodeLeaderCheckSupplier31);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter34 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager14, checkpointCounters33);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier35 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter36 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager14, storeEntityCountersSupplier35);
    gdbElementStatsAdapter36.start();
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1205() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1205");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter13 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors4, metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors2, metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "databaseMetrics", metricRegistryManager10, storeEntityCountersSupplier15,
        pageCacheTracer16);
    try {
      gdbStatsAdapter17.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1206() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1206");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.drop", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString("neo4j.count.node");
    jVMAdapterGarbageCollectionImpl2.init();
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "neo4j.count.node" + "'", str4,
        "neo4j.count.node");
  }

  @Test
  public void test1207() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1207");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    long long4 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.setabys(1L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test1208() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1208");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager12, pageCacheCounters28);
    boolean boolean31 = metricRegistryManager12.isEnlForSt("vm.heap.max");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12);
    java.lang.String str34 = jVMAdapterPoolImpl32.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    java.lang.String str36 = jVMAdapterPoolImpl32.moydmdmineString("db.operation.count.drop");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged" + "'", str34,
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "db.operation.count.drop" + "'", str36,
        "db.operation.count.drop");
  }

  @Test
  public void test1209() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1209");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors6, metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter16 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors4, metricRegistryManager12);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter18 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        pageCacheCounters17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, webContainerThreadInfoSupplier19);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter22 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create",
        metricRegistryManager12, checkpointCounters21);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1210() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1210");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    java.lang.String str11 = jVMAdapterMemoryHeapImpl9.moydmdmineString("hi!");
    jVMAdapterMemoryHeapImpl9.start();
    jVMAdapterMemoryHeapImpl9.start();
    try {
      jVMAdapterMemoryHeapImpl9.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
  }

  @Test
  public void test1211() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1211");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        storeEntityCountersSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager13);
    boolean boolean27 = metricRegistryManager13.isEnlForSt("db.operation.count.drop");
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "", metricRegistryManager13, monitors28);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13,
        transactionLogCounters30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager13);
    org.neo4j.memory.MemoryPools memoryPools33 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl34 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.db.operation.count.drop", metricRegistryManager13, memoryPools33);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test1212() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1212");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager8, memoryPools14,
        "pool.<pool>.<database>.db.operation.count.start");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start", metricRegistryManager8);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1213() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1213");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter20 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors2, metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager10, webContainerThreadInfoSupplier21);
    jettyAdapter22.shutdown();
    jettyAdapter22.start();
    jettyAdapter22.start();
    jettyAdapter22.start();
    jettyAdapter22.start();
    jettyAdapter22.start();
    jettyAdapter22.start();
    try {
      jettyAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1214() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1214");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 1);
    long long5 = metricsMeter1.getCount();
    double double6 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test1215() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1215");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    memoryPoolsAdapterNeoStackImpl22.init();
    java.lang.String str25 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "dbms.pool.<pool>.neo4j.count.relationship");
    try {
      memoryPoolsAdapterNeoStackImpl22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str25, "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1216() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1216");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, (int) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1217() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1217");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.setabys((long) (short) -1);
    livingCacheMeta0.cacheHit();
    long long7 = livingCacheMeta0.getIEm();
    long long8 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test1218() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1218");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry6);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter9 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager7,
        transactionLogCounters8);
    gdbTransactionLogAdapter9.start();
    gdbTransactionLogAdapter9.init();
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1219() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1219");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager7);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter9 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        monitors1, metricRegistryManager7);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1220() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1220");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors2, metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager13, monitors27);
    java.lang.Class<?> wildcardClass29 = cypherPlanAdapter28.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(wildcardClass29);
  }

  @Test
  public void test1221() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1221");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, transactionIdStoreSupplier17, transactionCounters18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager10, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager10);
    jVMAdapterGarbageCollectionImpl22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1222() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1222");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.committed", metricRegistryManager10, webContainerThreadInfoSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.query.execution", metricRegistryManager10, jobScheduler24, fileSystemAbstraction25,
        databaseLayout26);
    try {
      gdbStoreStatsAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1223() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1223");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl((int) (byte) 1);
    clusterMembersCount0.seuehl(1);
    clusterMembersCount0.secvg(false);
  }

  @Test
  public void test1224() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1224");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    long long1 = submittedConsensusLogCommitIndexMetric0.comie();
    long long2 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) 1);
    long long5 = submittedConsensusLogCommitIndexMetric0.comie();
    long long6 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) (short) 100);
    long long9 = submittedConsensusLogCommitIndexMetric0.comie();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
  }

  @Test
  public void test1225() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1225");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier20, pageCacheTracer21);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager12, webContainerThreadInfoSupplier23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager12, storeEntityCountersSupplier25);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter27 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "hi!", monitors1, metricRegistryManager12);
    try {
      txCatchupAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1226() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1226");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl26 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, monitors25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11);
    try {
      jVMAdapterGarbageCollectionImpl27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1227() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1227");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager7);
    try {
      metricRegistryManager7.reoForSt(
          "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1228() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1228");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors6, metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter16 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors4, metricRegistryManager12);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter18 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        pageCacheCounters17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl22 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager12, monitors21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    try {
      queryExecutionMonitorMetricsImpl22.endSuccess(executingQuery23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1229() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1229");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        databaseOperationCounts17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager11, webContainerThreadInfoSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    try {
      jVMAdapterMBImpl21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1230() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1230");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test1231() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1231");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test1232() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1232");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType7, (int) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
  }

  @Test
  public void test1233() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1233");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) ' ');
  }

  @Test
  public void test1234() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1234");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sembe((long) (byte) 0);
    long long5 = livingCacheMeta0.gehs();
    livingCacheMeta0.setabys(0L);
    livingCacheMeta0.cacheMiss();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1235() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1235");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        storeEntityCountersSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager13);
    boolean boolean27 = metricRegistryManager13.isEnlForSt("db.operation.count.drop");
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "", metricRegistryManager13, monitors28);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13,
        transactionLogCounters30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier33 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters34 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter35 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager13,
        transactionIdStoreSupplier33, transactionCounters34);
    try {
      globalTransactionStatsAdapter35.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test1236() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1236");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager8);
    jVMAdapterFileStatImpl15.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1237() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1237");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery21, false);
    try {
      queryExecutionMonitorMetricsImpl15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1238() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1238");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "hi!", metricRegistryManager8);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter14 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "neo4j.count.relationship", metricRegistryManager8, checkpointCounters13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager8);
    try {
      jVMAdapterMemoryHeapImpl15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1239() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1239");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (-1));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 0);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) '#');
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 10);
  }

  @Test
  public void test1240() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1240");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors2, metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager9);
    java.lang.String str18 = jVMAdapterMBImpl16.moydmdmineString("neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "neo4j.count.relationship" + "'", str18,
        "neo4j.count.relationship");
  }

  @Test
  public void test1241() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1241");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager10);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier22 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl1, metricRegistryManager10,
        coreNodeLeaderCheckSupplier22);
    try {
      consensusCoreNodeAdapter23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1242() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1242");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6);
    jVMAdapterMBImpl10.start();
    jVMAdapterMBImpl10.start();
    try {
      jVMAdapterMBImpl10.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1243() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1243");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters25);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier27 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter28 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier27);
    jettyAdapter28.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1244() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1244");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (byte) 0);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge5 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge5);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1245() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1245");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats0.getTimer(raftConsensusMessageType5);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats7 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats7.getTimer(raftConsensusMessageType8);
    long long10 = consensusMessageStats7.dea();
    long long11 = consensusMessageStats7.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats12 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long13 = consensusMessageStats12.dea();
    java.time.Duration duration14 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats12.sedaForDu(duration14);
    consensusMessageStats7.sedaForDu(duration14);
    consensusMessageStats0.sedaForDu(duration14);
    long long18 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats19 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType20 = null;
    com.codahale.metrics.Timer timer21 = consensusMessageStats19.getTimer(
        raftConsensusMessageType20);
    long long22 = consensusMessageStats19.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats19.getTimer(
        raftConsensusMessageType23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats19.getTimer(
        raftConsensusMessageType25);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType27 = null;
    com.codahale.metrics.Timer timer28 = consensusMessageStats19.getTimer(
        raftConsensusMessageType27);
    java.time.Duration duration29 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats19.sedaForDu(duration29);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats31 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long32 = consensusMessageStats31.dea();
    com.codahale.metrics.Timer timer33 = consensusMessageStats31.getTimer();
    com.codahale.metrics.Timer timer34 = consensusMessageStats31.getTimer();
    java.time.Duration duration35 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats31.sedaForDu(duration35);
    consensusMessageStats19.sedaForDu(duration35);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats38 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType39 = null;
    com.codahale.metrics.Timer timer40 = consensusMessageStats38.getTimer(
        raftConsensusMessageType39);
    long long41 = consensusMessageStats38.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats42 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType43 = null;
    com.codahale.metrics.Timer timer44 = consensusMessageStats42.getTimer(
        raftConsensusMessageType43);
    long long45 = consensusMessageStats42.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType46 = null;
    com.codahale.metrics.Timer timer47 = consensusMessageStats42.getTimer(
        raftConsensusMessageType46);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType48 = null;
    com.codahale.metrics.Timer timer49 = consensusMessageStats42.getTimer(
        raftConsensusMessageType48);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType50 = null;
    com.codahale.metrics.Timer timer51 = consensusMessageStats42.getTimer(
        raftConsensusMessageType50);
    java.time.Duration duration52 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats42.sedaForDu(duration52);
    consensusMessageStats38.sedaForDu(duration52);
    consensusMessageStats19.sedaForDu(duration52);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType56 = null;
    com.codahale.metrics.Timer timer57 = consensusMessageStats19.getTimer(
        raftConsensusMessageType56);
    java.time.Duration duration58 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats19.sedaForDu(duration58);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType60 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration58, raftConsensusMessageType60);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertNotNull(consensusMessageStats7);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNotNull(duration14);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 600000L + "'", long18 == 600000L);
    org.junit.Assert.assertNotNull(consensusMessageStats19);
    org.junit.Assert.assertNull(timer21);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertNull(timer28);
    org.junit.Assert.assertNotNull(duration29);
    org.junit.Assert.assertNotNull(consensusMessageStats31);
    org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    org.junit.Assert.assertNotNull(timer33);
    org.junit.Assert.assertNotNull(timer34);
    org.junit.Assert.assertNotNull(duration35);
    org.junit.Assert.assertNotNull(consensusMessageStats38);
    org.junit.Assert.assertNull(timer40);
    org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats42);
    org.junit.Assert.assertNull(timer44);
    org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    org.junit.Assert.assertNull(timer47);
    org.junit.Assert.assertNull(timer49);
    org.junit.Assert.assertNull(timer51);
    org.junit.Assert.assertNotNull(duration52);
    org.junit.Assert.assertNull(timer57);
    org.junit.Assert.assertNotNull(duration58);
  }

  @Test
  public void test1246() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1246");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    consensusElectionTerm0.termLength((long) 100);
    consensusElectionTerm0.termLength((long) ' ');
  }

  @Test
  public void test1247() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1247");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats3 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long4 = consensusMessageStats3.dea();
    java.time.Duration duration5 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats3.sedaForDu(duration5);
    consensusMessageStats0.sedaForDu(duration5);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats8 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType9 = null;
    com.codahale.metrics.Timer timer10 = consensusMessageStats8.getTimer(raftConsensusMessageType9);
    long long11 = consensusMessageStats8.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType12 = null;
    com.codahale.metrics.Timer timer13 = consensusMessageStats8.getTimer(
        raftConsensusMessageType12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats8.getTimer(
        raftConsensusMessageType14);
    long long16 = consensusMessageStats8.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats17 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType18 = null;
    com.codahale.metrics.Timer timer19 = consensusMessageStats17.getTimer(
        raftConsensusMessageType18);
    long long20 = consensusMessageStats17.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType21 = null;
    com.codahale.metrics.Timer timer22 = consensusMessageStats17.getTimer(
        raftConsensusMessageType21);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats17.getTimer(
        raftConsensusMessageType23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats17.getTimer(
        raftConsensusMessageType25);
    java.time.Duration duration27 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats17.sedaForDu(duration27);
    consensusMessageStats8.sedaForDu(duration27);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats30 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long31 = consensusMessageStats30.dea();
    com.codahale.metrics.Timer timer32 = consensusMessageStats30.getTimer();
    com.codahale.metrics.Timer timer33 = consensusMessageStats30.getTimer();
    java.time.Duration duration34 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats30.sedaForDu(duration34);
    consensusMessageStats8.sedaForDu(duration34);
    consensusMessageStats0.sedaForDu(duration34);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats38 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType39 = null;
    com.codahale.metrics.Timer timer40 = consensusMessageStats38.getTimer(
        raftConsensusMessageType39);
    long long41 = consensusMessageStats38.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType42 = null;
    com.codahale.metrics.Timer timer43 = consensusMessageStats38.getTimer(
        raftConsensusMessageType42);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType44 = null;
    com.codahale.metrics.Timer timer45 = consensusMessageStats38.getTimer(
        raftConsensusMessageType44);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType46 = null;
    com.codahale.metrics.Timer timer47 = consensusMessageStats38.getTimer(
        raftConsensusMessageType46);
    java.time.Duration duration48 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats38.sedaForDu(duration48);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats50 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long51 = consensusMessageStats50.dea();
    com.codahale.metrics.Timer timer52 = consensusMessageStats50.getTimer();
    com.codahale.metrics.Timer timer53 = consensusMessageStats50.getTimer();
    java.time.Duration duration54 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats50.sedaForDu(duration54);
    consensusMessageStats38.sedaForDu(duration54);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType57 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration54, raftConsensusMessageType57);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertNotNull(consensusMessageStats3);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(duration5);
    org.junit.Assert.assertNotNull(consensusMessageStats8);
    org.junit.Assert.assertNull(timer10);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertNull(timer13);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats17);
    org.junit.Assert.assertNull(timer19);
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    org.junit.Assert.assertNull(timer22);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertNotNull(duration27);
    org.junit.Assert.assertNotNull(consensusMessageStats30);
    org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    org.junit.Assert.assertNotNull(timer32);
    org.junit.Assert.assertNotNull(timer33);
    org.junit.Assert.assertNotNull(duration34);
    org.junit.Assert.assertNotNull(consensusMessageStats38);
    org.junit.Assert.assertNull(timer40);
    org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    org.junit.Assert.assertNull(timer43);
    org.junit.Assert.assertNull(timer45);
    org.junit.Assert.assertNull(timer47);
    org.junit.Assert.assertNotNull(duration48);
    org.junit.Assert.assertNotNull(consensusMessageStats50);
    org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    org.junit.Assert.assertNotNull(timer52);
    org.junit.Assert.assertNotNull(timer53);
    org.junit.Assert.assertNotNull(duration54);
  }

  @Test
  public void test1248() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1248");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier26 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "", metricRegistryManager11, transactionIdStoreSupplier26, transactionCounters27);
    try {
      globalTransactionStatsAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1249() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1249");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager13, transactionLogCounters28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors31 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13,
        monitors31);
    try {
      jVMAdapterSDPImpl32.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1250() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1250");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager1, memoryPools2);
    try {
      memoryPoolsAdapterNeoStackImpl3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1251() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1251");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11,
        storeEntityCountersSupplier18, pageCacheTracer19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools21, "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier25 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager11,
        transactionIdStoreSupplier25, transactionCounters26);
    try {
      globalTransactionStatsAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1252() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1252");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.committed", metricRegistryManager13);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager13, memoryPools28,
        "pool.<pool>.<database>.db.operation.count.create");
    try {
      metricRegistryManager13.reoForSt(
          "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1253() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1253");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, databaseOperationCounts26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.create", metricRegistryManager13, memoryPools28,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "vm.heap.committed", metricRegistryManager13, memoryPools31);
    java.lang.String str34 = memoryPoolsAdapterNeoStackImpl32.moydmdmineString(
        "db.operation.count.failed");
    java.lang.String str36 = memoryPoolsAdapterNeoStackImpl32.moydmdmineString(
        "causal_clustering.core.discovery.cluster.members");
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str34,
        "dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.members"
            + "'", str36, "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.members");
  }

  @Test
  public void test1254() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1254");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier14 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter15 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager8, webContainerThreadInfoSupplier14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager8);
    java.lang.String str18 = jVMAdapterMBImpl16.moydmdmineString("dbms.pool.<pool>.vm.heap.used");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "dbms.pool.<pool>.vm.heap.used" + "'",
        str18, "dbms.pool.<pool>.vm.heap.used");
  }

  @Test
  public void test1255() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1255");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl11 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.recovered", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager8);
    jVMAdapterMBImpl13.start();
    jVMAdapterMBImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1256() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1256");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl25 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    java.lang.Throwable throwable27 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery26, throwable27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl25.endFailure(executingQuery29,
        "causal_clustering.core.discovery.cluster.converged");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryExecutionMonitorMetricsImpl25.startProcessing(executingQuery32);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl25.startExecution(executingQuery34);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1257() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1257");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager9);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager9, memoryPools16,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager9);
    jVMAdapterThreadMXImpl19.start();
    jVMAdapterThreadMXImpl19.start();
    try {
      jVMAdapterThreadMXImpl19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1258() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1258");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager8, monitors12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager8, memoryPools14,
        "causal_clustering.core.last_leader_message");
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager8,
        transactionLogCounters17);
    gdbTransactionLogAdapter18.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1259() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1259");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength(35L);
    consensusElectionTerm0.termLength(97L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
  }

  @Test
  public void test1260() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1260");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    livingCacheMeta0.cacheMiss();
    livingCacheMeta0.seeec((int) (byte) 0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1261() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1261");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager8);
    java.lang.String str17 = jVMAdapterGarbageCollectionImpl15.moydmdmineString(
        "causal_clustering.core.discovery.cluster.unreachable");
    java.lang.String str19 = jVMAdapterGarbageCollectionImpl15.moydmdmineString(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "causal_clustering.core.discovery.cluster.unreachable" + "'",
        str17, "causal_clustering.core.discovery.cluster.unreachable");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str19, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1262() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1262");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.recnam();
    syncStat0.recnam();
  }

  @Test
  public void test1263() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1263");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12);
    java.lang.String str32 = jVMAdapterMBImpl30.moydmdmineString("db.operation.count.drop");
    try {
      jVMAdapterMBImpl30.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "db.operation.count.drop" + "'", str32,
        "db.operation.count.drop");
  }

  @Test
  public void test1264() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1264");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric0.comie(0L);
    submittedConsensusLogCommitIndexMetric0.comie((long) (byte) 0);
    submittedConsensusLogCommitIndexMetric0.comie((long) (short) 100);
  }

  @Test
  public void test1265() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1265");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        storeEntityCountersSupplier21, pageCacheTracer22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionLogCounters24);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager13, databaseOperationCounts26);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter29 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "vm.heap.used", metricRegistryManager13, checkpointCounters28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager13);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1266() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1266");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        storeEntityCountersSupplier18, pageCacheTracer19);
    try {
      gdbStatsAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1267() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1267");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager7);
    com.codahale.metrics.MetricFilter metricFilter14 = null;
    try {
      metricRegistryManager7.reomcnForMe(metricFilter14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1268() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1268");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark();
    double double6 = metricsMeter1.getFifteenMinuteRate();
    metricsMeter1.mark(600000L);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test1269() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1269");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager9);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager9, memoryPools17);
    java.lang.String str20 = memoryPoolsAdapterNeoStackImpl18.moydmdmineString("vm.heap.committed");
    try {
      memoryPoolsAdapterNeoStackImpl18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str20 + "' != '" + "dbms.pool.<pool>.vm.heap.committed" + "'", str20,
        "dbms.pool.<pool>.vm.heap.committed");
  }

  @Test
  public void test1270() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1270");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getOneMinuteRate();
    double double15 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
  }

  @Test
  public void test1271() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1271");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(10L);
    consensusLogAdditions0.apeie((long) '#');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
  }

  @Test
  public void test1272() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1272");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1273() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1273");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric2 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric2.comie(0L);
    long long5 = submittedConsensusLogCommitIndexMetric2.comie();
    submittedConsensusLogCommitIndexMetric2.comie((long) (byte) 0);
    long long8 = submittedConsensusLogCommitIndexMetric2.comie();
    boolean boolean9 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) submittedConsensusLogCommitIndexMetric2);
    java.lang.String str10 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory11 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray14 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList15 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        globbingPatternArray14);
    com.codahale.metrics.MetricRegistry metricRegistry17 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager18 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        metricRegistry17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager18, memoryPools19,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager18, monitors22);
    boolean boolean24 = metricsServiceExtensionFactory11.equals(
        (java.lang.Object) metricRegistryManager18);
    boolean boolean25 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) metricsServiceExtensionFactory11);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext26 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents27 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle28 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext26, dependentComponents27);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "databaseMetrics" + "'", str1,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "databaseMetrics" + "'", str10,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(lifecycle28);
  }

  @Test
  public void test1274() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1274");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier19 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager10,
        transactionIdStoreSupplier19, transactionCounters20);
    com.codahale.metrics.MetricFilter metricFilter22 = null;
    try {
      metricRegistryManager10.reomcnForMe(metricFilter22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1275() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1275");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark();
    double double6 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark();
    double double8 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
  }

  @Test
  public void test1276() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1276");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery21, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery24, false);
    java.lang.String str28 = queryExecutionMonitorMetricsImpl15.moydmdmineString(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    java.lang.Throwable throwable30 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery29, throwable30);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '"
            + "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged" + "'", str28,
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test1277() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1277");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter13 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors4, metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors14);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, memoryPools16,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter20 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.create", metricRegistryManager10, pageCacheCounters19);
    try {
      neoPageCacheAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1278() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1278");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long9 = consensusElectionTerm0.getTermLength();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
  }

  @Test
  public void test1279() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1279");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    boolean boolean13 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager7);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray21 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList22 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        globbingPatternArray21);
    com.codahale.metrics.MetricRegistry metricRegistry24 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager25 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        metricRegistry24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager25, memoryPools26,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager25);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors18, metricRegistryManager25);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager25,
        databaseOperationCounts31);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier33 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter34 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager25, webContainerThreadInfoSupplier33);
    org.neo4j.memory.MemoryPools memoryPools35 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl36 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager25, memoryPools35);
    boolean boolean37 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager25);
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat38 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat38.marc();
    syncStat38.norlad();
    syncStat38.marc();
    syncStat38.suslrle();
    syncStat38.clerut();
    syncStat38.clerut();
    boolean boolean45 = metricsServiceExtensionFactory0.equals((java.lang.Object) syncStat38);
    java.lang.String str46 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str46, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1280() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1280");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter10 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors1, metricRegistryManager7);
    try {
      metricRegistryManager7.reoForSt("db.operation.count.drop");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1281() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1281");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1282() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1282");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.scheduler.JobScheduler jobScheduler27 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager12, jobScheduler27,
        fileSystemAbstraction28, databaseLayout29);
    org.neo4j.scheduler.JobScheduler jobScheduler31 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction32 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, jobScheduler31,
        fileSystemAbstraction32, databaseLayout33);
    try {
      gdbStoreStatsAdapter34.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1283() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1283");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager12, monitors27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl28.startExecution(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl28.beforeEnd(executingQuery31, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery34 = null;
    queryExecutionMonitorMetricsImpl28.beforeEnd(executingQuery34, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery37 = null;
    queryExecutionMonitorMetricsImpl28.startProcessing(executingQuery37);
    try {
      queryExecutionMonitorMetricsImpl28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1284() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1284");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier30);
    try {
      java.util.SortedSet<java.lang.String> strSet32 = metricRegistryManager12.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1285() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1285");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager12, pageCacheCounters24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager12);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter28 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.used", metricRegistryManager12, pageCacheCounters27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1286() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1286");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.seeec(10);
    long long8 = livingCacheMeta0.getIEm();
    long long9 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
  }

  @Test
  public void test1287() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1287");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryExecutionMonitorMetricsImpl13.startProcessing(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery16,
        "causal_clustering.core.discovery.cluster.members");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1288() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1288");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.drop", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString("");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str4,
        "dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
  }

  @Test
  public void test1289() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1289");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getIEm();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1290() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1290");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray12 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList13 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        globbingPatternArray12);
    com.codahale.metrics.MetricRegistry metricRegistry15 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager16 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        metricRegistry15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager16, monitors17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager16, storeEntityCountersSupplier19,
        pageCacheTracer20);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager16, webContainerThreadInfoSupplier22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager16, monitors24);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager16, storeEntityCountersSupplier26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager16,
        memoryPools28, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager16, memoryPools31);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl33 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager16);
    boolean boolean35 = metricRegistryManager16.isEnlForSt(
        "dbms.pool.<pool>.db.operation.count.failed");
    org.neo4j.monitoring.Monitors monitors36 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl37 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager16, monitors36);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl38 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl39 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager16);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters40 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter41 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager16, checkpointCounters40);
    org.junit.Assert.assertNotNull(globbingPatternArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test1291() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1291");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "neo4j.count.relationship", metricRegistryManager1);
    try {
      jVMAdapterFileStatImpl2.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1292() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1292");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.recovered", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.create", monitors1, metricRegistryManager9);
    try {
      discoveryCoreNodeAdapter14.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1293() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1293");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager6);
    jVMAdapterPoolImpl10.start();
    java.lang.String str13 = jVMAdapterPoolImpl10.moydmdmineString("");
    java.lang.String str15 = jVMAdapterPoolImpl10.moydmdmineString(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    try {
      jVMAdapterPoolImpl10.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str15, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1294() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1294");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, memoryPools19,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools23, "vm.heap.used");
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        memoryPools26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1295() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1295");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    java.lang.String str19 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    jVMAdapterPoolImpl13.start();
    java.lang.String str22 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed");
    java.lang.String str24 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "db.operation.count.drop" + "'", str17,
        "db.operation.count.drop");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str19,
        "dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str22 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed"
            + "'", str22, "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop"
            + "'", str24, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1296() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1296");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter21 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors3, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager11, webContainerThreadInfoSupplier22);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.start", metricRegistryManager11, webContainerThreadInfoSupplier24);
    try {
      jettyAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1297() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1297");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl9 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager6, monitors8);
    try {
      metricRegistryManager6.reoForSt("db.operation.count.start");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1298() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1298");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors2, metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager9, monitors15);
    try {
      jVMAdapterSDPImpl16.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1299() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1299");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid((long) (short) 100);
    petConsensusLogApplied0.apldid(1L);
  }

  @Test
  public void test1300() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1300");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.seeec((int) (byte) 100);
    long long6 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1301() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1301");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier26 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl5, metricRegistryManager14,
        coreNodeLeaderCheckSupplier26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14,
        storeEntityCountersSupplier29);
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager14, memoryPools31);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl33 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager14);
    jVMAdapterMemoryHeapImpl33.start();
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1302() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1302");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery26, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery29, false);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1303() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1303");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType9);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType11 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType11, (int) (byte) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
  }

  @Test
  public void test1304() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1304");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry6);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter9 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager7,
        transactionLogCounters8);
    gdbTransactionLogAdapter9.start();
    gdbTransactionLogAdapter9.start();
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1305() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1305");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager8);
    boolean boolean16 = metricRegistryManager8.isEnlForSt(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, databaseOperationCounts17);
    gdbActionsAdapter18.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1306() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1306");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors5, metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        databaseOperationCounts18);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12,
        transactionIdStoreSupplier20, transactionCounters21);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "databaseMetrics", monitors1, metricRegistryManager12);
    try {
      java.util.SortedSet<java.lang.String> strSet24 = metricRegistryManager12.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1307() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1307");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager7, storeEntityCountersSupplier13);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1308() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1308");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    java.lang.String str9 = metricsServiceExtensionFactory0.toString();
    java.util.function.LongSupplier longSupplier10 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter11 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier10);
    metricsMeter11.mark(100L);
    metricsMeter11.mark();
    metricsMeter11.mark((long) 10);
    double double17 = metricsMeter11.getMeanRate();
    double double18 = metricsMeter11.getMeanRate();
    metricsMeter11.mark();
    metricsMeter11.mark((long) '4');
    metricsMeter11.mark((long) 1);
    boolean boolean24 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter11);
    double double25 = metricsMeter11.getOneMinuteRate();
    double double26 = metricsMeter11.getOneMinuteRate();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str9, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
  }

  @Test
  public void test1309() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1309");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "db.operation.count.create", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11, "pool.<pool>.<database>.vm.heap.used",
        config13, path14);
  }

  @Test
  public void test1310() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1310");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.shutdown();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1311() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1311");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl11 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager7);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier12 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager7, transactionIdStoreSupplier12,
        transactionCounters13);
    com.codahale.metrics.MetricFilter metricFilter15 = null;
    try {
      metricRegistryManager7.reomcnForMe(metricFilter15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1312() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1312");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, (int) (byte) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1313() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1313");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        storeEntityCountersSupplier25);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "hi!", monitors6, metricRegistryManager15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.start", metricRegistryManager15);
    boolean boolean29 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) "db.operation.count.start");
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
  }

  @Test
  public void test1314() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1314");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getOneMinuteRate();
    double double10 = metricsMeter1.getOneMinuteRate();
    metricsMeter1.mark();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
  }

  @Test
  public void test1315() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1315");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.gehs();
    long long10 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.setabys(0L);
    long long13 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
  }

  @Test
  public void test1316() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1316");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    java.time.Duration duration2 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration2);
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats5 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long6 = consensusMessageStats5.dea();
    com.codahale.metrics.Timer timer7 = consensusMessageStats5.getTimer();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats5.getTimer(raftConsensusMessageType8);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats10 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType11 = null;
    com.codahale.metrics.Timer timer12 = consensusMessageStats10.getTimer(
        raftConsensusMessageType11);
    long long13 = consensusMessageStats10.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats10.getTimer(
        raftConsensusMessageType14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType16 = null;
    com.codahale.metrics.Timer timer17 = consensusMessageStats10.getTimer(
        raftConsensusMessageType16);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType18 = null;
    com.codahale.metrics.Timer timer19 = consensusMessageStats10.getTimer(
        raftConsensusMessageType18);
    java.time.Duration duration20 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats10.sedaForDu(duration20);
    consensusMessageStats5.sedaForDu(duration20);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration20, raftConsensusMessageType23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(duration2);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 600000L + "'", long4 == 600000L);
    org.junit.Assert.assertNotNull(consensusMessageStats5);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertNotNull(timer7);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertNotNull(consensusMessageStats10);
    org.junit.Assert.assertNull(timer12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertNull(timer17);
    org.junit.Assert.assertNull(timer19);
    org.junit.Assert.assertNotNull(duration20);
  }

  @Test
  public void test1317() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1317");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter17 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors8, metricRegistryManager14);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter18 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors6, metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "databaseMetrics", metricRegistryManager14, storeEntityCountersSupplier19,
        pageCacheTracer20);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "pool.<pool>.<database>.vm.heap.used", monitors3, metricRegistryManager14);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "db.query.execution", monitors1, metricRegistryManager14);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1318() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1318");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric0.comie(0L);
    long long3 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) (byte) 0);
    long long6 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) (-1));
    submittedConsensusLogCommitIndexMetric0.comie((long) (short) 1);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1319() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1319");
    }
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl0 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl();
    java.lang.String str2 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "causal_clustering.core.discovery.cluster.unreachable");
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "causal_clustering.core.discovery.cluster.unreachable" + "'", str2,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.junit.Assert.assertEquals("'" + str4 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4,
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
  }

  @Test
  public void test1320() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1320");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        databaseOperationCounts17);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors1, metricRegistryManager11);
    try {
      discoveryCoreNodeAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1321() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1321");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    queryExecutionMonitorMetricsImpl15.init();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery28);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1322() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1322");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager9, memoryPools15,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        pageCacheCounters22);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1323() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1323");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    java.lang.String str9 = metricsServiceExtensionFactory0.toString();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats10 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType11 = null;
    com.codahale.metrics.Timer timer12 = consensusMessageStats10.getTimer(
        raftConsensusMessageType11);
    long long13 = consensusMessageStats10.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats10.getTimer(
        raftConsensusMessageType14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType16 = null;
    com.codahale.metrics.Timer timer17 = consensusMessageStats10.getTimer(
        raftConsensusMessageType16);
    long long18 = consensusMessageStats10.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats19 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType20 = null;
    com.codahale.metrics.Timer timer21 = consensusMessageStats19.getTimer(
        raftConsensusMessageType20);
    long long22 = consensusMessageStats19.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats19.getTimer(
        raftConsensusMessageType23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats19.getTimer(
        raftConsensusMessageType25);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType27 = null;
    com.codahale.metrics.Timer timer28 = consensusMessageStats19.getTimer(
        raftConsensusMessageType27);
    java.time.Duration duration29 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats19.sedaForDu(duration29);
    consensusMessageStats10.sedaForDu(duration29);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats32 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType33 = null;
    com.codahale.metrics.Timer timer34 = consensusMessageStats32.getTimer(
        raftConsensusMessageType33);
    long long35 = consensusMessageStats32.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType36 = null;
    com.codahale.metrics.Timer timer37 = consensusMessageStats32.getTimer(
        raftConsensusMessageType36);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType38 = null;
    com.codahale.metrics.Timer timer39 = consensusMessageStats32.getTimer(
        raftConsensusMessageType38);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType40 = null;
    com.codahale.metrics.Timer timer41 = consensusMessageStats32.getTimer(
        raftConsensusMessageType40);
    java.time.Duration duration42 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats32.sedaForDu(duration42);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats44 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long45 = consensusMessageStats44.dea();
    com.codahale.metrics.Timer timer46 = consensusMessageStats44.getTimer();
    com.codahale.metrics.Timer timer47 = consensusMessageStats44.getTimer();
    java.time.Duration duration48 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats44.sedaForDu(duration48);
    consensusMessageStats32.sedaForDu(duration48);
    consensusMessageStats10.sedaForDu(duration48);
    boolean boolean52 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) consensusMessageStats10);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str9, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertNotNull(consensusMessageStats10);
    org.junit.Assert.assertNull(timer12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertNull(timer17);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats19);
    org.junit.Assert.assertNull(timer21);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertNull(timer28);
    org.junit.Assert.assertNotNull(duration29);
    org.junit.Assert.assertNotNull(consensusMessageStats32);
    org.junit.Assert.assertNull(timer34);
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertNull(timer37);
    org.junit.Assert.assertNull(timer39);
    org.junit.Assert.assertNull(timer41);
    org.junit.Assert.assertNotNull(duration42);
    org.junit.Assert.assertNotNull(consensusMessageStats44);
    org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    org.junit.Assert.assertNotNull(timer46);
    org.junit.Assert.assertNotNull(timer47);
    org.junit.Assert.assertNotNull(duration48);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
  }

  @Test
  public void test1324() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1324");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str3 = extensionFactoryGdbMetricsImpl0.toString();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager14, monitors22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    gdbTransactionLogAdapter25.start();
    boolean boolean27 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) gdbTransactionLogAdapter25);
    java.lang.String str28 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str3, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals(
        "'" + str28 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str28, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test1325() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1325");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager12, memoryPools20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.recovered", metricRegistryManager12, pageCacheCounters22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager12);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create",
        metricRegistryManager12, transactionLogCounters25);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1326() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1326");
    }
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors6, metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier25 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter26 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager14, webContainerThreadInfoSupplier25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.committed", metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier29 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter30 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.stop", metricRegistryManager14, webContainerThreadInfoSupplier29);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager14);
    jVMAdapterMemoryHeapImpl31.start();
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1327() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1327");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter22 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors4, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager12, webContainerThreadInfoSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager12);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager12, memoryPools26,
        "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1328() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1328");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid((long) (short) 100);
    petConsensusLogApplied0.apldid((long) 10);
    long long5 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid((long) (byte) -1);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
  }

  @Test
  public void test1329() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1329");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    long long6 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1330() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1330");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 1);
    long long5 = metricsMeter1.getCount();
    double double6 = metricsMeter1.getMeanRate();
    double double7 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
  }

  @Test
  public void test1331() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1331");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier26 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "", metricRegistryManager11, transactionIdStoreSupplier26, transactionCounters27);
    try {
      java.util.SortedSet<java.lang.String> strSet29 = metricRegistryManager11.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1332() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1332");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType5, (int) (short) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1333() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1333");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = null;
    org.neo4j.memory.MemoryPools memoryPools6 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl7 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.drop", metricRegistryManager5, memoryPools6);
    boolean boolean8 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager5);
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount9 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterMembersCount9.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge11 = clusterMembersCount9.unehlGauge();
    clusterMembersCount9.seuehl((int) (byte) 0);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge14 = clusterMembersCount9.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge15 = clusterMembersCount9.mebsGauge();
    boolean boolean16 = metricsServiceExtensionFactory0.equals((java.lang.Object) intGauge15);
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat17 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat17.marc();
    syncStat17.norlad();
    syncStat17.marc();
    syncStat17.recnam();
    syncStat17.clerut();
    syncStat17.suslrle();
    syncStat17.norlad();
    syncStat17.marc();
    boolean boolean26 = metricsServiceExtensionFactory0.equals((java.lang.Object) syncStat17);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(intGauge10);
    org.junit.Assert.assertNotNull(intGauge11);
    org.junit.Assert.assertNotNull(intGauge14);
    org.junit.Assert.assertNotNull(intGauge15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1334() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1334");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager12);
    jVMAdapterThreadMXImpl23.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1335() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1335");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getIEm();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.sembe(600000L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1336() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1336");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFifteenMinuteRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark();
    double double5 = metricsMeter1.getFiveMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
  }

  @Test
  public void test1337() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1337");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11, monitors27);
    java.lang.String str30 = cypherPlanAdapter28.moydmdmineString(
        "pool.<pool>.<database>.vm.heap.used");
    try {
      cypherPlanAdapter28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "pool.<pool>.<database>.vm.heap.used" + "'", str30,
        "pool.<pool>.<database>.vm.heap.used");
  }

  @Test
  public void test1338() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1338");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier24 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "db.operation.count.create", metricRegistryManager12, transactionIdStoreSupplier24,
        transactionCounters25);
    try {
      metricRegistryManager12.reoForSt("causal_clustering.core.last_leader_message");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1339() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1339");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery24, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    java.lang.Throwable throwable31 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery30, throwable31);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery33 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery33, true);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1340() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1340");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.setabys((long) (short) -1);
    livingCacheMeta0.cacheHit();
    long long7 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
  }

  @Test
  public void test1341() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1341");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager12, pageCacheCounters24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter27 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "globalMetrics", monitors1, metricRegistryManager12);
    try {
      txCatchupAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1342() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1342");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery30);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery32 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery32);
    try {
      queryExecutionMonitorMetricsImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1343() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1343");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager7);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter11 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.create", metricRegistryManager7, monitors10);
    try {
      boltAdapter11.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1344() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1344");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((-1L));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
  }

  @Test
  public void test1345() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1345");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager12, jobScheduler19,
        fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager12);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl26 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12,
        databaseOperationCounts28);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1346() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1346");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager14);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager14, jobScheduler22, fileSystemAbstraction23,
        databaseLayout24);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter26 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors4, metricRegistryManager14);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter28 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        pageCacheCounters27);
    org.neo4j.monitoring.Monitors monitors29 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14, monitors29);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager14);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1347() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1347");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    long long6 = livingCacheMeta0.gehs();
    long long7 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sembe((long) (short) 1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1348() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1348");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors2, metricRegistryManager9);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters16 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter17 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create", metricRegistryManager9,
        pageCacheCounters16);
    try {
      neoPageCacheAdapter17.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1349() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1349");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory1 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    boolean boolean14 = metricsServiceExtensionFactory1.equals(
        (java.lang.Object) metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager8);
    try {
      metricRegistryManager8.reoForSt("pool.<pool>.<database>.db.operation.count.drop");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1350() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1350");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager14, monitors22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "databaseMetrics", monitors3, metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager14, monitors28);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1351() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1351");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.util.function.LongSupplier longSupplier1 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter2 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier1);
    double double3 = metricsMeter2.getMeanRate();
    double double4 = metricsMeter2.getFiveMinuteRate();
    double double5 = metricsMeter2.getOneMinuteRate();
    boolean boolean6 = metricsServiceExtensionFactory0.equals((java.lang.Object) double5);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext7 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents8 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle9 = metricsServiceExtensionFactory0.newInstance(
          extensionContext7, requiredComponents8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1352() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1352");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl3 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager1, monitors2);
  }

  @Test
  public void test1353() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1353");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager10);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier22 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl1, metricRegistryManager10,
        coreNodeLeaderCheckSupplier22);
    try {
      consensusCoreNodeAdapter23.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1354() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1354");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager8);
    jVMAdapterGarbageCollectionImpl15.start();
    jVMAdapterGarbageCollectionImpl15.start();
    jVMAdapterGarbageCollectionImpl15.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1355() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1355");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.drop", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl23 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        monitors22);
    try {
      queryExecutionMonitorMetricsImpl23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1356() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1356");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager6);
    jVMAdapterThreadMXImpl8.start();
    try {
      jVMAdapterThreadMXImpl8.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1357() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1357");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager13);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13, memoryPools20,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager13);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager13, memoryPools24, "vm.heap.used");
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13,
        memoryPools27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier30 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters31 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "databaseMetrics", metricRegistryManager13, transactionIdStoreSupplier30,
        transactionCounters31);
    try {
      java.util.SortedSet<java.lang.String> strSet33 = metricRegistryManager13.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1358() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1358");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.cacheHit();
    long long5 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1359() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1359");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9,
        databaseOperationCounts20);
    boolean boolean23 = metricRegistryManager9.isEnlForSt("db.operation.count.stop");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
  }

  @Test
  public void test1360() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1360");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter16 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.failed", metricRegistryManager8, monitors15);
    java.lang.Class<?> wildcardClass17 = metricRegistryManager8.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test1361() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1361");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl6 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager5);
    java.lang.String str8 = jVMAdapterMBImpl6.moydmdmineString(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    java.lang.String str10 = jVMAdapterMBImpl6.moydmdmineString("neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str8, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "neo4j.count.relationship" + "'", str10,
        "neo4j.count.relationship");
  }

  @Test
  public void test1362() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1362");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager8, transactionLogCounters19);
    gdbTransactionLogAdapter20.start();
    gdbTransactionLogAdapter20.start();
    try {
      gdbTransactionLogAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1363() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1363");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry7);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry9);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "databaseMetrics", metricRegistryManager10, transactionLogCounters11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "", metricRegistryManager10, databaseOperationCounts13);
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1364() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1364");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents4 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext5 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle6 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents4, extensionContext5);
    gdbMetricsLifecycle6.shutdown();
    gdbMetricsLifecycle6.start();
    boolean boolean9 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbMetricsLifecycle6);
    try {
      gdbMetricsLifecycle6.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1365() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1365");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) ' ');
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge9);
  }

  @Test
  public void test1366() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1366");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager9, databaseOperationCounts16);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl20 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager9, memoryPools18,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager9, monitors21);
    try {
      jVMAdapterSDPImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1367() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1367");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16, "db.operation.count.failed", config18,
        path19);
  }

  @Test
  public void test1368() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1368");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed", monitors1,
        metricRegistryManager2);
    try {
      readReplicaNodeAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1369() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1369");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager8, memoryPools15);
    java.lang.String str18 = memoryPoolsAdapterNeoStackImpl16.moydmdmineString("vm.heap.max");
    java.lang.String str20 = memoryPoolsAdapterNeoStackImpl16.moydmdmineString("");
    java.lang.String str22 = memoryPoolsAdapterNeoStackImpl16.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "dbms.pool.<pool>.vm.heap.max" + "'",
        str18, "dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "dbms.pool.<pool>." + "'", str20,
        "dbms.pool.<pool>.");
    org.junit.Assert.assertEquals("'" + str22 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str22,
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1370() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1370");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors5, metricRegistryManager12);
    boolean boolean19 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) readReplicaNodeAdapter18);
    java.lang.String str20 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext21 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents22 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle23 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext21, dependentComponents22);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext24 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents25 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle26 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext24, dependentComponents25);
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "databaseMetrics" + "'", str20,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(lifecycle23);
    org.junit.Assert.assertNotNull(lifecycle26);
  }

  @Test
  public void test1371() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1371");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.recovered", metricRegistryManager8, databaseOperationCounts14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8, monitors16);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1372() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1372");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    metricsMeter5.mark();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1373() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1373");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 'a');
    consensusLogAdditions0.apeie((long) 10);
    consensusLogAdditions0.apeie((long) (byte) 0);
    long long7 = consensusLogAdditions0.apeie();
    long long8 = consensusLogAdditions0.apeie();
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test1374() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1374");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager12, memoryPools24);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.create", monitors2, metricRegistryManager12);
    org.neo4j.scheduler.JobScheduler jobScheduler27 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager12, jobScheduler27,
        fileSystemAbstraction28, databaseLayout29);
    try {
      gdbStoreStatsAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1375() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1375");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.start", metricRegistryManager9);
    java.lang.String str24 = jVMAdapterPoolImpl22.moydmdmineString("db.query.execution");
    java.lang.String str26 = jVMAdapterPoolImpl22.moydmdmineString("pool.<pool>.<database>.");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "db.query.execution" + "'", str24,
        "db.query.execution");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pool.<pool>.<database>." + "'", str26,
        "pool.<pool>.<database>.");
  }

  @Test
  public void test1376() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1376");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        storeEntityCountersSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager9);
    try {
      jVMAdapterFileStatImpl21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1377() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1377");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        databaseOperationCounts17);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors1, metricRegistryManager11);
    try {
      discoveryCoreNodeAdapter19.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1378() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1378");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory3 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors14);
    boolean boolean16 = metricsServiceExtensionFactory3.equals(
        (java.lang.Object) metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager10,
        monitors17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.vm.heap.used", monitorsClusterConsensusImpl1,
        metricRegistryManager10, coreNodeLeaderCheckSupplier19);
    try {
      consensusCoreNodeAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1379() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1379");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getIEm();
    long long4 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys(100L);
    long long7 = livingCacheMeta0.gehs();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1380() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1380");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.committed", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier28 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter29 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.stop", metricRegistryManager13, webContainerThreadInfoSupplier28);
    jettyAdapter29.start();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1381() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1381");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.seuehl((int) (byte) 100);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
  }

  @Test
  public void test1382() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1382");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter20 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager8, pageCacheCounters19);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1383() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1383");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier13 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter14 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager7, webContainerThreadInfoSupplier13);
    jettyAdapter14.start();
    try {
      jettyAdapter14.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1384() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1384");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        storeEntityCountersSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        monitors23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.vm.heap.used", monitors1, metricRegistryManager11);
    try {
      txCatchupAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1385() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1385");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getICe();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.setabys(35L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
  }

  @Test
  public void test1386() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1386");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors2, metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager13);
    try {
      jVMAdapterFileStatImpl27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1387() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1387");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9,
        storeEntityCountersSupplier16, pageCacheTracer17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager9, monitors19);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1388() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1388");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager10, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager10, memoryPools24);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1389() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1389");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.scheduler.JobScheduler jobScheduler28 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager13, jobScheduler28,
        fileSystemAbstraction29, databaseLayout30);
    org.neo4j.scheduler.JobScheduler jobScheduler32 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout34 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter35 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, jobScheduler32,
        fileSystemAbstraction33, databaseLayout34);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager13);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1390() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1390");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str3 = extensionFactoryGdbMetricsImpl0.toString();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl7, metricRegistryManager14,
        coreNodeLeaderCheckSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager14, monitors22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14,
        transactionLogCounters24);
    gdbTransactionLogAdapter25.start();
    boolean boolean27 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) gdbTransactionLogAdapter25);
    org.neo4j.monitoring.Monitors monitors31 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray34 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList35 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean36 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList35,
        globbingPatternArray34);
    com.codahale.metrics.MetricRegistry metricRegistry37 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager38 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList35,
        metricRegistry37);
    org.neo4j.memory.MemoryPools memoryPools39 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl41 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager38, memoryPools39,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl42 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager38);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter43 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors31, metricRegistryManager38);
    org.neo4j.monitoring.Monitors monitors44 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl45 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager38,
        monitors44);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl46 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager38);
    jVMAdapterGarbageCollectionImpl46.start();
    boolean boolean48 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) jVMAdapterGarbageCollectionImpl46);
    try {
      jVMAdapterGarbageCollectionImpl46.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str3, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
  }

  @Test
  public void test1391() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1391");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors2, metricRegistryManager9);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "neo4j.count.node", metricRegistryManager9, memoryPools16, "db.operation.count.stop");
    try {
      memoryPoolsAdapterGdbImpl18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1392() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1392");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark((long) (-1));
    double double4 = metricsMeter1.getFifteenMinuteRate();
    double double5 = metricsMeter1.getFifteenMinuteRate();
    double double6 = metricsMeter1.getMeanRate();
    double double7 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
  }

  @Test
  public void test1393() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1393");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter16 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors7, metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter17 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors5, metricRegistryManager13);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter19 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager13,
        pageCacheCounters18);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier20 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter21 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager13, webContainerThreadInfoSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl23 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop",
        metricRegistryManager13, monitors22);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager13,
        pageCacheCounters24);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1394() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1394");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools23, "db.operation.count.stop");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        storeEntityCountersSupplier26);
    gdbElementStatsAdapter27.shutdown();
    try {
      gdbElementStatsAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1395() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1395");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.recnam();
    syncStat0.clerut();
    syncStat0.marc();
    syncStat0.marc();
    syncStat0.suslrle();
  }

  @Test
  public void test1396() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1396");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager12, databaseOperationCounts17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager12, storeEntityCountersSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors21);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "globalMetrics", monitors2, metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1397() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1397");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter9 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager7);
    try {
      discoveryCoreNodeAdapter9.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1398() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1398");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager8, transactionLogCounters19);
    gdbTransactionLogAdapter20.start();
    gdbTransactionLogAdapter20.start();
    try {
      gdbTransactionLogAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1399() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1399");
    }
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors6, metricRegistryManager13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager13,
        databaseOperationCounts19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, memoryPools23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager13, monitors25);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier27 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter28 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.vm.heap.max", metricRegistryManager13,
        webContainerThreadInfoSupplier27);
    try {
      jettyAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1400() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1400");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager11);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier23 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager11, monitors25);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1401() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1401");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier26 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl1, metricRegistryManager12,
        coreNodeLeaderCheckSupplier26);
    try {
      consensusCoreNodeAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1402() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1402");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter22 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter24 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors2, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier26 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, storeEntityCountersSupplier26, pageCacheTracer27);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1403() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1403");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery30);
    try {
      queryExecutionMonitorMetricsImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1404() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1404");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager8, memoryPools14,
        "pool.<pool>.<database>.db.operation.count.start");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager8);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1405() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1405");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    java.lang.String str9 = metricsServiceExtensionFactory0.toString();
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat10 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat10.marc();
    syncStat10.norlad();
    syncStat10.marc();
    syncStat10.clerut();
    syncStat10.clerut();
    syncStat10.recnam();
    syncStat10.norlad();
    syncStat10.suslrle();
    boolean boolean19 = metricsServiceExtensionFactory0.equals((java.lang.Object) syncStat10);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str9, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test1406() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1406");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager9,
        monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager9);
    jVMAdapterMemoryHeapImpl18.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1407() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1407");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(10);
    livingCacheMeta0.setabys((long) 100);
    long long8 = livingCacheMeta0.gehs();
    long long9 = livingCacheMeta0.getSizeCnt();
    long long10 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) 'a');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
  }

  @Test
  public void test1408() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1408");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.getName();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.toString();
    java.lang.String str4 = metricsServiceExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "globalMetrics" + "'", str1,
        "globalMetrics");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str3, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "globalMetrics" + "'", str4,
        "globalMetrics");
  }

  @Test
  public void test1409() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1409");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge9);
    org.junit.Assert.assertNotNull(intGauge10);
  }

  @Test
  public void test1410() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1410");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.startExecution(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl18.startProcessing(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl18.beforeEnd(executingQuery23, false);
    try {
      queryExecutionMonitorMetricsImpl18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1411() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1411");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getIEm();
    long long3 = livingCacheMeta0.gems();
    long long4 = livingCacheMeta0.getICe();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test1412() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1412");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        storeEntityCountersSupplier17, pageCacheTracer18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        memoryPools20, "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter24 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager10,
        checkpointCounters23);
    try {
      java.util.SortedSet<java.lang.String> strSet25 = metricRegistryManager10.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1413() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1413");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats0.getTimer(raftConsensusMessageType8);
    java.time.Duration duration10 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration10);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats12 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long13 = consensusMessageStats12.dea();
    com.codahale.metrics.Timer timer14 = consensusMessageStats12.getTimer();
    com.codahale.metrics.Timer timer15 = consensusMessageStats12.getTimer();
    java.time.Duration duration16 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats12.sedaForDu(duration16);
    consensusMessageStats0.sedaForDu(duration16);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats19 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType20 = null;
    com.codahale.metrics.Timer timer21 = consensusMessageStats19.getTimer(
        raftConsensusMessageType20);
    long long22 = consensusMessageStats19.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats23 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType24 = null;
    com.codahale.metrics.Timer timer25 = consensusMessageStats23.getTimer(
        raftConsensusMessageType24);
    long long26 = consensusMessageStats23.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType27 = null;
    com.codahale.metrics.Timer timer28 = consensusMessageStats23.getTimer(
        raftConsensusMessageType27);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    com.codahale.metrics.Timer timer30 = consensusMessageStats23.getTimer(
        raftConsensusMessageType29);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType31 = null;
    com.codahale.metrics.Timer timer32 = consensusMessageStats23.getTimer(
        raftConsensusMessageType31);
    java.time.Duration duration33 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats23.sedaForDu(duration33);
    consensusMessageStats19.sedaForDu(duration33);
    consensusMessageStats0.sedaForDu(duration33);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType37 = null;
    com.codahale.metrics.Timer timer38 = consensusMessageStats0.getTimer(
        raftConsensusMessageType37);
    java.time.Duration duration39 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration39);
    com.codahale.metrics.Timer timer41 = consensusMessageStats0.getTimer();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertNotNull(duration10);
    org.junit.Assert.assertNotNull(consensusMessageStats12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNotNull(timer14);
    org.junit.Assert.assertNotNull(timer15);
    org.junit.Assert.assertNotNull(duration16);
    org.junit.Assert.assertNotNull(consensusMessageStats19);
    org.junit.Assert.assertNull(timer21);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats23);
    org.junit.Assert.assertNull(timer25);
    org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    org.junit.Assert.assertNull(timer28);
    org.junit.Assert.assertNull(timer30);
    org.junit.Assert.assertNull(timer32);
    org.junit.Assert.assertNotNull(duration33);
    org.junit.Assert.assertNull(timer38);
    org.junit.Assert.assertNotNull(duration39);
    org.junit.Assert.assertNotNull(timer41);
  }

  @Test
  public void test1414() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1414");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager12, memoryPools24);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier26 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier26,
        pageCacheTracer27);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter30 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.committed", metricRegistryManager12, pageCacheCounters29);
    org.neo4j.scheduler.JobScheduler jobScheduler31 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction32 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, jobScheduler31, fileSystemAbstraction32, databaseLayout33);
    try {
      gdbStoreStatsAdapter34.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1415() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1415");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager11, jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter28 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.db.operation.count.create", metricRegistryManager11, monitors27);
    org.neo4j.memory.MemoryPools memoryPools29 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager11, memoryPools29,
        "dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1416() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1416");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.lang.String str4 = metricsServiceExtensionFactory0.getName();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager11);
    jVMAdapterPoolImpl15.start();
    jVMAdapterPoolImpl15.start();
    boolean boolean18 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) jVMAdapterPoolImpl15);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "globalMetrics" + "'", str4,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test1417() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1417");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    queryExecutionMonitorMetricsImpl15.shutdown();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery23, true);
    try {
      queryExecutionMonitorMetricsImpl15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1418() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1418");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager7);
    jVMAdapterGarbageCollectionImpl13.shutdown();
    java.lang.String str16 = jVMAdapterGarbageCollectionImpl13.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    java.lang.String str18 = jVMAdapterGarbageCollectionImpl13.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str16 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged" + "'", str16,
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "causal_clustering.core.last_leader_message" + "'", str18,
        "causal_clustering.core.last_leader_message");
  }

  @Test
  public void test1419() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1419");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(10L);
    long long4 = consensusLogAdditions0.apeie();
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(0L);
    consensusLogAdditions0.apeie((long) ' ');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
  }

  @Test
  public void test1420() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1420");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager1, memoryPools2);
    java.lang.String str5 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.start");
    java.lang.String str7 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start"
            + "'", str5, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start");
    org.junit.Assert.assertEquals("'" + str7 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop"
            + "'", str7,
        "dbms.pool.<pool>.pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1421() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1421");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    long long4 = livingCacheMeta0.gehs();
    livingCacheMeta0.cacheMiss();
    long long6 = livingCacheMeta0.getSizeCnt();
    long long7 = livingCacheMeta0.gehs();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1422() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1422");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "", monitors1, metricRegistryManager2);
    readReplicaNodeAdapter3.shutdown();
    try {
      readReplicaNodeAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1423() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1423");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters22);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier24 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12,
        storeEntityCountersSupplier27);
    gdbElementStatsAdapter28.start();
    gdbElementStatsAdapter28.start();
    gdbElementStatsAdapter28.start();
    gdbElementStatsAdapter28.start();
    try {
      gdbElementStatsAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1424() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1424");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "hi!", metricRegistryManager9);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters14 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter15 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "neo4j.count.relationship", metricRegistryManager9, checkpointCounters14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager9);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter18 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager9, pageCacheCounters17);
    try {
      neoPageCacheAdapter18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1425() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1425");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors5, metricRegistryManager12);
    boolean boolean19 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) readReplicaNodeAdapter18);
    try {
      readReplicaNodeAdapter18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test1426() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1426");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    double double4 = metricsMeter1.getFiveMinuteRate();
    double double5 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
  }

  @Test
  public void test1427() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1427");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.marc();
  }

  @Test
  public void test1428() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1428");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters25);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter28 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager11, pageCacheCounters27);
    try {
      neoPageCacheAdapter28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1429() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1429");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) (byte) 0);
    double double15 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
  }

  @Test
  public void test1430() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1430");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1431() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1431");
    }
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl0 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl();
    java.lang.String str2 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "db.operation.count.failed");
    java.lang.Class<?> wildcardClass3 = memoryPoolsAdapterGdbImpl0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "pool.<pool>.<database>.db.operation.count.failed" + "'", str2,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(wildcardClass3);
  }

  @Test
  public void test1432() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1432");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFifteenMinuteRate();
    metricsMeter1.mark((long) 'a');
    double double5 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
  }

  @Test
  public void test1433() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1433");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1434() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1434");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
  }

  @Test
  public void test1435() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1435");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.gems();
    long long6 = livingCacheMeta0.gehs();
    long long7 = livingCacheMeta0.getICe();
    livingCacheMeta0.cacheMiss();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1436() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1436");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl16 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11, monitors15);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, memoryPools17,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter21 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.create", metricRegistryManager11, pageCacheCounters20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "vm.heap.max", metricRegistryManager11, jobScheduler22, fileSystemAbstraction23,
        databaseLayout24);
    try {
      gdbStoreStatsAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1437() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1437");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery24, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery27,
        "dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1438() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1438");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        storeEntityCountersSupplier18);
    gdbElementStatsAdapter19.start();
    gdbElementStatsAdapter19.start();
    gdbElementStatsAdapter19.start();
    gdbElementStatsAdapter19.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1439() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1439");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager11, storeEntityCountersSupplier19, pageCacheTracer20);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager11, webContainerThreadInfoSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        monitors26);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1440() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1440");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        storeEntityCountersSupplier19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager9,
        webContainerThreadInfoSupplier21);
    jettyAdapter22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1441() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1441");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, (int) (short) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test1442() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1442");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1443() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1443");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(10);
    livingCacheMeta0.setabys((long) 100);
    livingCacheMeta0.seeec(0);
    livingCacheMeta0.sembe(0L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1444() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1444");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    long long7 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) 1);
    consensusElectionTerm0.termLength((long) '4');
    consensusElectionTerm0.termLength((long) ' ');
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
  }

  @Test
  public void test1445() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1445");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors1, metricRegistryManager8);
    try {
      discoveryCoreNodeAdapter14.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1446() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1446");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager12, jobScheduler19,
        fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier24 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        memoryPools26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1447() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1447");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl11 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.recovered", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager8);
    java.lang.String str15 = jVMAdapterMBImpl13.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    java.lang.String str17 = jVMAdapterMBImpl13.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str15, "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "pool.<pool>.<database>.db.operation.count.failed" + "'", str17,
        "pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1448() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1448");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl8, metricRegistryManager15,
        coreNodeLeaderCheckSupplier21);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier23 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl6, metricRegistryManager15,
        coreNodeLeaderCheckSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager15);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors3, metricRegistryManager15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager15);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors28);
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1449() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1449");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.drop", metricRegistryManager9);
    jVMAdapterMBImpl20.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1450() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1450");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager8,
        storeEntityCountersSupplier15, pageCacheTracer16);
    try {
      gdbStatsAdapter17.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1451() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1451");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery24);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1452() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1452");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray12 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList13 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        globbingPatternArray12);
    com.codahale.metrics.MetricRegistry metricRegistry15 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager16 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList13,
        metricRegistry15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager16, monitors17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager16, storeEntityCountersSupplier19,
        pageCacheTracer20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager16,
        jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter27 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager16, monitors26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager16, memoryPools28);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager16, storeEntityCountersSupplier30,
        pageCacheTracer31);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier33 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter34 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl5, metricRegistryManager16,
        coreNodeLeaderCheckSupplier33);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters35 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter36 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager16, checkpointCounters35);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters37 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter38 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager16,
        checkpointCounters37);
    org.neo4j.monitoring.Monitors monitors39 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter40 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager16, monitors39);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier41 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer42 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter43 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager16,
        storeEntityCountersSupplier41, pageCacheTracer42);
    gdbStatsAdapter43.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1453() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1453");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.drop", metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager13, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.drop", metricRegistryManager13);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1454() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1454");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors5, metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager12);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, transactionLogCounters20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, storeEntityCountersSupplier23);
    gdbElementStatsAdapter24.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1455() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1455");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getOneMinuteRate();
    double double10 = metricsMeter1.getOneMinuteRate();
    double double11 = metricsMeter1.getOneMinuteRate();
    double double12 = metricsMeter1.getFifteenMinuteRate();
    long long13 = metricsMeter1.getCount();
    double double14 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
  }

  @Test
  public void test1456() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1456");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getOneMinuteRate();
    double double3 = metricsMeter1.getFifteenMinuteRate();
    metricsMeter1.mark(100L);
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
  }

  @Test
  public void test1457() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1457");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier16 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter17 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager10, webContainerThreadInfoSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager10, storeEntityCountersSupplier18, pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.failed", metricRegistryManager10, webContainerThreadInfoSupplier21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager10, storeEntityCountersSupplier23);
    try {
      gdbElementStatsAdapter24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1458() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1458");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager11, databaseOperationCounts16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager11, storeEntityCountersSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors20);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "globalMetrics", monitors1, metricRegistryManager11);
    try {
      java.util.SortedSet<java.lang.String> strSet23 = metricRegistryManager11.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1459() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1459");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier9 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager6, storeEntityCountersSupplier9,
        pageCacheTracer10);
    java.lang.String str13 = gdbStatsAdapter11.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.drop");
    gdbStatsAdapter11.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "pool.<pool>.<database>.db.operation.count.drop" + "'", str13,
        "pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test1460() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1460");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(10L);
    long long4 = consensusLogAdditions0.apeie();
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(0L);
    consensusLogAdditions0.apeie(1L);
    consensusLogAdditions0.apeie((long) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
  }

  @Test
  public void test1461() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1461");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer();
    long long6 = consensusMessageStats0.dea();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(timer5);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test1462() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1462");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    jVMAdapterMemoryHeapImpl9.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1463() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1463");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray13 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList14 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        globbingPatternArray13);
    com.codahale.metrics.MetricRegistry metricRegistry16 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager17 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        metricRegistry16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager17, monitors18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager17, storeEntityCountersSupplier20,
        pageCacheTracer21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager17,
        jobScheduler23, fileSystemAbstraction24, databaseLayout25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter28 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager17, monitors27);
    org.neo4j.memory.MemoryPools memoryPools29 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager17, memoryPools29);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier31 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager17, storeEntityCountersSupplier31,
        pageCacheTracer32);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier34 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl6, metricRegistryManager17,
        coreNodeLeaderCheckSupplier34);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters36 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter37 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager17, checkpointCounters36);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier38 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter39 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager17, storeEntityCountersSupplier38);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter40 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.failed", monitors2, metricRegistryManager17);
    org.neo4j.memory.MemoryPools memoryPools41 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl43 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.members",
        metricRegistryManager17, memoryPools41, "dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1464() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1464");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(10);
    long long6 = livingCacheMeta0.gems();
    long long7 = livingCacheMeta0.gehs();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1465() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1465");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter1 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter();
    boolean boolean2 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter1);
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.lang.String str4 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str4, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1466() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1466");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getIEm();
    livingCacheMeta0.setabys(1L);
    long long5 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1467() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1467");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.gems();
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.gems();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
  }

  @Test
  public void test1468() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1468");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    java.lang.String str24 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    try {
      memoryPoolsAdapterNeoStackImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str24,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test1469() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1469");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager13, monitors28);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.node", metricRegistryManager13, storeEntityCountersSupplier30,
        pageCacheTracer31);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.operation.count.start", metricRegistryManager13, transactionLogCounters33);
    gdbTransactionLogAdapter34.start();
    gdbTransactionLogAdapter34.start();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1470() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1470");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager8, monitors18);
    try {
      boltAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1471() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1471");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(10);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge13 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge14 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge13);
    org.junit.Assert.assertNotNull(intGauge14);
  }

  @Test
  public void test1472() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1472");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.create", metricRegistryManager11,
        transactionIdStoreSupplier20, transactionCounters21);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier23 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "neo4j.count.node", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11, memoryPools25);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1473() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1473");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (byte) 0);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge5 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge5);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1474() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1474");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        storeEntityCountersSupplier18, pageCacheTracer19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, transactionLogCounters21);
    gdbTransactionLogAdapter22.start();
    gdbTransactionLogAdapter22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1475() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1475");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.gehs();
    long long10 = livingCacheMeta0.gems();
    long long11 = livingCacheMeta0.getIEm();
    long long12 = livingCacheMeta0.getLgBm();
    long long13 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
  }

  @Test
  public void test1476() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1476");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge3 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge5 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge3);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge5);
    org.junit.Assert.assertNotNull(intGauge6);
  }

  @Test
  public void test1477() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1477");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager6);
    try {
      metricRegistryManager6.reoForSt(
          "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1478() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1478");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid((long) 1);
    long long3 = petConsensusLogApplied0.apldid();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1L + "'", long3 == 1L);
  }

  @Test
  public void test1479() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1479");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier30);
    gdbElementStatsAdapter31.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1480() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1480");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6);
    jVMAdapterMBImpl10.start();
    jVMAdapterMBImpl10.start();
    java.lang.String str14 = jVMAdapterMBImpl10.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str14, "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test1481() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1481");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark((long) (-1));
    double double4 = metricsMeter1.getFifteenMinuteRate();
    double double5 = metricsMeter1.getMeanRate();
    double double6 = metricsMeter1.getOneMinuteRate();
    long long7 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test1482() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1482");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl8, metricRegistryManager15,
        coreNodeLeaderCheckSupplier21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        storeEntityCountersSupplier23, pageCacheTracer24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, transactionLogCounters26);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager15, databaseOperationCounts28);
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl31 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager15, monitors30);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter33 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.failed", metricRegistryManager15, pageCacheCounters32);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter34 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitors1,
        metricRegistryManager15);
    try {
      java.util.SortedSet<java.lang.String> strSet35 = metricRegistryManager15.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1483() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1483");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory1 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    boolean boolean14 = metricsServiceExtensionFactory1.equals(
        (java.lang.Object) metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager8,
        monitors15);
    try {
      cypherPlanAdapter16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1484() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1484");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier19 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionIdStoreSupplier19, transactionCounters20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager12, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, databaseOperationCounts25);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier27 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter28 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager12,
        webContainerThreadInfoSupplier27);
    try {
      jettyAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1485() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1485");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl19 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        monitors18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl3,
        metricRegistryManager11, coreNodeLeaderCheckSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.", metricRegistryManager11, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.", metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1486() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1486");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    long long6 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.seeec((int) (short) 10);
    livingCacheMeta0.seeec((int) '#');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
  }

  @Test
  public void test1487() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1487");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.seeec((int) (byte) 100);
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1488() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1488");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager15,
        transactionLogCounters25);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier27 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter28 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl6, metricRegistryManager15,
        coreNodeLeaderCheckSupplier27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager15,
        storeEntityCountersSupplier30);
    org.neo4j.memory.MemoryPools memoryPools32 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl33 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager15, memoryPools32);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier34 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl1,
        metricRegistryManager15, coreNodeLeaderCheckSupplier34);
    java.lang.String str37 = consensusCoreNodeAdapter35.moydmdmineString(
        "causal_clustering.core.discovery.cluster.unreachable");
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "causal_clustering.core.discovery.cluster.unreachable" + "'",
        str37, "causal_clustering.core.discovery.cluster.unreachable");
  }

  @Test
  public void test1489() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1489");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager14, pageCacheCounters26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager14);
    org.neo4j.monitoring.Monitors monitors29 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter30 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager14, monitors29);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.drop", monitors2, metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager14);
    try {
      java.util.SortedSet<java.lang.String> strSet33 = metricRegistryManager14.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1490() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1490");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager8, memoryPools15);
    java.lang.String str18 = memoryPoolsAdapterNeoStackImpl16.moydmdmineString("vm.heap.max");
    java.lang.String str20 = memoryPoolsAdapterNeoStackImpl16.moydmdmineString("vm.heap.used");
    try {
      memoryPoolsAdapterNeoStackImpl16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "dbms.pool.<pool>.vm.heap.max" + "'",
        str18, "dbms.pool.<pool>.vm.heap.max");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "dbms.pool.<pool>.vm.heap.used" + "'",
        str20, "dbms.pool.<pool>.vm.heap.used");
  }

  @Test
  public void test1491() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1491");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark();
    double double6 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark();
    double double8 = metricsMeter1.getOneMinuteRate();
    metricsMeter1.mark((long) ' ');
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
  }

  @Test
  public void test1492() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1492");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager11, monitors21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager11, memoryPools23);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.create", monitors1, metricRegistryManager11);
    try {
      readReplicaNodeAdapter25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1493() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1493");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager8, monitors12);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors1, metricRegistryManager8);
    try {
      readReplicaNodeAdapter14.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1494() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1494");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test1495() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1495");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    org.neo4j.memory.MemoryPools memoryPools6 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl8 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager5, memoryPools6,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.lang.String str10 = memoryPoolsAdapterGdbImpl8.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    java.lang.String str12 = memoryPoolsAdapterGdbImpl8.moydmdmineString("db.query.execution");
    try {
      memoryPoolsAdapterGdbImpl8.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str10, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "pool.<pool>.<database>.db.query.execution" + "'", str12,
        "pool.<pool>.<database>.db.query.execution");
  }

  @Test
  public void test1496() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1496");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid(100L);
    petConsensusLogApplied0.apldid(1L);
    petConsensusLogApplied0.apldid((long) (byte) 100);
  }

  @Test
  public void test1497() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1497");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "", metricRegistryManager10, monitors18);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter21 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager10, checkpointCounters20);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1498() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1498");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager9);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager9, memoryPools17);
    java.lang.String str20 = memoryPoolsAdapterNeoStackImpl18.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str22 = memoryPoolsAdapterNeoStackImpl18.moydmdmineString("globalMetrics");
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType23 = memoryPoolsAdapterNeoStackImpl18.getGrp();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str20,
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "dbms.pool.<pool>.globalMetrics" + "'",
        str22, "dbms.pool.<pool>.globalMetrics");
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType23 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType23.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
  }

  @Test
  public void test1499() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1499");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager10, jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters25);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter28 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        pageCacheCounters27);
    try {
      neoPageCacheAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1500() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1500");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    try {
      queryExecutionMonitorMetricsImpl24.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }
}


package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest1 {

  public static boolean debug = false;

  @Test
  public void test0501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0501");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats6 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long7 = consensusMessageStats6.dea();
    com.codahale.metrics.Timer timer8 = consensusMessageStats6.getTimer();
    com.codahale.metrics.Timer timer9 = consensusMessageStats6.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats10 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType11 = null;
    com.codahale.metrics.Timer timer12 = consensusMessageStats10.getTimer(
        raftConsensusMessageType11);
    long long13 = consensusMessageStats10.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats10.getTimer(
        raftConsensusMessageType14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType16 = null;
    com.codahale.metrics.Timer timer17 = consensusMessageStats10.getTimer(
        raftConsensusMessageType16);
    long long18 = consensusMessageStats10.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats19 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType20 = null;
    com.codahale.metrics.Timer timer21 = consensusMessageStats19.getTimer(
        raftConsensusMessageType20);
    long long22 = consensusMessageStats19.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats19.getTimer(
        raftConsensusMessageType23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats19.getTimer(
        raftConsensusMessageType25);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType27 = null;
    com.codahale.metrics.Timer timer28 = consensusMessageStats19.getTimer(
        raftConsensusMessageType27);
    java.time.Duration duration29 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats19.sedaForDu(duration29);
    consensusMessageStats10.sedaForDu(duration29);
    consensusMessageStats6.sedaForDu(duration29);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType33 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration29, raftConsensusMessageType33);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(timer5);
    org.junit.Assert.assertNotNull(consensusMessageStats6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertNotNull(timer8);
    org.junit.Assert.assertNotNull(timer9);
    org.junit.Assert.assertNotNull(consensusMessageStats10);
    org.junit.Assert.assertNull(timer12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertNull(timer17);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats19);
    org.junit.Assert.assertNull(timer21);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertNull(timer28);
    org.junit.Assert.assertNotNull(duration29);
  }

  @Test
  public void test0502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0502");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter10 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors1, metricRegistryManager7);
    try {
      txCatchupAdapter10.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0503");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors2, metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager9, storeEntityCountersSupplier16);
    gdbElementStatsAdapter17.start();
    try {
      gdbElementStatsAdapter17.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0504");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
  }

  @Test
  public void test0505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0505");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter3 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager1, monitors2);
    cypherPlanAdapter3.init();
    try {
      cypherPlanAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0506");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt((int) (short) -1);
    livingCacheMeta0.cacheMiss();
    long long8 = livingCacheMeta0.gehs();
    livingCacheMeta0.setabys((long) '#');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test0507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0507");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    consensusMessageStats0.sedaForDu(duration19);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats22 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats22.getTimer(
        raftConsensusMessageType23);
    long long25 = consensusMessageStats22.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType26 = null;
    com.codahale.metrics.Timer timer27 = consensusMessageStats22.getTimer(
        raftConsensusMessageType26);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType28 = null;
    com.codahale.metrics.Timer timer29 = consensusMessageStats22.getTimer(
        raftConsensusMessageType28);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType30 = null;
    com.codahale.metrics.Timer timer31 = consensusMessageStats22.getTimer(
        raftConsensusMessageType30);
    java.time.Duration duration32 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats22.sedaForDu(duration32);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats34 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long35 = consensusMessageStats34.dea();
    com.codahale.metrics.Timer timer36 = consensusMessageStats34.getTimer();
    com.codahale.metrics.Timer timer37 = consensusMessageStats34.getTimer();
    java.time.Duration duration38 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats34.sedaForDu(duration38);
    consensusMessageStats22.sedaForDu(duration38);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType41 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration38, raftConsensusMessageType41);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertNotNull(consensusMessageStats22);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    org.junit.Assert.assertNull(timer27);
    org.junit.Assert.assertNull(timer29);
    org.junit.Assert.assertNull(timer31);
    org.junit.Assert.assertNotNull(duration32);
    org.junit.Assert.assertNotNull(consensusMessageStats34);
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertNotNull(timer36);
    org.junit.Assert.assertNotNull(timer37);
    org.junit.Assert.assertNotNull(duration38);
  }

  @Test
  public void test0508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0508");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "hi!", metricRegistryManager1);
    jVMAdapterFileStatImpl2.init();
    try {
      jVMAdapterFileStatImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0509");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager7, monitors11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager7, memoryPools13,
        "causal_clustering.core.last_leader_message");
    java.lang.String str17 = memoryPoolsAdapterGdbImpl15.moydmdmineString(
        "db.operation.count.create");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "pool.<pool>.<database>.db.operation.count.create" + "'", str17,
        "pool.<pool>.<database>.db.operation.count.create");
  }

  @Test
  public void test0510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0510");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter3 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager1, monitors2);
    boltAdapter3.init();
    try {
      boltAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0511");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter9 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager7);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType10 = discoveryCoreNodeAdapter9.getGrp();
    try {
      discoveryCoreNodeAdapter9.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType10 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_CLUSTER + "'",
        enterpriseMetricsType10.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_CLUSTER));
  }

  @Test
  public void test0512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0512");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter18 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors17);
    try {
      metricRegistryManager9.reoForSt("dbms.pool.<pool>.vm.heap.used");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0513");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.clerut();
    syncStat0.suslrle();
  }

  @Test
  public void test0514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0514");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager10, monitors20);
    try {
      cypherPlanAdapter21.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0515");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        storeEntityCountersSupplier19, pageCacheTracer20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9);
    try {
      jVMAdapterGarbageCollectionImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0516");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.recnam();
    syncStat0.recnam();
    syncStat0.suslrle();
  }

  @Test
  public void test0517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0517");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.members");
    jVMAdapterPoolImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "causal_clustering.core.discovery.cluster.members" + "'", str17,
        "causal_clustering.core.discovery.cluster.members");
  }

  @Test
  public void test0518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0518");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0519");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, memoryPools22,
        "pool.<pool>.<database>.db.operation.count.start");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "globalMetrics", metricRegistryManager10, storeEntityCountersSupplier25, pageCacheTracer26);
    java.lang.String str29 = gdbStatsAdapter27.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str29 + "' != '" + "pool.<pool>.<database>.db.operation.count.drop" + "'", str29,
        "pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test0520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0520");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager6);
    jVMAdapterThreadMXImpl8.init();
    try {
      jVMAdapterThreadMXImpl8.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0521");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.stop();
  }

  @Test
  public void test0522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0522");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier18 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, transactionIdStoreSupplier18, transactionCounters19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager11, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager11);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager11, jobScheduler24,
        fileSystemAbstraction25, databaseLayout26);
    try {
      gdbStoreStatsAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0523");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    java.lang.String str8 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "causal_clustering.core.last_leader_message" + "'", str6,
        "causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str8 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str8,
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
  }

  @Test
  public void test0524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0524");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl4, metricRegistryManager13,
        coreNodeLeaderCheckSupplier21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager13);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter26 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13,
        checkpointCounters25);
    java.lang.String str28 = checkpointCounterAdapter26.moydmdmineString("globalMetrics");
    try {
      checkpointCounterAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "globalMetrics" + "'", str28,
        "globalMetrics");
  }

  @Test
  public void test0525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0525");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager8, memoryPools14,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager8,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    try {
      gdbStoreStatsAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0526");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType7, (int) (byte) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
  }

  @Test
  public void test0527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0527");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager12);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier27 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter28 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.query.execution", monitorsClusterConsensusImpl1,
        metricRegistryManager12, coreNodeLeaderCheckSupplier27);
    try {
      consensusCoreNodeAdapter28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0528");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType3, (-1));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test0529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0529");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery17, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery20, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery23, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    try {
      queryExecutionMonitorMetricsImpl13.endSuccess(executingQuery26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0530");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters21);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier23 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager11);
    jVMAdapterFileStatImpl25.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0531");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager13, databaseOperationCounts20);
    gdbActionsAdapter21.start();
    gdbActionsAdapter21.start();
    boolean boolean24 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbActionsAdapter21);
    java.util.function.LongSupplier longSupplier25 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter26 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier25);
    metricsMeter26.mark(100L);
    metricsMeter26.mark();
    metricsMeter26.mark((long) 10);
    double double32 = metricsMeter26.getMeanRate();
    double double33 = metricsMeter26.getMeanRate();
    metricsMeter26.mark();
    metricsMeter26.mark();
    boolean boolean36 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter26);
    double double37 = metricsMeter26.getFifteenMinuteRate();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
  }

  @Test
  public void test0532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0532");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters22);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "databaseMetrics", monitors1, metricRegistryManager12);
    try {
      discoveryCoreNodeAdapter24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0533");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, storeEntityCountersSupplier20, pageCacheTracer21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier24 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10,
        storeEntityCountersSupplier24, pageCacheTracer25);
    gdbStatsAdapter26.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0534");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        storeEntityCountersSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager9);
    try {
      jVMAdapterGarbageCollectionImpl21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0535");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools23, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter27 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager11, monitors26);
    com.codahale.metrics.MetricFilter metricFilter28 = null;
    try {
      metricRegistryManager11.reomcnForMe(metricFilter28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0536");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString("db.query.execution");
    jVMAdapterPoolImpl13.init();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "db.query.execution" + "'", str15,
        "db.query.execution");
  }

  @Test
  public void test0537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0537");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager14, transactionLogCounters25);
    gdbTransactionLogAdapter26.start();
    boolean boolean28 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter26);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType29 = gdbTransactionLogAdapter26.getGrp();
    try {
      gdbTransactionLogAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType29 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType29.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
  }

  @Test
  public void test0538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0538");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13,
        transactionLogCounters23);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier25 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl4, metricRegistryManager13,
        coreNodeLeaderCheckSupplier25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13,
        storeEntityCountersSupplier28);
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager13, memoryPools30);
    try {
      memoryPoolsAdapterNeoStackImpl31.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0539");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        storeEntityCountersSupplier17, pageCacheTracer18);
    gdbStatsAdapter19.start();
    gdbStatsAdapter19.start();
    try {
      gdbStatsAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0540");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.setabys((long) (byte) 1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test0541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0541");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.setabys(0L);
    long long13 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) '4');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
  }

  @Test
  public void test0542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0542");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier15 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter16 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager9, webContainerThreadInfoSupplier15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager9);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter19 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager9, pageCacheCounters18);
    try {
      neoPageCacheAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0543");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (byte) 0);
    clusterMembersCount0.seuehl((int) (short) 10);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test0544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0544");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(10L);
    long long4 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) (byte) -1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
  }

  @Test
  public void test0545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0545");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "db.operation.count.recovered");
    java.lang.String str8 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    try {
      jVMAdapterGarbageCollectionImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "db.operation.count.recovered" + "'",
        str6, "db.operation.count.recovered");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "causal_clustering.core.last_leader_message" + "'", str8,
        "causal_clustering.core.last_leader_message");
  }

  @Test
  public void test0546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0546");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter22 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors4, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager12, webContainerThreadInfoSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12,
        databaseOperationCounts26);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType28 = gdbActionsAdapter27.getGrp();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType28 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType28.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
  }

  @Test
  public void test0547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0547");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.gehs();
    long long10 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test0548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0548");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution", metricRegistryManager7);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager7, transactionLogCounters10);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0549");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter21 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors3, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager11, webContainerThreadInfoSupplier22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.drop", metricRegistryManager11);
    java.lang.String str26 = jVMAdapterFileStatImpl24.moydmdmineString("db.operation.count.stop");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "db.operation.count.stop" + "'", str26,
        "db.operation.count.stop");
  }

  @Test
  public void test0550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0550");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier24 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "db.operation.count.create", metricRegistryManager12, transactionIdStoreSupplier24,
        transactionCounters25);
    try {
      globalTransactionStatsAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0551");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier18 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, transactionIdStoreSupplier18, transactionCounters19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager11, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, databaseOperationCounts24);
    gdbActionsAdapter25.start();
    gdbActionsAdapter25.start();
    try {
      gdbActionsAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0552");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "pool.<pool>.<database>.db.operation.count.failed");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0553");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getICe();
    long long8 = livingCacheMeta0.getICe();
    livingCacheMeta0.setabys((long) (short) 0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test0554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0554");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, memoryPools22,
        "pool.<pool>.<database>.db.operation.count.start");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "globalMetrics", metricRegistryManager10, storeEntityCountersSupplier25, pageCacheTracer26);
    try {
      gdbStatsAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0555");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryExecutionMonitorMetricsImpl13.startProcessing(executingQuery14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl13.startProcessing(executingQuery16);
    try {
      queryExecutionMonitorMetricsImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0556");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge3 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.sembs(0);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge3);
  }

  @Test
  public void test0557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0557");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl19 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        monitors18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl3,
        metricRegistryManager11, coreNodeLeaderCheckSupplier20);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager11,
        databaseOperationCounts22);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier24 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionIdStoreSupplier24, transactionCounters25);
    try {
      globalTransactionStatsAdapter26.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0558");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9);
    try {
      jVMAdapterMBImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0559");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager8, transactionLogCounters19);
    gdbTransactionLogAdapter20.start();
    gdbTransactionLogAdapter20.start();
    gdbTransactionLogAdapter20.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0560");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        storeEntityCountersSupplier18);
    gdbElementStatsAdapter19.start();
    gdbElementStatsAdapter19.shutdown();
    gdbElementStatsAdapter19.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0561");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager10, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager10, monitors24);
    try {
      boltAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0562");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    long long1 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) 'a');
    long long4 = submittedConsensusLogCommitIndexMetric0.comie();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 97L + "'", long4 == 97L);
  }

  @Test
  public void test0563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0563");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.query.execution", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl18.endFailure(executingQuery19,
        "causal_clustering.core.last_leader_message");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl18.startProcessing(executingQuery22);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0564");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter20 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors2, metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager10, webContainerThreadInfoSupplier21);
    jettyAdapter22.shutdown();
    jettyAdapter22.start();
    jettyAdapter22.start();
    jettyAdapter22.start();
    java.lang.String str28 = jettyAdapter22.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    jettyAdapter22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged" + "'", str28,
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test0565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0565");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager10);
    java.lang.String str26 = jVMAdapterMBImpl24.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "causal_clustering.core.last_leader_message" + "'", str26,
        "causal_clustering.core.last_leader_message");
  }

  @Test
  public void test0566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0566");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType3, (int) (short) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test0567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0567");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    metricsMeter1.mark();
    double double8 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
  }

  @Test
  public void test0568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0568");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager9, transactionLogCounters20);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter23 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager9,
        checkpointCounters22);
    try {
      checkpointCounterAdapter23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0569");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer3 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats0.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats5 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats5.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats5.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats21 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long22 = consensusMessageStats21.dea();
    com.codahale.metrics.Timer timer23 = consensusMessageStats21.getTimer();
    com.codahale.metrics.Timer timer24 = consensusMessageStats21.getTimer();
    java.time.Duration duration25 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats21.sedaForDu(duration25);
    consensusMessageStats9.sedaForDu(duration25);
    consensusMessageStats5.sedaForDu(duration25);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration25, raftConsensusMessageType29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertNotNull(consensusMessageStats5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertNotNull(consensusMessageStats21);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertNotNull(timer23);
    org.junit.Assert.assertNotNull(timer24);
    org.junit.Assert.assertNotNull(duration25);
  }

  @Test
  public void test0570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0570");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter9 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager7);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType10 = discoveryCoreNodeAdapter9.getGrp();
    try {
      discoveryCoreNodeAdapter9.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType10 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_CLUSTER + "'",
        enterpriseMetricsType10.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_CLUSTER));
  }

  @Test
  public void test0571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0571");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    queryExecutionMonitorMetricsImpl15.shutdown();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery23, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery26, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery29);
    java.lang.String str32 = queryExecutionMonitorMetricsImpl15.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.create");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "pool.<pool>.<database>.db.operation.count.create" + "'", str32,
        "pool.<pool>.<database>.db.operation.count.create");
  }

  @Test
  public void test0572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0572");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 100);
    long long4 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test0573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0573");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(10);
    livingCacheMeta0.setabys((long) 100);
    livingCacheMeta0.seeec(0);
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test0574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0574");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry6);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry8);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "databaseMetrics", metricRegistryManager9, transactionLogCounters10);
    gdbTransactionLogAdapter11.start();
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test0575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0575");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter13 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors4, metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors14);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, memoryPools16,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager10);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0576");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager8);
    java.lang.String str21 = jVMAdapterGarbageCollectionImpl19.moydmdmineString(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    java.lang.String str23 = jVMAdapterGarbageCollectionImpl19.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str21, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str23, "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test0577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0577");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "db.operation.count.recovered");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0578");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager10, memoryPools22);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier24 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier24,
        pageCacheTracer25);
    try {
      gdbStatsAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0579");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager10, monitors21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager10, monitors24);
    try {
      boltAdapter25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0580");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.suslrle();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.marc();
    syncStat0.norlad();
  }

  @Test
  public void test0581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0581");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "hi!", metricRegistryManager1);
    try {
      jVMAdapterFileStatImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0582");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager7);
    try {
      jVMAdapterFileStatImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0583");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.sembe((long) 0);
    long long8 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.setabys(0L);
    long long13 = livingCacheMeta0.gehs();
    long long14 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
  }

  @Test
  public void test0584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0584");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager10, monitors14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, memoryPools17,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools21, "vm.heap.used");
    try {
      memoryPoolsAdapterGdbImpl23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0585");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier7 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters8 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter9 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager6,
        transactionIdStoreSupplier7, transactionCounters8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager6);
    jVMAdapterMBImpl10.start();
    jVMAdapterMBImpl10.shutdown();
    try {
      jVMAdapterMBImpl10.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0586");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext4 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents5 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle6 = metricsServiceExtensionFactory0.newInstance(
          extensionContext4, requiredComponents5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
  }

  @Test
  public void test0587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0587");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry7);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters9 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter10 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager8,
        transactionLogCounters9);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager8,
        databaseOperationCounts11);
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0588");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    long long2 = consensusLogAdditions0.apeie();
    long long3 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) 10);
    long long6 = consensusLogAdditions0.apeie();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
  }

  @Test
  public void test0589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0589");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter22 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors4, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager12, webContainerThreadInfoSupplier23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12,
        databaseOperationCounts26);
    com.codahale.metrics.MetricFilter metricFilter28 = null;
    try {
      metricRegistryManager12.reomcnForMe(metricFilter28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0590");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.create", metricRegistryManager1);
  }

  @Test
  public void test0591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0591");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, databaseOperationCounts26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.create", metricRegistryManager13, memoryPools28,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "vm.heap.committed", metricRegistryManager13, memoryPools31);
    try {
      memoryPoolsAdapterNeoStackImpl32.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0592");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark((long) (-1));
    double double4 = metricsMeter1.getFifteenMinuteRate();
    double double5 = metricsMeter1.getFifteenMinuteRate();
    double double6 = metricsMeter1.getMeanRate();
    double double7 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
  }

  @Test
  public void test0593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0593");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.start", metricRegistryManager9);
    java.lang.String str24 = jVMAdapterPoolImpl22.moydmdmineString("db.query.execution");
    java.lang.String str26 = jVMAdapterPoolImpl22.moydmdmineString(
        "causal_clustering.core.discovery.cluster.unreachable");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "db.query.execution" + "'", str24,
        "db.query.execution");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "causal_clustering.core.discovery.cluster.unreachable" + "'",
        str26, "causal_clustering.core.discovery.cluster.unreachable");
  }

  @Test
  public void test0594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0594");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents2 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle3 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext1, dependentComponents2);
    java.lang.String str4 = extensionFactoryGdbMetricsImpl0.getName();
    java.lang.String str5 = extensionFactoryGdbMetricsImpl0.getName();
    java.lang.String str6 = extensionFactoryGdbMetricsImpl0.getName();
    org.junit.Assert.assertNotNull(lifecycle3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "databaseMetrics" + "'", str4,
        "databaseMetrics");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "databaseMetrics" + "'", str5,
        "databaseMetrics");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "databaseMetrics" + "'", str6,
        "databaseMetrics");
  }

  @Test
  public void test0595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0595");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier11 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters12 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        transactionIdStoreSupplier11, transactionCounters12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier15 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters16 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager10, transactionIdStoreSupplier15,
        transactionCounters16);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter19 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.drop", metricRegistryManager10, checkpointCounters18);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitors1,
        metricRegistryManager10);
    try {
      discoveryCoreNodeAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0596");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed",
        metricRegistryManager12, transactionLogCounters27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0597");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) "db.operation.count.start");
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric16 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric16.comie(0L);
    long long19 = submittedConsensusLogCommitIndexMetric16.comie();
    submittedConsensusLogCommitIndexMetric16.comie((long) (byte) 0);
    long long22 = submittedConsensusLogCommitIndexMetric16.comie();
    boolean boolean23 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) long22);
    java.lang.String str24 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray32 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList33 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean34 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList33,
        globbingPatternArray32);
    com.codahale.metrics.MetricRegistry metricRegistry35 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager36 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList33,
        metricRegistry35);
    org.neo4j.monitoring.Monitors monitors37 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter38 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager36, monitors37);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier39 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer40 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter41 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager36, storeEntityCountersSupplier39,
        pageCacheTracer40);
    org.neo4j.scheduler.JobScheduler jobScheduler42 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction43 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout44 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter45 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager36,
        jobScheduler42, fileSystemAbstraction43, databaseLayout44);
    org.neo4j.monitoring.Monitors monitors46 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter47 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager36, monitors46);
    org.neo4j.memory.MemoryPools memoryPools48 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl49 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager36, memoryPools48);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier50 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer51 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter52 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager36, storeEntityCountersSupplier50,
        pageCacheTracer51);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters53 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter54 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.committed", metricRegistryManager36, pageCacheCounters53);
    boolean boolean55 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) pageCacheCounters53);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str24, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
  }

  @Test
  public void test0598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0598");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    try {
      queryExecutionMonitorMetricsImpl15.endSuccess(executingQuery21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0599");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType3, (int) (byte) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test0600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0600");
    }
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl0 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl();
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType1 = jVMAdapterMBImpl0.getGrp();
    java.lang.String str3 = jVMAdapterMBImpl0.moydmdmineString("vm.heap.max");
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType1 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM + "'",
        enterpriseMetricsType1.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_JVM));
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "vm.heap.max" + "'", str3, "vm.heap.max");
  }

  @Test
  public void test0601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0601");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools23, "db.operation.count.stop");
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager11, jobScheduler26,
        fileSystemAbstraction27, databaseLayout28);
    try {
      gdbStoreStatsAdapter29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0602");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "databaseMetrics");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0603");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier16 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        transactionIdStoreSupplier16, transactionCounters17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.failed", metricRegistryManager9, monitors19);
    try {
      boltAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0604");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter22 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier23,
        pageCacheTracer24);
    try {
      java.util.SortedSet<java.lang.String> strSet26 = metricRegistryManager11.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0605");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(10L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) ' ');
  }

  @Test
  public void test0606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0606");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11, "vm.heap.max", config13, path14);
  }

  @Test
  public void test0607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0607");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery17, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery20, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl13.startProcessing(executingQuery23);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0608");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 'a');
    long long3 = consensusLogAdditions0.apeie();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 97L + "'", long3 == 97L);
  }

  @Test
  public void test0609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0609");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
  }

  @Test
  public void test0610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0610");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery21, throwable22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    try {
      queryExecutionMonitorMetricsImpl15.endSuccess(executingQuery26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0611");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl1,
        metricRegistryManager9, coreNodeLeaderCheckSupplier18);
    try {
      metricRegistryManager9.reoForSt("dbms.pool.<pool>.vm.heap.max");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0612");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    jVMAdapterGarbageCollectionImpl2.shutdown();
  }

  @Test
  public void test0613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0613");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        databaseOperationCounts17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager11, webContainerThreadInfoSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    java.lang.String str23 = jVMAdapterMBImpl21.moydmdmineString("databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "databaseMetrics" + "'", str23,
        "databaseMetrics");
  }

  @Test
  public void test0614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0614");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager8);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.failed", metricRegistryManager8, databaseOperationCounts13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager8, storeEntityCountersSupplier15);
    try {
      gdbElementStatsAdapter16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0615");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager7, jobScheduler14,
        fileSystemAbstraction15, databaseLayout16);
    try {
      metricRegistryManager7.reoForSt(
          "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0616");
    }
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl0 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl();
    java.lang.String str2 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "db.operation.count.failed");
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "db.operation.count.recovered");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "db.operation.count.failed" + "'", str2,
        "db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "db.operation.count.recovered" + "'",
        str4, "db.operation.count.recovered");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "causal_clustering.core.discovery.replicated_data" + "'", str6,
        "causal_clustering.core.discovery.replicated_data");
  }

  @Test
  public void test0617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0617");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0618");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "db.operation.count.start", metricRegistryManager9, monitors17);
    try {
      jVMAdapterSDPImpl18.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0619");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter24 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.max", metricRegistryManager12, pageCacheCounters23);
    try {
      neoPageCacheAdapter24.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0620");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors3, metricRegistryManager11);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters16 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter17 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        pageCacheCounters16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11, webContainerThreadInfoSupplier18);
    jettyAdapter19.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0621");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8,
        transactionLogCounters18);
    gdbTransactionLogAdapter19.start();
    try {
      gdbTransactionLogAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0622");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "causal_clustering.core.discovery.replicated_data");
    try {
      jVMAdapterGarbageCollectionImpl2.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "causal_clustering.core.discovery.replicated_data" + "'", str6,
        "causal_clustering.core.discovery.replicated_data");
  }

  @Test
  public void test0623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0623");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType3 = null;
    com.codahale.metrics.Timer timer4 = consensusMessageStats0.getTimer(raftConsensusMessageType3);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats5 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long6 = consensusMessageStats5.dea();
    com.codahale.metrics.Timer timer7 = consensusMessageStats5.getTimer();
    com.codahale.metrics.Timer timer8 = consensusMessageStats5.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats12 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long13 = consensusMessageStats12.dea();
    java.time.Duration duration14 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats12.sedaForDu(duration14);
    consensusMessageStats9.sedaForDu(duration14);
    consensusMessageStats5.sedaForDu(duration14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType18 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration14, raftConsensusMessageType18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNull(timer4);
    org.junit.Assert.assertNotNull(consensusMessageStats5);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertNotNull(timer7);
    org.junit.Assert.assertNotNull(timer8);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertNotNull(consensusMessageStats12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNotNull(duration14);
  }

  @Test
  public void test0624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0624");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.sembs(100);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
  }

  @Test
  public void test0625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0625");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
  }

  @Test
  public void test0626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0626");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    long long4 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats0.getTimer(raftConsensusMessageType5);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats7 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long8 = consensusMessageStats7.dea();
    com.codahale.metrics.Timer timer9 = consensusMessageStats7.getTimer();
    com.codahale.metrics.Timer timer10 = consensusMessageStats7.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats11 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType12 = null;
    com.codahale.metrics.Timer timer13 = consensusMessageStats11.getTimer(
        raftConsensusMessageType12);
    long long14 = consensusMessageStats11.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats11.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats11.getTimer(
        raftConsensusMessageType17);
    long long19 = consensusMessageStats11.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats20 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType21 = null;
    com.codahale.metrics.Timer timer22 = consensusMessageStats20.getTimer(
        raftConsensusMessageType21);
    long long23 = consensusMessageStats20.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType24 = null;
    com.codahale.metrics.Timer timer25 = consensusMessageStats20.getTimer(
        raftConsensusMessageType24);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType26 = null;
    com.codahale.metrics.Timer timer27 = consensusMessageStats20.getTimer(
        raftConsensusMessageType26);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType28 = null;
    com.codahale.metrics.Timer timer29 = consensusMessageStats20.getTimer(
        raftConsensusMessageType28);
    java.time.Duration duration30 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats20.sedaForDu(duration30);
    consensusMessageStats11.sedaForDu(duration30);
    consensusMessageStats7.sedaForDu(duration30);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType34 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration30, raftConsensusMessageType34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertNotNull(consensusMessageStats7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(timer9);
    org.junit.Assert.assertNotNull(timer10);
    org.junit.Assert.assertNotNull(consensusMessageStats11);
    org.junit.Assert.assertNull(timer13);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats20);
    org.junit.Assert.assertNull(timer22);
    org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    org.junit.Assert.assertNull(timer25);
    org.junit.Assert.assertNull(timer27);
    org.junit.Assert.assertNull(timer29);
    org.junit.Assert.assertNotNull(duration30);
  }

  @Test
  public void test0627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0627");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager13, databaseOperationCounts20);
    gdbActionsAdapter21.start();
    gdbActionsAdapter21.start();
    boolean boolean24 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbActionsAdapter21);
    gdbActionsAdapter21.start();
    try {
      gdbActionsAdapter21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test0628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0628");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools23, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter27 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager11, monitors26);
    try {
      cypherPlanAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0629");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter20 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors2, metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager10, webContainerThreadInfoSupplier21);
    jettyAdapter22.shutdown();
    jettyAdapter22.start();
    jettyAdapter22.start();
    try {
      jettyAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0630");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl24.startExecution(executingQuery28);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery30);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0631");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    try {
      jVMAdapterPoolImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0632");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.start", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    java.lang.String str6 = jVMAdapterGarbageCollectionImpl2.moydmdmineString(
        "db.operation.count.recovered");
    try {
      jVMAdapterGarbageCollectionImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str4, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "db.operation.count.recovered" + "'",
        str6, "db.operation.count.recovered");
  }

  @Test
  public void test0633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0633");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager6, storeEntityCountersSupplier10,
        pageCacheTracer11);
    gdbStatsAdapter12.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0634");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        storeEntityCountersSupplier17, pageCacheTracer18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        memoryPools20, "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter24 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager10,
        checkpointCounters23);
    try {
      checkpointCounterAdapter24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0635");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl((int) (byte) 1);
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge7);
  }

  @Test
  public void test0636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0636");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    java.lang.Throwable throwable18 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery17, throwable18);
    try {
      queryExecutionMonitorMetricsImpl13.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0637");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.sembs(1);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test0638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0638");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier15 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter16 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager9, webContainerThreadInfoSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager9, storeEntityCountersSupplier19);
    try {
      gdbElementStatsAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0639");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors17);
    try {
      java.util.SortedSet<java.lang.String> strSet19 = metricRegistryManager9.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test0640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0640");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager11, monitors15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors4, metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "globalMetrics", metricRegistryManager11, storeEntityCountersSupplier18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter20 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed", monitors1,
        metricRegistryManager11);
    try {
      txCatchupAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0641");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors5, metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors3, metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", monitors1, metricRegistryManager11);
    try {
      discoveryCoreNodeAdapter16.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0642");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl4, metricRegistryManager13,
        coreNodeLeaderCheckSupplier21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "", metricRegistryManager13);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter26 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13,
        checkpointCounters25);
    try {
      checkpointCounterAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0643");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "dbms.pool.<pool>.neo4j.count.relationship", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16,
        "causal_clustering.core.discovery.replicated_data", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    metricsReportProvider0.init(fileSystemAbstraction21,
        "causal_clustering.core.discovery.replicated_data", config23, path24);
  }

  @Test
  public void test0644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0644");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager12, memoryPools24);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier26 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier26,
        pageCacheTracer27);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier29 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl1, metricRegistryManager12,
        coreNodeLeaderCheckSupplier29);
    try {
      consensusCoreNodeAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0645");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.norlad();
  }

  @Test
  public void test0646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0646");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    double double5 = metricsMeter1.getMeanRate();
    double double6 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) (short) 0);
    double double9 = metricsMeter1.getMeanRate();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
  }

  @Test
  public void test0647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0647");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager8, databaseOperationCounts15);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.create", metricRegistryManager8,
        transactionIdStoreSupplier17, transactionCounters18);
    try {
      globalTransactionStatsAdapter19.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0648");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager7, databaseOperationCounts14);
    gdbActionsAdapter15.start();
    gdbActionsAdapter15.start();
    java.lang.String str19 = gdbActionsAdapter15.moydmdmineString("");
    gdbActionsAdapter15.start();
    gdbActionsAdapter15.start();
    try {
      gdbActionsAdapter15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
  }

  @Test
  public void test0649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0649");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    java.lang.String str24 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    try {
      memoryPoolsAdapterNeoStackImpl22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str24,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test0650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0650");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType1, (int) (byte) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0651");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager10, monitors20);
    try {
      cypherPlanAdapter21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0652");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "pool.<pool>.<database>.db.query.execution");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0653");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager6);
    java.lang.String str11 = jVMAdapterMemoryHeapImpl9.moydmdmineString("hi!");
    try {
      jVMAdapterMemoryHeapImpl9.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
  }

  @Test
  public void test0654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0654");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager6, monitors10);
    java.lang.String str13 = cypherPlanAdapter11.moydmdmineString("db.operation.count.create");
    try {
      cypherPlanAdapter11.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "db.operation.count.create" + "'", str13,
        "db.operation.count.create");
  }

  @Test
  public void test0655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0655");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    java.lang.String str24 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    java.lang.String str26 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "db.operation.count.drop");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str24, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "dbms.pool.<pool>.db.operation.count.drop" + "'", str26,
        "dbms.pool.<pool>.db.operation.count.drop");
  }

  @Test
  public void test0656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0656");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.start", metricRegistryManager10);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0657");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    long long7 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test0658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0658");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, jobScheduler21, fileSystemAbstraction22,
        databaseLayout23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors3, metricRegistryManager13);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        pageCacheCounters26);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13, monitors28);
    try {
      jVMAdapterSDPImpl29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0659");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager10);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier22 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl1, metricRegistryManager10,
        coreNodeLeaderCheckSupplier22);
    try {
      consensusCoreNodeAdapter23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0660");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier9 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager6, storeEntityCountersSupplier9,
        pageCacheTracer10);
    gdbStatsAdapter11.start();
    try {
      gdbStatsAdapter11.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0661");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.drop", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString("");
    try {
      jVMAdapterGarbageCollectionImpl2.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
  }

  @Test
  public void test0662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0662");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.recnam();
  }

  @Test
  public void test0663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0663");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager8,
        storeEntityCountersSupplier15, pageCacheTracer16);
    try {
      gdbStatsAdapter17.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0664");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, databaseOperationCounts26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.create", metricRegistryManager13, memoryPools28,
        "dbms.pool.<pool>.dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.memory.MemoryPools memoryPools31 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl32 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "vm.heap.committed", metricRegistryManager13, memoryPools31);
    java.lang.String str34 = memoryPoolsAdapterNeoStackImpl32.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '"
            + "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged" + "'", str34,
        "dbms.pool.<pool>.causal_clustering.core.discovery.cluster.converged");
  }

  @Test
  public void test0665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0665");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter23 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager10, pageCacheCounters22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.query.execution", metricRegistryManager10);
    try {
      jVMAdapterMemoryHeapImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0666");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8,
        jobScheduler14, fileSystemAbstraction15, databaseLayout16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.query.execution", metricRegistryManager8);
    jVMAdapterMemoryHeapImpl18.start();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0667");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier26 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "", metricRegistryManager11, transactionIdStoreSupplier26, transactionCounters27);
    try {
      globalTransactionStatsAdapter28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0668");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
  }

  @Test
  public void test0669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0669");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "db.operation.count.create", config8,
        path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11, "globalMetrics", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16,
        "dbms.pool.<pool>.db.operation.count.failed", config18, path19);
  }

  @Test
  public void test0670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0670");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.start", metricRegistryManager9);
    java.lang.String str24 = jVMAdapterPoolImpl22.moydmdmineString("db.query.execution");
    jVMAdapterPoolImpl22.start();
    java.lang.String str27 = jVMAdapterPoolImpl22.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    jVMAdapterPoolImpl22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "db.query.execution" + "'", str24,
        "db.query.execution");
    org.junit.Assert.assertEquals("'" + str27 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data"
            + "'", str27,
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
  }

  @Test
  public void test0671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0671");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager12, monitors27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl28.startExecution(executingQuery29);
    try {
      queryExecutionMonitorMetricsImpl28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0672");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "dbms.pool.<pool>.db.operation.count.create");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0673");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getMeanRate();
    double double10 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
  }

  @Test
  public void test0674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0674");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge9);
  }

  @Test
  public void test0675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0675");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.drop", metricRegistryManager9);
    try {
      jVMAdapterMBImpl20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0676");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(100);
    livingCacheMeta0.cacheMiss();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
  }

  @Test
  public void test0677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0677");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13,
        transactionLogCounters23);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier25 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl4, metricRegistryManager13,
        coreNodeLeaderCheckSupplier25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13,
        storeEntityCountersSupplier28);
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.drop", metricRegistryManager13, memoryPools30);
    java.lang.String str33 = memoryPoolsAdapterNeoStackImpl31.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str33 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop"
            + "'", str33, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test0678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0678");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager11, monitors21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager11, memoryPools23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier25,
        pageCacheTracer26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager11);
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0679");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "neo4j.count.node", metricRegistryManager7);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0680");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter19 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors1, metricRegistryManager9);
    try {
      txCatchupAdapter19.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0681");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors2, metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager13);
    try {
      metricRegistryManager13.reoForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0682");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager1, memoryPools2);
    java.lang.String str5 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "db.operation.count.create");
    memoryPoolsAdapterNeoStackImpl3.init();
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "dbms.pool.<pool>.db.operation.count.create" + "'", str5,
        "dbms.pool.<pool>.db.operation.count.create");
  }

  @Test
  public void test0683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0683");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getMeanRate();
    double double10 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
  }

  @Test
  public void test0684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0684");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        storeEntityCountersSupplier18, pageCacheTracer19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, transactionLogCounters21);
    gdbTransactionLogAdapter22.start();
    try {
      gdbTransactionLogAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0685");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager12, monitors22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors1, metricRegistryManager12);
    try {
      txCatchupAdapter24.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0686");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    long long2 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) ' ');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
  }

  @Test
  public void test0687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0687");
    }
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl0 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl();
    java.lang.String str2 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "db.operation.count.failed");
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "db.operation.count.stop");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "db.operation.count.failed" + "'", str2,
        "db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "db.operation.count.stop" + "'", str4,
        "db.operation.count.stop");
  }

  @Test
  public void test0688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0688");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getOneMinuteRate();
    double double10 = metricsMeter1.getOneMinuteRate();
    double double11 = metricsMeter1.getOneMinuteRate();
    metricsMeter1.mark();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
  }

  @Test
  public void test0689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0689");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, transactionIdStoreSupplier17, transactionCounters18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager10, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.stop", metricRegistryManager10);
    jVMAdapterMemoryHeapImpl22.start();
    try {
      jVMAdapterMemoryHeapImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0690");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    long long1 = submittedConsensusLogCommitIndexMetric0.comie();
    long long2 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) 1);
    long long5 = submittedConsensusLogCommitIndexMetric0.comie();
    long long6 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie(0L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
  }

  @Test
  public void test0691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0691");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    java.lang.String str19 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.init();
    java.lang.String str23 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "db.operation.count.drop" + "'", str17,
        "db.operation.count.drop");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str19,
        "dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str23, "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test0692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0692");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.function.ThrowingAction throwingAction1 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle2 = org.neo4j.kernel.lifecycle.LifecycleAdapter.onStop(
        throwingAction1);
    boolean boolean3 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) lifecycle2);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext4 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents5 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle6 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext4, dependentComponents5);
    org.junit.Assert.assertNotNull(lifecycle2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(lifecycle6);
  }

  @Test
  public void test0693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0693");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getSizeCnt();
    long long7 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec((int) (byte) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test0694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0694");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager14, transactionLogCounters25);
    gdbTransactionLogAdapter26.start();
    boolean boolean28 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbTransactionLogAdapter26);
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType29 = gdbTransactionLogAdapter26.getGrp();
    gdbTransactionLogAdapter26.start();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType29 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType29.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
  }

  @Test
  public void test0695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0695");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    java.lang.Throwable throwable22 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery21, throwable22);
    try {
      queryExecutionMonitorMetricsImpl15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0696");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager13, databaseOperationCounts20);
    gdbActionsAdapter21.start();
    gdbActionsAdapter21.start();
    boolean boolean24 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbActionsAdapter21);
    gdbActionsAdapter21.start();
    gdbActionsAdapter21.start();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test0697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0697");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry8);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9,
        transactionLogCounters10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter12 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "", monitors1, metricRegistryManager9);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0698");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, 35L, (int) (byte) 1, compressionOption5,
          rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0699");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.query.execution", metricRegistryManager9, monitors17);
    java.lang.String str20 = queryExecutionMonitorMetricsImpl18.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '"
            + "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str20,
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message");
  }

  @Test
  public void test0700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0700");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter20 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors2, metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager10, webContainerThreadInfoSupplier21);
    jettyAdapter22.start();
    jettyAdapter22.start();
    try {
      jettyAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0701");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager6, monitors10);
    try {
      cypherPlanAdapter11.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0702");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager12, memoryPools27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager12);
    try {
      jVMAdapterMemoryHeapImpl29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0703");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    queryExecutionMonitorMetricsImpl15.init();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl15.beforeEnd(executingQuery25, true);
    try {
      queryExecutionMonitorMetricsImpl15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0704");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getSizeCnt();
    long long7 = livingCacheMeta0.gems();
    long long8 = livingCacheMeta0.gehs();
    long long9 = livingCacheMeta0.getLgBm();
    long long10 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test0705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0705");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.query.execution", metricRegistryManager8, memoryPools14,
        "pool.<pool>.<database>.db.operation.count.start");
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager8,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    try {
      metricRegistryManager8.reoForSt("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0706");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager15, monitors25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager15, memoryPools27);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier29 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier29,
        pageCacheTracer30);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier32 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter33 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl4, metricRegistryManager15,
        coreNodeLeaderCheckSupplier32);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters34 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter35 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager15, checkpointCounters34);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters36 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter37 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager15,
        checkpointCounters36);
    org.neo4j.monitoring.Monitors monitors38 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter39 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager15, monitors38);
    try {
      cypherPlanAdapter39.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test0707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0707");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        storeEntityCountersSupplier17, pageCacheTracer18);
    try {
      gdbStatsAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0708");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager10, jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager10);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager10, pageCacheCounters26);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0709");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl(100);
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test0710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0710");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager13, databaseOperationCounts20);
    gdbActionsAdapter21.start();
    gdbActionsAdapter21.start();
    boolean boolean24 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) gdbActionsAdapter21);
    java.lang.String str25 = metricsServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext26 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents27 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle28 = metricsServiceExtensionFactory0.newInstance(
          extensionContext26, requiredComponents27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str25, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test0711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0711");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.recnam();
  }

  @Test
  public void test0712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0712");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    clusterMembersCount0.secvg(true);
    clusterMembersCount0.seuehl((int) (byte) 10);
    org.junit.Assert.assertNotNull(intGauge1);
  }

  @Test
  public void test0713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0713");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (short) 1);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (byte) 1);
  }

  @Test
  public void test0714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0714");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.memory.MemoryPools memoryPools23 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools23, "db.operation.count.stop");
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager11, jobScheduler26,
        fileSystemAbstraction27, databaseLayout28);
    try {
      gdbStoreStatsAdapter29.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0715");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 'a');
    consensusLogAdditions0.apeie((long) 10);
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) 0);
    consensusLogAdditions0.apeie((long) (short) 0);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
  }

  @Test
  public void test0716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0716");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        databaseOperationCounts17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager11, webContainerThreadInfoSupplier19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, memoryPools21);
    java.lang.String str24 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString("vm.heap.max");
    try {
      memoryPoolsAdapterNeoStackImpl22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "dbms.pool.<pool>.vm.heap.max" + "'",
        str24, "dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test0717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0717");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14,
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0718");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge7 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.secvg(true);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge11 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge7);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge11);
  }

  @Test
  public void test0719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0719");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    metricsMeter1.mark();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
  }

  @Test
  public void test0720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0720");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager13, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager13, jobScheduler20,
        fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13, monitors26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier29 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.stop", monitorsClusterConsensusImpl1, metricRegistryManager13,
        coreNodeLeaderCheckSupplier29);
    try {
      consensusCoreNodeAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0721");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier2 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters3 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter4 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager1,
        transactionIdStoreSupplier2, transactionCounters3);
    try {
      globalTransactionStatsAdapter4.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0722");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager1);
  }

  @Test
  public void test0723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0723");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        storeEntityCountersSupplier19, pageCacheTracer20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, transactionLogCounters22);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager11, databaseOperationCounts24);
    gdbActionsAdapter25.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0724");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        storeEntityCountersSupplier20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager10);
    boolean boolean24 = metricRegistryManager10.isEnlForSt("db.operation.count.drop");
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "", metricRegistryManager10, monitors25);
    try {
      jVMAdapterSDPImpl26.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test0725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0725");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier15 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter16 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager9, webContainerThreadInfoSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        memoryPools19, "databaseMetrics");
    try {
      metricRegistryManager9.reoForSt("causal_clustering.core.last_leader_message");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0726");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.suslrle();
    syncStat0.norlad();
  }

  @Test
  public void test0727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0727");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier15 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl2, metricRegistryManager9,
        coreNodeLeaderCheckSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors17);
    com.codahale.metrics.MetricFilter metricFilter19 = null;
    try {
      metricRegistryManager9.reomcnForMe(metricFilter19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0728");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors2, metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9, monitors15);
    try {
      jVMAdapterSDPImpl16.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0729");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "vm.heap.max", metricRegistryManager12, transactionLogCounters29);
    gdbTransactionLogAdapter30.start();
    try {
      gdbTransactionLogAdapter30.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0730");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    java.lang.String str1 = metricsServiceExtensionFactory0.toString();
    java.lang.String str2 = metricsServiceExtensionFactory0.toString();
    java.lang.String str3 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier4 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter5 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier4);
    metricsMeter5.mark(100L);
    boolean boolean8 = metricsServiceExtensionFactory0.equals((java.lang.Object) metricsMeter5);
    java.lang.String str9 = metricsServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents11 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = metricsServiceExtensionFactory0.newInstance(
          extensionContext10, requiredComponents11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str1, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str2, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "globalMetrics" + "'", str3,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str9, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test0731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0731");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getSizeCnt();
    long long7 = livingCacheMeta0.gems();
    long long8 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test0732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0732");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) '#');
    livingCacheMeta0.cacheMiss();
    long long5 = livingCacheMeta0.gems();
    long long6 = livingCacheMeta0.gehs();
    long long7 = livingCacheMeta0.getICe();
    long long8 = livingCacheMeta0.getIEm();
    livingCacheMeta0.sembe(97L);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 35L + "'", long8 == 35L);
  }

  @Test
  public void test0733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0733");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType2 = null;
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer(raftConsensusMessageType2);
    long long4 = consensusMessageStats1.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats5 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats5.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats5.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType9 = null;
    com.codahale.metrics.Timer timer10 = consensusMessageStats5.getTimer(raftConsensusMessageType9);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType11 = null;
    com.codahale.metrics.Timer timer12 = consensusMessageStats5.getTimer(
        raftConsensusMessageType11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats5.getTimer(
        raftConsensusMessageType13);
    java.time.Duration duration15 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats5.sedaForDu(duration15);
    consensusMessageStats1.sedaForDu(duration15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType18 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration15, raftConsensusMessageType18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertNull(timer3);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNull(timer10);
    org.junit.Assert.assertNull(timer12);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNotNull(duration15);
  }

  @Test
  public void test0734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0734");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType7, (int) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
  }

  @Test
  public void test0735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0735");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager7);
    jVMAdapterFileStatImpl13.start();
    jVMAdapterFileStatImpl13.start();
    try {
      jVMAdapterFileStatImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0736");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter3 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager1, monitors2);
    cypherPlanAdapter3.init();
    try {
      cypherPlanAdapter3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0737");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        storeEntityCountersSupplier18, pageCacheTracer19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, transactionLogCounters21);
    try {
      gdbTransactionLogAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0738");
    }
    org.neo4j.kernel.impl.query.QueryExecutionMonitor queryExecutionMonitor0 = org.neo4j.kernel.impl.query.QueryExecutionMonitor.NO_OP;
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery1 = null;
    queryExecutionMonitor0.beforeEnd(executingQuery1, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery4 = null;
    queryExecutionMonitor0.beforeEnd(executingQuery4, false);
    org.junit.Assert.assertNotNull(queryExecutionMonitor0);
  }

  @Test
  public void test0739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0739");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl19 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11,
        monitors18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl3,
        metricRegistryManager11, coreNodeLeaderCheckSupplier20);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager11,
        databaseOperationCounts22);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier24 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionIdStoreSupplier24, transactionCounters25);
    try {
      globalTransactionStatsAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0740");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier17 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter18 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager11, webContainerThreadInfoSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager11, monitors19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager11, storeEntityCountersSupplier21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager11, jobScheduler23, fileSystemAbstraction24, databaseLayout25);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter28 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager11,
        pageCacheCounters27);
    try {
      neoPageCacheAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0741");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.norlad();
    syncStat0.suslrle();
    syncStat0.clerut();
  }

  @Test
  public void test0742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0742");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    com.codahale.metrics.Timer timer3 = consensusMessageStats0.getTimer();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    java.time.Duration duration6 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType7 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration6, raftConsensusMessageType7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNull(timer5);
  }

  @Test
  public void test0743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0743");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType9, (int) (byte) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
  }

  @Test
  public void test0744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0744");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        storeEntityCountersSupplier20, pageCacheTracer21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters23);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager12, databaseOperationCounts25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager12, monitors27);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery29 = null;
    queryExecutionMonitorMetricsImpl28.startExecution(executingQuery29);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    queryExecutionMonitorMetricsImpl28.startExecution(executingQuery31);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0745");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors7, metricRegistryManager15);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier26 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter27 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager15, webContainerThreadInfoSupplier26);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter28 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors4, metricRegistryManager15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors1, metricRegistryManager15);
    try {
      readReplicaNodeAdapter30.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test0746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0746");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager15, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager15, monitors23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager15, storeEntityCountersSupplier25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        memoryPools27, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager15, memoryPools30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager15);
    boolean boolean34 = metricRegistryManager15.isEnlForSt(
        "dbms.pool.<pool>.db.operation.count.failed");
    org.neo4j.monitoring.Monitors monitors35 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager15, monitors35);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl37 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager15);
    org.neo4j.monitoring.Monitors monitors38 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter39 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager15, monitors38);
    try {
      cypherPlanAdapter39.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test0747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0747");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getMeanRate();
    double double3 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
  }

  @Test
  public void test0748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0748");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager11);
    jVMAdapterPoolImpl22.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0749");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors2, metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.start", metricRegistryManager13);
    try {
      jVMAdapterPoolImpl27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0750");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter3 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "", metricRegistryManager1, monitors2);
  }

  @Test
  public void test0751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0751");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.recnam();
  }

  @Test
  public void test0752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0752");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier14 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter15 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager8, webContainerThreadInfoSupplier14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager8, monitors16);
    try {
      jVMAdapterSDPImpl17.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0753");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.scheduler.JobScheduler jobScheduler28 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager13, jobScheduler28,
        fileSystemAbstraction29, databaseLayout30);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier32 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter33 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", monitorsClusterConsensusImpl1,
        metricRegistryManager13, coreNodeLeaderCheckSupplier32);
    try {
      consensusCoreNodeAdapter33.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0754");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager8, memoryPools15);
    java.lang.String str18 = memoryPoolsAdapterNeoStackImpl16.moydmdmineString("vm.heap.max");
    try {
      memoryPoolsAdapterNeoStackImpl16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "dbms.pool.<pool>.vm.heap.max" + "'",
        str18, "dbms.pool.<pool>.vm.heap.max");
  }

  @Test
  public void test0755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0755");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters22);
    boolean boolean25 = metricRegistryManager12.isEnlForSt("vm.heap.used");
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        monitors1, metricRegistryManager12);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
  }

  @Test
  public void test0756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0756");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        storeEntityCountersSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager9);
    java.lang.String str23 = jVMAdapterGarbageCollectionImpl21.moydmdmineString(
        "db.operation.count.recovered");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "db.operation.count.recovered" + "'",
        str23, "db.operation.count.recovered");
  }

  @Test
  public void test0757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0757");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark();
    double double6 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
  }

  @Test
  public void test0758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0758");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery16);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0759");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.stop", monitors1, metricRegistryManager2);
    try {
      readReplicaNodeAdapter3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0760");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager1, memoryPools2);
    java.lang.String str5 = memoryPoolsAdapterNeoStackImpl3.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.start");
    try {
      memoryPoolsAdapterNeoStackImpl3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start"
            + "'", str5, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start");
  }

  @Test
  public void test0761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0761");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.stop", monitors1, metricRegistryManager2);
    try {
      readReplicaNodeAdapter3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0762");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "neo4j.count.relationship");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0763");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager8, jobScheduler15,
        fileSystemAbstraction16, databaseLayout17);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "", metricRegistryManager8, transactionLogCounters19);
    gdbTransactionLogAdapter20.start();
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType22 = gdbTransactionLogAdapter20.getGrp();
    try {
      gdbTransactionLogAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType22 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType22.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
  }

  @Test
  public void test0764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0764");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.scheduler.JobScheduler jobScheduler28 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager13, jobScheduler28,
        fileSystemAbstraction29, databaseLayout30);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier32 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter33 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", monitorsClusterConsensusImpl1,
        metricRegistryManager13, coreNodeLeaderCheckSupplier32);
    try {
      java.util.SortedSet<java.lang.String> strSet34 = metricRegistryManager13.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0765");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier9 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager6, storeEntityCountersSupplier9,
        pageCacheTracer10);
    gdbStatsAdapter11.start();
    gdbStatsAdapter11.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0766");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager10);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier22 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl1, metricRegistryManager10,
        coreNodeLeaderCheckSupplier22);
    java.lang.Class<?> wildcardClass24 = consensusCoreNodeAdapter23.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test0767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0767");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors2, metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier15 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter16 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.query.execution", metricRegistryManager9, webContainerThreadInfoSupplier15);
    jettyAdapter16.start();
    try {
      jettyAdapter16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0768");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier19 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        storeEntityCountersSupplier19, pageCacheTracer20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9);
    java.lang.String str24 = jVMAdapterGarbageCollectionImpl22.moydmdmineString(
        "pool.<pool>.<database>.db.query.execution");
    java.lang.String str26 = jVMAdapterGarbageCollectionImpl22.moydmdmineString(
        "causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "pool.<pool>.<database>.db.query.execution" + "'", str24,
        "pool.<pool>.<database>.db.query.execution");
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "causal_clustering.core.discovery.replicated_data" + "'", str26,
        "causal_clustering.core.discovery.replicated_data");
  }

  @Test
  public void test0769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0769");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager13, memoryPools28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager13);
    boolean boolean32 = metricRegistryManager13.isEnlForSt(
        "dbms.pool.<pool>.db.operation.count.failed");
    org.neo4j.monitoring.Monitors monitors33 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl34 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager13, monitors33);
    try {
      jVMAdapterSDPImpl34.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
  }

  @Test
  public void test0770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0770");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    livingCacheMeta0.seeec((int) '#');
    long long4 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test0771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0771");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, jobScheduler20, fileSystemAbstraction21,
        databaseLayout22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors2, metricRegistryManager12);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.globalMetrics", metricRegistryManager12, transactionLogCounters25);
    try {
      gdbTransactionLogAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0772");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl3 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager1, memoryPools2);
    try {
      memoryPoolsAdapterNeoStackImpl3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0773");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier19 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager10,
        transactionIdStoreSupplier19, transactionCounters20);
    globalTransactionStatsAdapter21.init();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0774");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.gehs();
    long long10 = livingCacheMeta0.gems();
    livingCacheMeta0.cacheMiss();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test0775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0775");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        storeEntityCountersSupplier17, pageCacheTracer18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        memoryPools20, "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager10);
    try {
      java.util.SortedSet<java.lang.String> strSet24 = metricRegistryManager10.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0776");
    }
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl0 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl();
    java.lang.String str2 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "db.operation.count.failed");
    java.lang.String str4 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.drop");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "pool.<pool>.<database>.db.operation.count.failed" + "'", str2,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str4 + "' != '"
            + "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop" + "'", str4,
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.drop");
  }

  @Test
  public void test0777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0777");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier21 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter22 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager15, webContainerThreadInfoSupplier21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager15, monitors23);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager15, storeEntityCountersSupplier25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        memoryPools27, "db.operation.count.stop");
    org.neo4j.memory.MemoryPools memoryPools30 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl31 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager15, memoryPools30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "vm.heap.max", metricRegistryManager15);
    boolean boolean34 = metricRegistryManager15.isEnlForSt(
        "dbms.pool.<pool>.db.operation.count.failed");
    org.neo4j.monitoring.Monitors monitors35 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl36 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager15, monitors35);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl37 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager15);
    org.neo4j.memory.MemoryPools memoryPools38 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl40 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "neo4j.count.relationship", metricRegistryManager15, memoryPools38,
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    java.lang.String str42 = memoryPoolsAdapterGdbImpl40.moydmdmineString("db.query.execution");
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str42 + "' != '" + "pool.<pool>.<database>.db.query.execution" + "'", str42,
        "pool.<pool>.<database>.db.query.execution");
  }

  @Test
  public void test0778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0778");
    }
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl0 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl();
    io.github.onograph.metrics.incoming.EnterpriseMetricsType enterpriseMetricsType1 = memoryPoolsAdapterGdbImpl0.getGrp();
    java.lang.String str3 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str5 = memoryPoolsAdapterGdbImpl0.moydmdmineString("");
    java.lang.String str7 = memoryPoolsAdapterGdbImpl0.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution");
    org.junit.Assert.assertTrue("'" + enterpriseMetricsType1 + "' != '"
            + io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC + "'",
        enterpriseMetricsType1.equals(
            io.github.onograph.metrics.incoming.EnterpriseMetricsType.EMT_GENERIC));
    org.junit.Assert.assertEquals("'" + str3 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged" + "'", str3,
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pool.<pool>.<database>." + "'", str5,
        "pool.<pool>.<database>.");
    org.junit.Assert.assertEquals("'" + str7 + "' != '"
            + "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution" + "'",
        str7, "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution");
  }

  @Test
  public void test0779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0779");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl1,
        metricRegistryManager9, coreNodeLeaderCheckSupplier18);
    try {
      consensusCoreNodeAdapter19.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0780");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery25, throwable26);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery28 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery28, false);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery31 = null;
    try {
      queryExecutionMonitorMetricsImpl24.endSuccess(executingQuery31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0781");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery17, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery20, "globalMetrics");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery23, true);
    java.lang.Class<?> wildcardClass26 = queryExecutionMonitorMetricsImpl13.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test0782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0782");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "causal_clustering.core.discovery.cluster.converged");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0783");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        storeEntityCountersSupplier21);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "dbms.pool.<pool>.vm.heap.used", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.create", monitors1, metricRegistryManager11);
    try {
      readReplicaNodeAdapter24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0784");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    double double16 = metricsMeter1.getMeanRate();
    metricsMeter1.mark(10L);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
  }

  @Test
  public void test0785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0785");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    long long5 = livingCacheMeta0.getIEm();
    long long6 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test0786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0786");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl2,
        metricRegistryManager10, coreNodeLeaderCheckSupplier19);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10,
        databaseOperationCounts21);
    try {
      gdbActionsAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0787");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.scheduler.JobScheduler jobScheduler27 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.recovered", metricRegistryManager12, jobScheduler27,
        fileSystemAbstraction28, databaseLayout29);
    org.neo4j.scheduler.JobScheduler jobScheduler31 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction32 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout33 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter34 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, jobScheduler31,
        fileSystemAbstraction32, databaseLayout33);
    try {
      gdbStoreStatsAdapter34.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0788");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    java.lang.Class<?> wildcardClass5 = intGauge4.getClass();
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(wildcardClass5);
  }

  @Test
  public void test0789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0789");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory1 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    boolean boolean14 = metricsServiceExtensionFactory1.equals(
        (java.lang.Object) metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager8);
    java.lang.String str17 = jVMAdapterMBImpl15.moydmdmineString(
        "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create");
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create"
            + "'", str17, "pool.<pool>.<database>.dbms.pool.<pool>.db.operation.count.create");
  }

  @Test
  public void test0790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0790");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12,
        transactionLogCounters22);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "databaseMetrics", monitors1, metricRegistryManager12);
    boolean boolean26 = metricRegistryManager12.isEnlForSt(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test0791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0791");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((-1L));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) 'a');
  }

  @Test
  public void test0792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0792");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager10, jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter27 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.db.operation.count.create", metricRegistryManager10, monitors26);
    try {
      boltAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0793");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (short) 10);
  }

  @Test
  public void test0794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0794");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid(100L);
    petConsensusLogApplied0.apldid(1L);
    long long5 = petConsensusLogApplied0.apldid();
    long long6 = petConsensusLogApplied0.apldid();
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
  }

  @Test
  public void test0795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0795");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    java.lang.String str19 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.db.operation.count.failed");
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.init();
    java.lang.String str23 = jVMAdapterPoolImpl13.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "db.operation.count.drop" + "'", str17,
        "db.operation.count.drop");
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "dbms.pool.<pool>.db.operation.count.failed" + "'", str19,
        "dbms.pool.<pool>.db.operation.count.failed");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "pool.<pool>.<database>.db.operation.count.failed" + "'", str23,
        "pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test0796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0796");
    }
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric0 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    long long1 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) (short) -1);
    submittedConsensusLogCommitIndexMetric0.comie((long) (short) 100);
    long long6 = submittedConsensusLogCommitIndexMetric0.comie();
    submittedConsensusLogCommitIndexMetric0.comie((long) ' ');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
  }

  @Test
  public void test0797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0797");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        databaseOperationCounts16);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "db.query.execution", metricRegistryManager10, transactionLogCounters18);
    gdbTransactionLogAdapter19.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0798");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery30, true);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0799");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors20);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager10, memoryPools22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.query.execution", metricRegistryManager10);
    try {
      jVMAdapterFileStatImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0800");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter17 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.failed", metricRegistryManager9, monitors16);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier18 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start", metricRegistryManager9,
        transactionIdStoreSupplier18, transactionCounters19);
    try {
      globalTransactionStatsAdapter20.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0801");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge3 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge3);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test0802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0802");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (short) -1);
    long long7 = consensusElectionTerm0.getTermLength();
    consensusElectionTerm0.termLength((long) (-1));
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
  }

  @Test
  public void test0803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0803");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    java.lang.String str2 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) "db.operation.count.start");
    java.lang.String str16 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray22 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList23 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean24 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList23,
        globbingPatternArray22);
    com.codahale.metrics.MetricRegistry metricRegistry25 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager26 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList23,
        metricRegistry25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager26, memoryPools27,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter31 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager26, monitors30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager26);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier33 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters34 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter35 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager26, transactionIdStoreSupplier33, transactionCounters34);
    org.neo4j.monitoring.Monitors monitors36 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter37 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.failed", metricRegistryManager26, monitors36);
    boolean boolean38 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) "db.operation.count.failed");
    java.lang.String str39 = extensionFactoryGdbMetricsImpl0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str2, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str16, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(globbingPatternArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str39, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
  }

  @Test
  public void test0804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0804");
    }
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter15 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors6, metricRegistryManager12);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors16);
    org.neo4j.memory.MemoryPools memoryPools18 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl20 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, memoryPools18,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter22 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.create", metricRegistryManager12, pageCacheCounters21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "vm.heap.max", metricRegistryManager12, jobScheduler23, fileSystemAbstraction24,
        databaseLayout25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl29 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, memoryPools27, "");
    try {
      memoryPoolsAdapterGdbImpl29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0805");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(10);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge15 = clusterMembersCount0.unehlGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge15);
  }

  @Test
  public void test0806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0806");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getOneMinuteRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 'a');
    long long6 = metricsMeter1.getCount();
    double double7 = metricsMeter1.getFiveMinuteRate();
    double double8 = metricsMeter1.getMeanRate();
    double double9 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
  }

  @Test
  public void test0807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0807");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager14, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager14, jobScheduler21,
        fileSystemAbstraction22, databaseLayout23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager14);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl28 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager14, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.stop", monitorsClusterConsensusImpl2, metricRegistryManager14,
        coreNodeLeaderCheckSupplier30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "databaseMetrics", metricRegistryManager14);
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test0808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0808");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager10, monitors14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter17 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitors2,
        metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.create", metricRegistryManager10);
    try {
      jVMAdapterGarbageCollectionImpl18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0809");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter9 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager7,
        monitors8);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter12 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager7, storeEntityCountersSupplier10,
        pageCacheTracer11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager7);
    jVMAdapterThreadMXImpl13.start();
    try {
      jVMAdapterThreadMXImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0810");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl20 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12,
        monitors19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl4,
        metricRegistryManager12, coreNodeLeaderCheckSupplier21);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter24 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.used", metricRegistryManager12, pageCacheCounters23);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        monitors1, metricRegistryManager12);
    try {
      readReplicaNodeAdapter25.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0811");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl17 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager11,
        storeEntityCountersSupplier18, pageCacheTracer19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager11,
        memoryPools21, "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter25 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager11,
        checkpointCounters24);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.operation.count.drop", metricRegistryManager11, databaseOperationCounts26);
    gdbActionsAdapter27.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0812");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager12,
        memoryPools24, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager12, monitors27);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager12);
    jVMAdapterMBImpl29.shutdown();
    try {
      jVMAdapterMBImpl29.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0813");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager8, databaseOperationCounts15);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager8, memoryPools17,
        "db.operation.count.create");
    com.codahale.metrics.MetricFilter metricFilter20 = null;
    try {
      metricRegistryManager8.reomcnForMe(metricFilter20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0814");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test0815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0815");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (long) (byte) -1, 10, compressionOption5,
          rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0816");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test0817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0817");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType3 = null;
    com.codahale.metrics.Timer timer4 = consensusMessageStats0.getTimer(raftConsensusMessageType3);
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer();
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(timer2);
    org.junit.Assert.assertNull(timer4);
    org.junit.Assert.assertNotNull(timer5);
  }

  @Test
  public void test0818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0818");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier16 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter17 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl3, metricRegistryManager10,
        coreNodeLeaderCheckSupplier16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager10, monitors18);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager10,
        transactionLogCounters20);
    boolean boolean23 = metricRegistryManager10.isEnlForSt("vm.heap.used");
    try {
      metricRegistryManager10.reoForSt(
          "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
  }

  @Test
  public void test0819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0819");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter12 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors3, metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl14 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager9, monitors13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        memoryPools15, "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    com.codahale.metrics.MetricFilter metricFilter18 = null;
    try {
      metricRegistryManager9.reomcnForMe(metricFilter18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0820");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter20 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager9, memoryPools21);
    java.lang.String str24 = memoryPoolsAdapterNeoStackImpl22.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    try {
      memoryPoolsAdapterNeoStackImpl22.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str24, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test0821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0821");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getICe();
    long long5 = livingCacheMeta0.getLgBm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test0822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0822");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.recnam();
    syncStat0.clerut();
  }

  @Test
  public void test0823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0823");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter24 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors6, metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier25 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter26 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager14, webContainerThreadInfoSupplier25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager14);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14,
        databaseOperationCounts28);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter30 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "db.query.execution", monitors1, metricRegistryManager14);
    try {
      txCatchupAdapter30.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test0824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0824");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    long long1 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid(0L);
    long long4 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid((long) '#');
    petConsensusLogApplied0.apldid((long) (byte) 100);
    petConsensusLogApplied0.apldid((long) 1);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test0825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0825");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager8, memoryPools15);
    try {
      memoryPoolsAdapterNeoStackImpl16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0826");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getOneMinuteRate();
    double double15 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) ' ');
    double double18 = metricsMeter1.getFifteenMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
  }

  @Test
  public void test0827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0827");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.recnam();
    syncStat0.marc();
  }

  @Test
  public void test0828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0828");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier15 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter16 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager9, webContainerThreadInfoSupplier15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager9, monitors17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager9,
        memoryPools19, "databaseMetrics");
    java.lang.String str23 = memoryPoolsAdapterGdbImpl21.moydmdmineString("");
    try {
      memoryPoolsAdapterGdbImpl21.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pool.<pool>.<database>." + "'", str23,
        "pool.<pool>.<database>.");
  }

  @Test
  public void test0829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0829");
    }
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter16 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors4, metricRegistryManager11);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11,
        databaseOperationCounts17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager11, webContainerThreadInfoSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11);
    java.lang.Class<?> wildcardClass22 = jVMAdapterMBImpl21.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(wildcardClass22);
  }

  @Test
  public void test0830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0830");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13,
        databaseOperationCounts27);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter30 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13,
        checkpointCounters29);
    try {
      checkpointCounterAdapter30.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0831");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier19 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter20 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager13, webContainerThreadInfoSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager13, monitors21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager13, storeEntityCountersSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        memoryPools25, "db.operation.count.stop");
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager13, monitors28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager13);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager13, transactionLogCounters31);
    try {
      gdbTransactionLogAdapter32.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0832");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.memory.MemoryPools memoryPools14 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager13, memoryPools14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter18 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier20 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionIdStoreSupplier20, transactionCounters21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager13, jobScheduler26,
        fileSystemAbstraction27, databaseLayout28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager13);
    try {
      jVMAdapterFileStatImpl31.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0833");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    long long1 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie(10L);
    consensusLogAdditions0.apeie((long) 10);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
  }

  @Test
  public void test0834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0834");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    jVMAdapterPoolImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "db.operation.count.drop" + "'", str17,
        "db.operation.count.drop");
  }

  @Test
  public void test0835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0835");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager10);
    try {
      jVMAdapterMBImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0836");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager11, monitors19);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier23,
        pageCacheTracer24);
    com.codahale.metrics.MetricFilter metricFilter26 = null;
    try {
      metricRegistryManager11.reomcnForMe(metricFilter26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0837");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier14 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl1, metricRegistryManager8,
        coreNodeLeaderCheckSupplier14);
    try {
      consensusCoreNodeAdapter15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0838");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sembe((long) (byte) 0);
    livingCacheMeta0.sememt(0);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.cacheHit();
    long long10 = livingCacheMeta0.gehs();
    long long11 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
  }

  @Test
  public void test0839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0839");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.covgGauge();
    clusterMembersCount0.seuehl((int) (byte) 10);
    org.junit.Assert.assertNotNull(intGauge1);
  }

  @Test
  public void test0840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0840");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    boolean boolean13 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager7);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray21 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList22 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        globbingPatternArray21);
    com.codahale.metrics.MetricRegistry metricRegistry24 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager25 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList22,
        metricRegistry24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager25, memoryPools26,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager25);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors18, metricRegistryManager25);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager25,
        databaseOperationCounts31);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier33 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter34 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager25, webContainerThreadInfoSupplier33);
    org.neo4j.memory.MemoryPools memoryPools35 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl36 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager25, memoryPools35);
    boolean boolean37 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager25);
    com.codahale.metrics.MetricFilter metricFilter38 = null;
    try {
      metricRegistryManager25.reomcnForMe(metricFilter38);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(globbingPatternArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
  }

  @Test
  public void test0841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0841");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager12, jobScheduler19,
        fileSystemAbstraction20, databaseLayout21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager12, jobScheduler23, fileSystemAbstraction24, databaseLayout25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier28 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager12, transactionIdStoreSupplier28, transactionCounters29);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier31 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitorsClusterConsensusImpl1,
        metricRegistryManager12, coreNodeLeaderCheckSupplier31);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0842");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    java.lang.String str6 = metricsServiceExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext7 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents8 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle9 = metricsServiceExtensionFactory0.newInstance(
          extensionContext7, requiredComponents8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str6, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test0843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0843");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType7, (int) (short) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
  }

  @Test
  public void test0844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0844");
    }
    org.neo4j.monitoring.Monitors monitors5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter23 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors5, metricRegistryManager13);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier24 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter25 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager13, webContainerThreadInfoSupplier24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13,
        databaseOperationCounts27);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter30 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13,
        checkpointCounters29);
    try {
      checkpointCounterAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0845");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, jobScheduler21, fileSystemAbstraction22,
        databaseLayout23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors3, metricRegistryManager13);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        pageCacheCounters26);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl29 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager13, monitors28);
    try {
      jVMAdapterSDPImpl29.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0846");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager1);
    try {
      jVMAdapterFileStatImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0847");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager8, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager8, databaseOperationCounts15);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager8, memoryPools17,
        "db.operation.count.create");
    java.lang.String str21 = memoryPoolsAdapterGdbImpl19.moydmdmineString(
        "causal_clustering.core.discovery.replicated_data");
    java.lang.String str23 = memoryPoolsAdapterGdbImpl19.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    try {
      memoryPoolsAdapterGdbImpl19.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str21 + "' != '"
            + "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data" + "'", str21,
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertEquals(
        "'" + str23 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str23, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
  }

  @Test
  public void test0848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0848");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.recnam();
    syncStat0.clerut();
  }

  @Test
  public void test0849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0849");
    }
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl0 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl();
    java.lang.String str2 = jVMAdapterGarbageCollectionImpl0.moydmdmineString(
        "causal_clustering.core.discovery.cluster.unreachable");
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl0.moydmdmineString("");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "causal_clustering.core.discovery.cluster.unreachable" + "'", str2,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
  }

  @Test
  public void test0850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0850");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.cacheMiss();
    long long7 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheMiss();
    livingCacheMeta0.sememt((int) '#');
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test0851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0851");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType7, (int) (short) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
  }

  @Test
  public void test0852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0852");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0853");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier8 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters9 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter10 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        transactionIdStoreSupplier8, transactionCounters9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl11 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager7);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier12 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters13 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager7, transactionIdStoreSupplier12,
        transactionCounters13);
    try {
      globalTransactionStatsAdapter14.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0854");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl12 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager8);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter13 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.members", monitors1, metricRegistryManager8);
    try {
      discoveryCoreNodeAdapter13.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0855");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(0);
    livingCacheMeta0.sememt(100);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test0856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0856");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier14 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl1, metricRegistryManager8,
        coreNodeLeaderCheckSupplier14);
    try {
      consensusCoreNodeAdapter15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0857");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats3 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long4 = consensusMessageStats3.dea();
    java.time.Duration duration5 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats3.sedaForDu(duration5);
    consensusMessageStats0.sedaForDu(duration5);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats8 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long9 = consensusMessageStats8.dea();
    com.codahale.metrics.Timer timer10 = consensusMessageStats8.getTimer();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType11 = null;
    com.codahale.metrics.Timer timer12 = consensusMessageStats8.getTimer(
        raftConsensusMessageType11);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats13 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType14 = null;
    com.codahale.metrics.Timer timer15 = consensusMessageStats13.getTimer(
        raftConsensusMessageType14);
    long long16 = consensusMessageStats13.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats13.getTimer(
        raftConsensusMessageType17);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType19 = null;
    com.codahale.metrics.Timer timer20 = consensusMessageStats13.getTimer(
        raftConsensusMessageType19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType21 = null;
    com.codahale.metrics.Timer timer22 = consensusMessageStats13.getTimer(
        raftConsensusMessageType21);
    java.time.Duration duration23 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats13.sedaForDu(duration23);
    consensusMessageStats8.sedaForDu(duration23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType26 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration23, raftConsensusMessageType26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertNotNull(consensusMessageStats3);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(duration5);
    org.junit.Assert.assertNotNull(consensusMessageStats8);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertNotNull(timer10);
    org.junit.Assert.assertNull(timer12);
    org.junit.Assert.assertNotNull(consensusMessageStats13);
    org.junit.Assert.assertNull(timer15);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNull(timer20);
    org.junit.Assert.assertNull(timer22);
    org.junit.Assert.assertNotNull(duration23);
  }

  @Test
  public void test0858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0858");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager7, databaseOperationCounts14);
    gdbActionsAdapter15.start();
    gdbActionsAdapter15.start();
    java.lang.String str19 = gdbActionsAdapter15.moydmdmineString("");
    gdbActionsAdapter15.start();
    gdbActionsAdapter15.start();
    gdbActionsAdapter15.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
  }

  @Test
  public void test0859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0859");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        storeEntityCountersSupplier17, pageCacheTracer18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        memoryPools20, "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager10);
    try {
      jVMAdapterMemoryHeapImpl23.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0860");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    java.lang.Throwable throwable26 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery25, throwable26);
    try {
      queryExecutionMonitorMetricsImpl24.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0861");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager11);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier23 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "databaseMetrics", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        memoryPools25);
    try {
      memoryPoolsAdapterNeoStackImpl26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0862");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.stop();
  }

  @Test
  public void test0863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0863");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.recnam();
    syncStat0.clerut();
    syncStat0.marc();
    syncStat0.recnam();
    syncStat0.recnam();
  }

  @Test
  public void test0864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0864");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "db.operation.count.drop" + "'", str15,
        "db.operation.count.drop");
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed"
            + "'", str17, "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test0865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0865");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9,
        jobScheduler15, fileSystemAbstraction16, databaseLayout17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter21 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors20);
    try {
      boltAdapter21.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0866");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager10);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier22 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter23 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.committed", metricRegistryManager10, webContainerThreadInfoSupplier22);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier24 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        transactionIdStoreSupplier24, transactionCounters25);
    try {
      globalTransactionStatsAdapter26.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0867");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory0 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats1 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long2 = consensusMessageStats1.dea();
    com.codahale.metrics.Timer timer3 = consensusMessageStats1.getTimer();
    com.codahale.metrics.Timer timer4 = consensusMessageStats1.getTimer();
    boolean boolean5 = metricsServiceExtensionFactory0.equals((java.lang.Object) timer4);
    java.lang.String str6 = metricsServiceExtensionFactory0.getName();
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl12 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray15 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList16 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        globbingPatternArray15);
    com.codahale.metrics.MetricRegistry metricRegistry18 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager19 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList16,
        metricRegistry18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager19, storeEntityCountersSupplier22,
        pageCacheTracer23);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier25 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter26 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl12, metricRegistryManager19,
        coreNodeLeaderCheckSupplier25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager19,
        storeEntityCountersSupplier27, pageCacheTracer28);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager19, transactionLogCounters30);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager19, databaseOperationCounts32);
    org.neo4j.monitoring.Monitors monitors34 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl35 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager19, monitors34);
    boolean boolean36 = metricsServiceExtensionFactory0.equals(
        (java.lang.Object) metricRegistryManager19);
    java.lang.String str37 = metricsServiceExtensionFactory0.getName();
    java.lang.String str38 = metricsServiceExtensionFactory0.getName();
    java.util.function.LongSupplier longSupplier39 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter40 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier39);
    metricsMeter40.mark(100L);
    double double43 = metricsMeter40.getFiveMinuteRate();
    boolean boolean44 = metricsServiceExtensionFactory0.equals((java.lang.Object) double43);
    java.lang.String str45 = metricsServiceExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(consensusMessageStats1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertNotNull(timer3);
    org.junit.Assert.assertNotNull(timer4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "globalMetrics" + "'", str6,
        "globalMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "globalMetrics" + "'", str37,
        "globalMetrics");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "globalMetrics" + "'", str38,
        "globalMetrics");
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals(
        "'" + str45 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str45, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test0868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0868");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl3 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier20 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter21 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl3, metricRegistryManager12,
        coreNodeLeaderCheckSupplier20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier23 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter24 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship",
        metricRegistryManager12, webContainerThreadInfoSupplier23);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0869");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager9);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier16 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        transactionIdStoreSupplier16, transactionCounters17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "vm.heap.max", metricRegistryManager9);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0870");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (long) (-1), (int) 'a',
          compressionOption5, rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0871");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager13,
        storeEntityCountersSupplier21, pageCacheTracer22);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, transactionLogCounters24);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager13, databaseOperationCounts26);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl29 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager13, monitors28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "dbms.pool.<pool>.vm.heap.max", metricRegistryManager13);
    java.lang.String str32 = jVMAdapterPoolImpl30.moydmdmineString("db.operation.count.create");
    try {
      jVMAdapterPoolImpl30.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "db.operation.count.create" + "'", str32,
        "db.operation.count.create");
  }

  @Test
  public void test0872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0872");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 'a');
    consensusLogAdditions0.apeie((long) 10);
    long long5 = consensusLogAdditions0.apeie();
    consensusLogAdditions0.apeie((long) 0);
    long long8 = consensusLogAdditions0.apeie();
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
  }

  @Test
  public void test0873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0873");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl16 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "db.operation.count.start", metricRegistryManager8, memoryPools15);
    java.lang.String str18 = memoryPoolsAdapterNeoStackImpl16.moydmdmineString(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
    try {
      memoryPoolsAdapterNeoStackImpl16.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '"
            + "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship" + "'",
        str18, "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
  }

  @Test
  public void test0874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0874");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "vm.heap.max", metricRegistryManager9);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters17 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter18 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.failed", metricRegistryManager9, pageCacheCounters17);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0875");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, (int) (byte) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test0876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0876");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters25);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters27 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter28 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager11, pageCacheCounters27);
    neoPageCacheAdapter28.init();
    try {
      neoPageCacheAdapter28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0877");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager10, monitors14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.recovered", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools17 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl19 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, memoryPools17,
        "db.operation.count.create");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.create", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager10);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0878");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    long long4 = livingCacheMeta0.gems();
    long long5 = livingCacheMeta0.gems();
    long long6 = livingCacheMeta0.gems();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test0879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0879");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (long) (short) 0, (int) (byte) 10,
          compressionOption5, rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0880");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "hi!", metricRegistryManager6);
    jVMAdapterMemoryHeapImpl10.start();
    jVMAdapterMemoryHeapImpl10.start();
    jVMAdapterMemoryHeapImpl10.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0881");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager15,
        jobScheduler21, fileSystemAbstraction22, databaseLayout23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager15, monitors25);
    org.neo4j.memory.MemoryPools memoryPools27 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager15, memoryPools27);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier29 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier29,
        pageCacheTracer30);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier32 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter33 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl4, metricRegistryManager15,
        coreNodeLeaderCheckSupplier32);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl34 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager15);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter35 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        monitors1, metricRegistryManager15);
    try {
      readReplicaNodeAdapter35.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test0882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0882");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl7 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager6);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier8 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer9 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter10 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.query.execution", metricRegistryManager6, storeEntityCountersSupplier8,
        pageCacheTracer9);
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0883");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.query.execution");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery22 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery22);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery24 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery24);
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0884");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager7, monitors11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager7, memoryPools13,
        "causal_clustering.core.last_leader_message");
    try {
      memoryPoolsAdapterGdbImpl15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0885");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    org.neo4j.memory.MemoryPools memoryPools6 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl8 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager5, memoryPools6,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.lang.String str10 = memoryPoolsAdapterGdbImpl8.moydmdmineString(
        "db.operation.count.start");
    try {
      memoryPoolsAdapterGdbImpl8.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "pool.<pool>.<database>.db.operation.count.start" + "'", str10,
        "pool.<pool>.<database>.db.operation.count.start");
  }

  @Test
  public void test0886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0886");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.memory.MemoryPools memoryPools15 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl17 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager14, memoryPools15,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager14, monitors18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager14);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier21 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, transactionIdStoreSupplier21, transactionCounters22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager14, monitors24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager14);
    org.neo4j.scheduler.JobScheduler jobScheduler27 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager14, jobScheduler27,
        fileSystemAbstraction28, databaseLayout29);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager14);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters33 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter34 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "vm.heap.max", metricRegistryManager14, checkpointCounters33);
    try {
      checkpointCounterAdapter34.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test0887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0887");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.getName();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.lang.String str12 = memoryPoolsAdapterGdbImpl10.moydmdmineString(
        "causal_clustering.core.last_leader_message");
    boolean boolean13 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) str12);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "databaseMetrics" + "'", str1,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "pool.<pool>.<database>.causal_clustering.core.last_leader_message"
            + "'", str12, "pool.<pool>.<database>.causal_clustering.core.last_leader_message");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test0888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0888");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    long long6 = livingCacheMeta0.getICe();
    livingCacheMeta0.seeec((int) (short) 10);
    long long9 = livingCacheMeta0.gehs();
    long long10 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.setabys(0L);
    long long13 = livingCacheMeta0.getIEm();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
  }

  @Test
  public void test0889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0889");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext2 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents3 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle4 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext2, dependentComponents3);
    java.lang.String str5 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider6 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.configuration.Config config9 = null;
    java.nio.file.Path path10 = null;
    metricsReportProvider6.init(fileSystemAbstraction7, "db.operation.count.drop", config9, path10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config14 = null;
    java.nio.file.Path path15 = null;
    metricsReportProvider6.init(fileSystemAbstraction12, "", config14, path15);
    boolean boolean17 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) config14);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext18 = null;
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents19 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle20 = extensionFactoryGdbMetricsImpl0.newInstance(
        extensionContext18, dependentComponents19);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]" + "'",
        str1, "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]");
    org.junit.Assert.assertNotNull(lifecycle4);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "databaseMetrics" + "'", str5,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(lifecycle20);
  }

  @Test
  public void test0890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0890");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors10);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier12 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter14 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager9, storeEntityCountersSupplier12,
        pageCacheTracer13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "db.operation.count.failed", metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "pool.<pool>.<database>.db.query.execution", metricRegistryManager9, monitors17);
    try {
      jVMAdapterSDPImpl18.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0891");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier27,
        pageCacheTracer28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.failed", monitorsClusterConsensusImpl2, metricRegistryManager13,
        coreNodeLeaderCheckSupplier30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.cluster.converged",
        metricRegistryManager13);
    jVMAdapterMemoryHeapImpl32.start();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0892");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier17 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter18 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl4, metricRegistryManager11,
        coreNodeLeaderCheckSupplier17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "db.operation.count.recovered", monitorsClusterConsensusImpl2, metricRegistryManager11,
        coreNodeLeaderCheckSupplier19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager11);
    jVMAdapterMemoryHeapImpl21.init();
    java.lang.String str24 = jVMAdapterMemoryHeapImpl21.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    jVMAdapterMemoryHeapImpl21.start();
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "pool.<pool>.<database>.db.operation.count.failed" + "'", str24,
        "pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test0893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0893");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    java.lang.String str1 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric submittedConsensusLogCommitIndexMetric2 = new io.github.onograph.metrics.incoming.cluster.SubmittedConsensusLogCommitIndexMetric();
    submittedConsensusLogCommitIndexMetric2.comie(0L);
    long long5 = submittedConsensusLogCommitIndexMetric2.comie();
    submittedConsensusLogCommitIndexMetric2.comie((long) (byte) 0);
    long long8 = submittedConsensusLogCommitIndexMetric2.comie();
    boolean boolean9 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) submittedConsensusLogCommitIndexMetric2);
    java.lang.String str10 = extensionFactoryGdbMetricsImpl0.getName();
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory11 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray14 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList15 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        globbingPatternArray14);
    com.codahale.metrics.MetricRegistry metricRegistry17 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager18 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList15,
        metricRegistry17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager18, memoryPools19,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter23 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager18, monitors22);
    boolean boolean24 = metricsServiceExtensionFactory11.equals(
        (java.lang.Object) metricRegistryManager18);
    boolean boolean25 = extensionFactoryGdbMetricsImpl0.equals(
        (java.lang.Object) metricsServiceExtensionFactory11);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext26 = null;
    io.github.onograph.metrics.MetricsServiceExtensionFactory.RequiredComponents requiredComponents27 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle28 = metricsServiceExtensionFactory11.newInstance(
          extensionContext26, requiredComponents27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "databaseMetrics" + "'", str1,
        "databaseMetrics");
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "databaseMetrics" + "'", str10,
        "databaseMetrics");
    org.junit.Assert.assertNotNull(globbingPatternArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
  }

  @Test
  public void test0894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0894");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.monitoring.Monitors monitors4 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter13 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors4, metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter14 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "neo4j.count.node", monitors2, metricRegistryManager10);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters15 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter16 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        pageCacheCounters15);
    try {
      neoPageCacheAdapter16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0895");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier27 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13,
        transactionIdStoreSupplier27, transactionCounters28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl2,
        metricRegistryManager13, coreNodeLeaderCheckSupplier30);
    org.neo4j.monitoring.Monitors monitors32 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl33 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager13, monitors32);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0896");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    java.lang.Throwable throwable15 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14, throwable15);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.beforeEnd(executingQuery17, true);
    queryExecutionMonitorMetricsImpl13.shutdown();
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl13.startExecution(executingQuery21);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0897");
    }
    io.github.onograph.metrics.MetricsServiceExtensionFactory metricsServiceExtensionFactory2 = new io.github.onograph.metrics.MetricsServiceExtensionFactory();
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager9, monitors13);
    boolean boolean15 = metricsServiceExtensionFactory2.equals(
        (java.lang.Object) metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager9, monitors17);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    try {
      queryExecutionMonitorMetricsImpl18.endSuccess(executingQuery19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test0898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0898");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 100);
    long long4 = livingCacheMeta0.getSizeCnt();
    long long5 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test0899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0899");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager12, memoryPools24);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier26 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier26,
        pageCacheTracer27);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier29);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts31 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter32 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager12, databaseOperationCounts31);
    try {
      gdbActionsAdapter32.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0900");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    org.neo4j.memory.MemoryPools memoryPools22 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl24 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, memoryPools22,
        "pool.<pool>.<database>.db.operation.count.start");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier25 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "globalMetrics", metricRegistryManager10, storeEntityCountersSupplier25, pageCacheTracer26);
    gdbStatsAdapter27.start();
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0901");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery19, "db.operation.count.start");
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0902");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString(
        "causal_clustering.core.discovery.cluster.converged");
    java.lang.String str17 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    java.lang.String str19 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.stop");
    jVMAdapterPoolImpl13.start();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "causal_clustering.core.discovery.cluster.converged" + "'", str15,
        "causal_clustering.core.discovery.cluster.converged");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "db.operation.count.drop" + "'", str17,
        "db.operation.count.drop");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "db.operation.count.stop" + "'", str19,
        "db.operation.count.stop");
  }

  @Test
  public void test0903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0903");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager11, monitors12);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager11, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager11,
        jobScheduler17, fileSystemAbstraction18, databaseLayout19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager11, monitors21);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter24 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager11, pageCacheCounters23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager11);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.used", metricRegistryManager11, pageCacheCounters26);
    try {
      neoPageCacheAdapter27.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0904");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier13 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters14 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager12,
        transactionIdStoreSupplier13, transactionCounters14);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "vm.heap.used", metricRegistryManager12, transactionIdStoreSupplier17,
        transactionCounters18);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter21 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "db.operation.count.drop", metricRegistryManager12, checkpointCounters20);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionLogCounters22);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter24 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.operation.count.failed", monitors2, metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier25 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter26 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "db.operation.count.create", metricRegistryManager12, webContainerThreadInfoSupplier25);
    try {
      jettyAdapter26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0905");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.setabys((long) 1);
    long long5 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.cacheHit();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test0906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0906");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter11 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "causal_clustering.core.last_leader_message", monitors2, metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl13 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager8, monitors12);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery14 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery14,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery17 = null;
    queryExecutionMonitorMetricsImpl13.endFailure(executingQuery17, "");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery20 = null;
    queryExecutionMonitorMetricsImpl13.startProcessing(executingQuery20);
    try {
      queryExecutionMonitorMetricsImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0907");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.memory.MemoryPools memoryPools9 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl11 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager8, memoryPools9,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter13 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager8, monitors12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager8);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter16 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.failed", metricRegistryManager8, monitors15);
    try {
      boltAdapter16.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0908");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl6 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl6, metricRegistryManager13,
        coreNodeLeaderCheckSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter22 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager13, monitors21);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager13,
        transactionLogCounters23);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "databaseMetrics", monitors2, metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter27 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager13, monitors26);
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0909");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (-1));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 0);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 10);
  }

  @Test
  public void test0910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0910");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager7, monitors11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager7, memoryPools13,
        "causal_clustering.core.last_leader_message");
    memoryPoolsAdapterGdbImpl15.shutdown();
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0911");
    }
    com.codahale.metrics.MetricRegistry metricRegistry0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.config.Metrics.CompressionOption compressionOption5 = null;
    io.github.onograph.metrics.outgoing.RotatingLogFileWriterService rotatingLogFileWriterService6 = null;
    org.neo4j.logging.Log log7 = null;
    try {
      io.github.onograph.metrics.outgoing.CsvScheduledReporter csvScheduledReporter8 = new io.github.onograph.metrics.outgoing.CsvScheduledReporter(
          metricRegistry0, fileSystemAbstraction1, path2, (long) (short) -1, (int) (byte) 10,
          compressionOption5, rotatingLogFileWriterService6, log7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: registry == null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0912");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (byte) 100);
    long long3 = consensusElectionTerm0.getTermLength();
    long long4 = consensusElectionTerm0.getTermLength();
    long long5 = consensusElectionTerm0.getTermLength();
    long long6 = consensusElectionTerm0.getTermLength();
    long long7 = consensusElectionTerm0.getTermLength();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
  }

  @Test
  public void test0913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0913");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager2 = null;
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter3 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.failed", monitors1,
        metricRegistryManager2);
    try {
      readReplicaNodeAdapter3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0914");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        databaseOperationCounts16);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters18 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter19 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager10, checkpointCounters18);
    try {
      checkpointCounterAdapter19.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0915");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (byte) 0);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (-1));
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 10);
  }

  @Test
  public void test0916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0916");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors16);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl18 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier19 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters20 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, transactionIdStoreSupplier19, transactionCounters20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager12, monitors22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager12);
    org.neo4j.scheduler.JobScheduler jobScheduler25 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout27 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter28 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12, jobScheduler25,
        fileSystemAbstraction26, databaseLayout27);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter30 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.query.execution", metricRegistryManager12, pageCacheCounters29);
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0917");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    org.neo4j.monitoring.Monitors monitors6 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter7 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager5,
        monitors6);
    try {
      cypherPlanAdapter7.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test0918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0918");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    long long6 = livingCacheMeta0.getLgBm();
    long long7 = livingCacheMeta0.getICe();
    long long8 = livingCacheMeta0.getSizeCnt();
    long long9 = livingCacheMeta0.getICe();
    livingCacheMeta0.sememt((-1));
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
  }

  @Test
  public void test0919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0919");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    org.neo4j.scheduler.JobScheduler jobScheduler22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager11, jobScheduler22, fileSystemAbstraction23, databaseLayout24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager11);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter27 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "", monitors1, metricRegistryManager11);
    try {
      discoveryCoreNodeAdapter27.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0920");
    }
    io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl transactionSizeMonitorImpl0 = new io.github.onograph.metrics.incoming.gdb.TransactionSizeMonitorImpl();
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) ' ');
    transactionSizeMonitorImpl0.addHeapTransactionSize(100L);
    transactionSizeMonitorImpl0.addHeapTransactionSize((long) (short) 100);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(0L);
    transactionSizeMonitorImpl0.addNativeTransactionSize(10L);
    transactionSizeMonitorImpl0.addNativeTransactionSize((long) (short) 0);
  }

  @Test
  public void test0921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0921");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        databaseOperationCounts16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager10, webContainerThreadInfoSupplier18);
    com.codahale.metrics.MetricFilter metricFilter20 = null;
    try {
      metricRegistryManager10.reomcnForMe(metricFilter20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0922");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "db.operation.count.drop", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "", config8, path9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config13 = null;
    java.nio.file.Path path14 = null;
    metricsReportProvider0.init(fileSystemAbstraction11,
        "dbms.pool.<pool>.neo4j.count.relationship", config13, path14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config18 = null;
    java.nio.file.Path path19 = null;
    metricsReportProvider0.init(fileSystemAbstraction16,
        "causal_clustering.core.discovery.replicated_data", config18, path19);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config23 = null;
    java.nio.file.Path path24 = null;
    metricsReportProvider0.init(fileSystemAbstraction21, "vm.heap.max", config23, path24);
  }

  @Test
  public void test0923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0923");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gems();
    livingCacheMeta0.sememt((int) (byte) 0);
    livingCacheMeta0.seeec(10);
    livingCacheMeta0.sememt((int) (short) 100);
    long long10 = livingCacheMeta0.getICe();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
  }

  @Test
  public void test0924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0924");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    long long6 = livingCacheMeta0.getLgBm();
    long long7 = livingCacheMeta0.getICe();
    livingCacheMeta0.sembe((long) 100);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test0925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0925");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray10 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList11 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        globbingPatternArray10);
    com.codahale.metrics.MetricRegistry metricRegistry13 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager14 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList11,
        metricRegistry13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter16 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager14, monitors15);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier17 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier17,
        pageCacheTracer18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager14,
        jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter25 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager14, monitors24);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl27 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager14, memoryPools26);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier28 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager14, storeEntityCountersSupplier28,
        pageCacheTracer29);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters31 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter32 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.committed", metricRegistryManager14, pageCacheCounters31);
    org.neo4j.scheduler.JobScheduler jobScheduler33 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction34 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout35 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter36 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager14, jobScheduler33, fileSystemAbstraction34, databaseLayout35);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier37 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter38 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "neo4j.count.relationship", monitorsClusterConsensusImpl1, metricRegistryManager14,
        coreNodeLeaderCheckSupplier37);
    java.lang.Class<?> wildcardClass39 = consensusCoreNodeAdapter38.getClass();
    org.junit.Assert.assertNotNull(globbingPatternArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(wildcardClass39);
  }

  @Test
  public void test0926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0926");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long1 = consensusMessageStats0.dea();
    java.time.Duration duration2 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration2);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats4 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType5 = null;
    com.codahale.metrics.Timer timer6 = consensusMessageStats4.getTimer(raftConsensusMessageType5);
    long long7 = consensusMessageStats4.dea();
    long long8 = consensusMessageStats4.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long10 = consensusMessageStats9.dea();
    java.time.Duration duration11 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration11);
    consensusMessageStats4.sedaForDu(duration11);
    consensusMessageStats0.sedaForDu(duration11);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats15 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long16 = consensusMessageStats15.dea();
    com.codahale.metrics.Timer timer17 = consensusMessageStats15.getTimer();
    com.codahale.metrics.Timer timer18 = consensusMessageStats15.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats19 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType20 = null;
    com.codahale.metrics.Timer timer21 = consensusMessageStats19.getTimer(
        raftConsensusMessageType20);
    long long22 = consensusMessageStats19.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType23 = null;
    com.codahale.metrics.Timer timer24 = consensusMessageStats19.getTimer(
        raftConsensusMessageType23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats19.getTimer(
        raftConsensusMessageType25);
    long long27 = consensusMessageStats19.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats28 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType29 = null;
    com.codahale.metrics.Timer timer30 = consensusMessageStats28.getTimer(
        raftConsensusMessageType29);
    long long31 = consensusMessageStats28.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType32 = null;
    com.codahale.metrics.Timer timer33 = consensusMessageStats28.getTimer(
        raftConsensusMessageType32);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType34 = null;
    com.codahale.metrics.Timer timer35 = consensusMessageStats28.getTimer(
        raftConsensusMessageType34);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType36 = null;
    com.codahale.metrics.Timer timer37 = consensusMessageStats28.getTimer(
        raftConsensusMessageType36);
    java.time.Duration duration38 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats28.sedaForDu(duration38);
    consensusMessageStats19.sedaForDu(duration38);
    consensusMessageStats15.sedaForDu(duration38);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType42 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration38, raftConsensusMessageType42);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertNotNull(duration2);
    org.junit.Assert.assertNotNull(consensusMessageStats4);
    org.junit.Assert.assertNull(timer6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertNotNull(duration11);
    org.junit.Assert.assertNotNull(consensusMessageStats15);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    org.junit.Assert.assertNotNull(timer17);
    org.junit.Assert.assertNotNull(timer18);
    org.junit.Assert.assertNotNull(consensusMessageStats19);
    org.junit.Assert.assertNull(timer21);
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertNull(timer24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats28);
    org.junit.Assert.assertNull(timer30);
    org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    org.junit.Assert.assertNull(timer33);
    org.junit.Assert.assertNull(timer35);
    org.junit.Assert.assertNull(timer37);
    org.junit.Assert.assertNotNull(duration38);
  }

  @Test
  public void test0927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0927");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager11,
        transactionLogCounters25);
    org.neo4j.monitoring.Monitors monitors27 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter28 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager11, monitors27);
    try {
      cypherPlanAdapter28.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0928");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.memory.MemoryPools memoryPools16 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl18 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager15, memoryPools16,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors19 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter20 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager15, monitors19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager15);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier22 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters23 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, transactionIdStoreSupplier22, transactionCounters23);
    org.neo4j.monitoring.Monitors monitors25 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter26 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.stop", metricRegistryManager15, monitors25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "vm.heap.used", metricRegistryManager15);
    org.neo4j.scheduler.JobScheduler jobScheduler28 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout30 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter31 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager15, jobScheduler28,
        fileSystemAbstraction29, databaseLayout30);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl32 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "db.operation.count.stop", metricRegistryManager15);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl33 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager15);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters34 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter35 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "vm.heap.max", metricRegistryManager15, checkpointCounters34);
    org.neo4j.monitoring.Monitors monitors36 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter37 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager15, monitors36);
    try {
      cypherPlanAdapter37.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test0929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0929");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.monitoring.Monitors monitors2 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter3 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager1, monitors2);
    try {
      cypherPlanAdapter3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0930");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.drop", metricRegistryManager9);
    java.lang.String str22 = jVMAdapterMBImpl20.moydmdmineString("db.operation.count.create");
    jVMAdapterMBImpl20.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "db.operation.count.create" + "'", str22,
        "db.operation.count.create");
  }

  @Test
  public void test0931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0931");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark((long) 1);
    double double5 = metricsMeter1.getMeanRate();
    metricsMeter1.mark((long) (short) 1);
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
  }

  @Test
  public void test0932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0932");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager9);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data",
        metricRegistryManager9, transactionLogCounters21);
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0933");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl19 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager13);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl20 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager13);
    org.neo4j.scheduler.JobScheduler jobScheduler21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout23 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter24 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.drop", metricRegistryManager13, jobScheduler21, fileSystemAbstraction22,
        databaseLayout23);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter25 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", monitors3, metricRegistryManager13);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter27 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        pageCacheCounters26);
    org.neo4j.memory.MemoryPools memoryPools28 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl30 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "dbms.pool.<pool>.db.operation.count.drop", metricRegistryManager13, memoryPools28, "");
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0934");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getMeanRate();
    double double3 = metricsMeter1.getFiveMinuteRate();
    double double4 = metricsMeter1.getOneMinuteRate();
    long long5 = metricsMeter1.getCount();
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test0935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0935");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager9, jobScheduler16,
        fileSystemAbstraction17, databaseLayout18);
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "hi!", metricRegistryManager9, jobScheduler20, fileSystemAbstraction21, databaseLayout22);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "", metricRegistryManager9);
    jVMAdapterPoolImpl24.start();
    java.lang.String str27 = jVMAdapterPoolImpl24.moydmdmineString("hi!");
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
  }

  @Test
  public void test0936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0936");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    long long8 = consensusMessageStats0.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats9 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType10 = null;
    com.codahale.metrics.Timer timer11 = consensusMessageStats9.getTimer(
        raftConsensusMessageType10);
    long long12 = consensusMessageStats9.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType13 = null;
    com.codahale.metrics.Timer timer14 = consensusMessageStats9.getTimer(
        raftConsensusMessageType13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType15 = null;
    com.codahale.metrics.Timer timer16 = consensusMessageStats9.getTimer(
        raftConsensusMessageType15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType17 = null;
    com.codahale.metrics.Timer timer18 = consensusMessageStats9.getTimer(
        raftConsensusMessageType17);
    java.time.Duration duration19 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats9.sedaForDu(duration19);
    consensusMessageStats0.sedaForDu(duration19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType22 = null;
    com.codahale.metrics.Timer timer23 = consensusMessageStats0.getTimer(
        raftConsensusMessageType22);
    long long24 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats0.getTimer(
        raftConsensusMessageType25);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats27 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long28 = consensusMessageStats27.dea();
    com.codahale.metrics.Timer timer29 = consensusMessageStats27.getTimer();
    com.codahale.metrics.Timer timer30 = consensusMessageStats27.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats31 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType32 = null;
    com.codahale.metrics.Timer timer33 = consensusMessageStats31.getTimer(
        raftConsensusMessageType32);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats34 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long35 = consensusMessageStats34.dea();
    java.time.Duration duration36 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats34.sedaForDu(duration36);
    consensusMessageStats31.sedaForDu(duration36);
    consensusMessageStats27.sedaForDu(duration36);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType40 = null;
    try {
      consensusMessageStats0.upateForCoDu(duration36, raftConsensusMessageType40);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats9);
    org.junit.Assert.assertNull(timer11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    org.junit.Assert.assertNull(timer14);
    org.junit.Assert.assertNull(timer16);
    org.junit.Assert.assertNull(timer18);
    org.junit.Assert.assertNotNull(duration19);
    org.junit.Assert.assertNull(timer23);
    org.junit.Assert.assertTrue("'" + long24 + "' != '" + 600000L + "'", long24 == 600000L);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertNotNull(consensusMessageStats27);
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertNotNull(timer29);
    org.junit.Assert.assertNotNull(timer30);
    org.junit.Assert.assertNotNull(consensusMessageStats31);
    org.junit.Assert.assertNull(timer33);
    org.junit.Assert.assertNotNull(consensusMessageStats34);
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertNotNull(duration36);
  }

  @Test
  public void test0937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0937");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.getLgBm();
    livingCacheMeta0.sememt(0);
    long long6 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
  }

  @Test
  public void test0938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0938");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.memory.MemoryPools memoryPools25 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl26 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "hi!", metricRegistryManager13, memoryPools25);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier27 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager13,
        transactionIdStoreSupplier27, transactionCounters28);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier30 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter31 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitorsClusterConsensusImpl2,
        metricRegistryManager13, coreNodeLeaderCheckSupplier30);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter33 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13,
        transactionLogCounters32);
    gdbTransactionLogAdapter33.start();
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0939");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl8 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray11 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList12 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        globbingPatternArray11);
    com.codahale.metrics.MetricRegistry metricRegistry14 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager15 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList12,
        metricRegistry14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter17 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, monitors16);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier18 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager15, storeEntityCountersSupplier18,
        pageCacheTracer19);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier21 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter22 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl8, metricRegistryManager15,
        coreNodeLeaderCheckSupplier21);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter25 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager15,
        storeEntityCountersSupplier23, pageCacheTracer24);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager15, transactionLogCounters26);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts28 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter29 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "neo4j.count.node", metricRegistryManager15, databaseOperationCounts28);
    org.neo4j.monitoring.Monitors monitors30 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl31 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.start", metricRegistryManager15, monitors30);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters32 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter33 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "db.operation.count.failed", metricRegistryManager15, pageCacheCounters32);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter34 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitors1,
        metricRegistryManager15);
    try {
      discoveryCoreNodeAdapter34.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test0940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0940");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      java.lang.String str2 = io.github.onograph.metrics.gdb.GdbMetricsEngine.daamtpxString(config0,
          "dbms.pool.<pool>.dbms.pool.<pool>.dbms.pool.<pool>.neo4j.count.relationship");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0941");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter8 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager6,
        monitors7);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier9 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer10 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter11 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager6, storeEntityCountersSupplier9,
        pageCacheTracer10);
    gdbStatsAdapter11.start();
    gdbStatsAdapter11.start();
    gdbStatsAdapter11.start();
    gdbStatsAdapter11.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0942");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager12,
        jobScheduler18, fileSystemAbstraction19, databaseLayout20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter23 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager12, monitors22);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager12, pageCacheCounters24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.query.execution", metricRegistryManager12);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter27 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "pool.<pool>.<database>.db.operation.count.start", monitors1, metricRegistryManager12);
    try {
      java.util.SortedSet<java.lang.String> strSet28 = metricRegistryManager12.geneSortedSet();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0943");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "hi!", metricRegistryManager9, monitors13);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "db.query.execution", monitors2, metricRegistryManager9);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl16 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "dbms.pool.<pool>.db.operation.count.failed", metricRegistryManager9);
    try {
      jVMAdapterThreadMXImpl16.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0944");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry7);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter12 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.query.execution", metricRegistryManager10, monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter14 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager10, monitors13);
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0945");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "dbms.pool.<pool>.db.operation.count.drop", metricRegistryManager8);
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0946");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "vm.heap.used", metricRegistryManager12, monitors20);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier22 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter23 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "", metricRegistryManager12, storeEntityCountersSupplier22);
    org.neo4j.scheduler.JobScheduler jobScheduler24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter27 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "", metricRegistryManager12, jobScheduler24, fileSystemAbstraction25, databaseLayout26);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters28 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter29 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12,
        pageCacheCounters28);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl30 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager12);
    try {
      metricRegistryManager12.reoForSt("db.operation.count.failed");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0947");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge6 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType5);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType7 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge8 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType7);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType9 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType9);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType11 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType11, (int) (byte) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
    org.junit.Assert.assertNotNull(intGauge6);
    org.junit.Assert.assertNotNull(intGauge8);
    org.junit.Assert.assertNotNull(intGauge10);
  }

  @Test
  public void test0948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0948");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager13, pageCacheCounters25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager13, monitors28);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "pool.<pool>.<database>.causal_clustering.core.discovery.replicated_data", monitors1,
        metricRegistryManager13);
    try {
      discoveryCoreNodeAdapter30.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0949");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.geivldasGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.seivldasForCl(clusterDataType5, (int) (byte) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test0950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0950");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions consensusLogAdditions0 = new io.github.onograph.metrics.incoming.cluster.ConsensusLogAdditions();
    consensusLogAdditions0.apeie((long) 'a');
    consensusLogAdditions0.apeie((long) 10);
    consensusLogAdditions0.apeie((long) 0);
  }

  @Test
  public void test0951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0951");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray13 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList14 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        globbingPatternArray13);
    com.codahale.metrics.MetricRegistry metricRegistry16 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager17 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList14,
        metricRegistry16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter19 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager17, monitors18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager17, storeEntityCountersSupplier20,
        pageCacheTracer21);
    org.neo4j.scheduler.JobScheduler jobScheduler23 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction24 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout25 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager17,
        jobScheduler23, fileSystemAbstraction24, databaseLayout25);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter27 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "", monitors9, metricRegistryManager17);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier28 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter29 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "", metricRegistryManager17, webContainerThreadInfoSupplier28);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.stop", monitors6, metricRegistryManager17);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl jVMAdapterFileStatImpl31 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterFileStatImpl(
        "", metricRegistryManager17);
    io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter readReplicaNodeAdapter32 = new io.github.onograph.metrics.incoming.cluster.ReadReplicaNodeAdapter(
        "dbms.pool.<pool>.db.operation.count.create", monitors3, metricRegistryManager17);
    io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter txCatchupAdapter33 = new io.github.onograph.metrics.incoming.cluster.TxCatchupAdapter(
        "dbms.pool.<pool>.dbms.pool.<pool>.db.operation.count.failed", monitors1,
        metricRegistryManager17);
    try {
      txCatchupAdapter33.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test0952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0952");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.suslrle();
    syncStat0.clerut();
    syncStat0.norlad();
  }

  @Test
  public void test0953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0953");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager11, jobScheduler18,
        fileSystemAbstraction19, databaseLayout20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager11);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "db.operation.count.create", metricRegistryManager11, monitors23);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        monitors1, metricRegistryManager11);
    com.codahale.metrics.MetricFilter metricFilter26 = null;
    try {
      metricRegistryManager11.reomcnForMe(metricFilter26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0954");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    try {
      gdbMetricsLifecycle2.init();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0955");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier20, pageCacheTracer21);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.recovered", monitors3, metricRegistryManager12);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "vm.heap.max", metricRegistryManager12, pageCacheCounters24);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl26 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "dbms.pool.<pool>.db.operation.count.create", metricRegistryManager12);
    try {
      jVMAdapterMemoryHeapImpl26.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0956");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter11 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager6, monitors10);
    java.lang.String str13 = cypherPlanAdapter11.moydmdmineString("db.operation.count.create");
    try {
      cypherPlanAdapter11.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "db.operation.count.create" + "'", str13,
        "db.operation.count.create");
  }

  @Test
  public void test0957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0957");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    long long2 = livingCacheMeta0.getSizeCnt();
    long long3 = livingCacheMeta0.gehs();
    livingCacheMeta0.sembe((long) 100);
    long long6 = livingCacheMeta0.getLgBm();
    long long7 = livingCacheMeta0.getICe();
    livingCacheMeta0.sememt((int) (byte) 100);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
  }

  @Test
  public void test0958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0958");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl18 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors17);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier19 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter20 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitorsClusterConsensusImpl2,
        metricRegistryManager10, coreNodeLeaderCheckSupplier19);
    org.neo4j.monitoring.Monitors monitors21 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter22 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.", metricRegistryManager10, monitors21);
    try {
      boltAdapter22.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0959");
    }
    io.github.onograph.metrics.MetricsReportProvider metricsReportProvider0 = new io.github.onograph.metrics.MetricsReportProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config3 = null;
    java.nio.file.Path path4 = null;
    metricsReportProvider0.init(fileSystemAbstraction1, "", config3, path4);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.configuration.Config config8 = null;
    java.nio.file.Path path9 = null;
    metricsReportProvider0.init(fileSystemAbstraction6, "pool.<pool>.<database>.", config8, path9);
  }

  @Test
  public void test0960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0960");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.norlad();
    syncStat0.norlad();
    syncStat0.norlad();
    syncStat0.norlad();
  }

  @Test
  public void test0961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0961");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm consensusElectionTerm0 = new io.github.onograph.metrics.incoming.cluster.ConsensusElectionTerm();
    consensusElectionTerm0.termLength((long) (short) -1);
  }

  @Test
  public void test0962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0962");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray7 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList8 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        globbingPatternArray7);
    com.codahale.metrics.MetricRegistry metricRegistry10 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager11 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList8,
        metricRegistry10);
    org.neo4j.memory.MemoryPools memoryPools12 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl14 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager11, memoryPools12,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager11, storeEntityCountersSupplier15,
        pageCacheTracer16);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager11, databaseOperationCounts18);
    org.neo4j.memory.MemoryPools memoryPools20 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl22 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager11, memoryPools20,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl24 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager11, monitors23);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "", metricRegistryManager11);
    org.neo4j.memory.MemoryPools memoryPools26 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl28 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "pool.<pool>.<database>.dbms.pool.<pool>.pool.<pool>.<database>.db.query.execution",
        metricRegistryManager11, memoryPools26, "neo4j.count.relationship");
    org.junit.Assert.assertNotNull(globbingPatternArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test0963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0963");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.suslrle();
    syncStat0.clerut();
    syncStat0.suslrle();
    syncStat0.recnam();
    syncStat0.norlad();
  }

  @Test
  public void test0964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0964");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
  }

  @Test
  public void test0965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0965");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl2 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.drop", metricRegistryManager1);
    java.lang.String str4 = jVMAdapterGarbageCollectionImpl2.moydmdmineString("");
    try {
      jVMAdapterGarbageCollectionImpl2.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
  }

  @Test
  public void test0966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0966");
    }
    org.neo4j.monitoring.Monitors monitors2 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager9);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter14 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors2, metricRegistryManager9);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager9,
        databaseOperationCounts15);
    gdbActionsAdapter16.start();
    gdbActionsAdapter16.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0967");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl clusterDataWatcherMetricsImpl0 = new io.github.onograph.metrics.incoming.cluster.ClusterDataWatcherMetricsImpl();
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType1 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType1);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType3 = null;
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge4 = clusterDataWatcherMetricsImpl0.gevsdsiGauge(
        clusterDataType3);
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType5 = null;
    try {
      clusterDataWatcherMetricsImpl0.sevsdsiForCl(clusterDataType5, (int) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge4);
  }

  @Test
  public void test0968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0968");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl.DependentComponents dependentComponents0 = null;
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext1 = null;
    io.github.onograph.metrics.gdb.GdbMetricsLifecycle gdbMetricsLifecycle2 = new io.github.onograph.metrics.gdb.GdbMetricsLifecycle(
        dependentComponents0, extensionContext1);
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.shutdown();
    gdbMetricsLifecycle2.stop();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
    gdbMetricsLifecycle2.start();
  }

  @Test
  public void test0969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0969");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.start();
    jVMAdapterPoolImpl13.start();
    try {
      jVMAdapterPoolImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "db.operation.count.drop" + "'", str15,
        "db.operation.count.drop");
  }

  @Test
  public void test0970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0970");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl11 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "hi!", metricRegistryManager7);
    org.neo4j.kernel.impl.transaction.stats.CheckpointCounters checkpointCounters12 = null;
    io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter checkpointCounterAdapter13 = new io.github.onograph.metrics.incoming.gdb.CheckpointCounterAdapter(
        "neo4j.count.relationship", metricRegistryManager7, checkpointCounters12);
    try {
      checkpointCounterAdapter13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0971");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    double double2 = metricsMeter1.getFiveMinuteRate();
    metricsMeter1.mark(10L);
    org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
  }

  @Test
  public void test0972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0972");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray5 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList6 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        globbingPatternArray5);
    com.codahale.metrics.MetricRegistry metricRegistry8 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager9 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList6,
        metricRegistry8);
    org.neo4j.memory.MemoryPools memoryPools10 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl12 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager9, memoryPools10,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager9, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl17 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager9,
        monitors16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter19 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager9,
        monitors18);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "causal_clustering.core.discovery.replicated_data", metricRegistryManager9,
        databaseOperationCounts20);
    gdbActionsAdapter21.start();
    org.junit.Assert.assertNotNull(globbingPatternArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0973");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge9 = clusterMembersCount0.covgGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge10 = clusterMembersCount0.mebsGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge9);
    org.junit.Assert.assertNotNull(intGauge10);
  }

  @Test
  public void test0974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0974");
    }
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter15 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "causal_clustering.core.discovery.cluster.converged", monitors3, metricRegistryManager10);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "dbms.pool.<pool>.neo4j.count.relationship", metricRegistryManager10,
        databaseOperationCounts16);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier18 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters19 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "dbms.pool.<pool>.pool.<pool>.<database>.db.operation.count.start", metricRegistryManager10,
        transactionIdStoreSupplier18, transactionCounters19);
    try {
      globalTransactionStatsAdapter20.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0975");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors26);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter28 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", monitors1,
        metricRegistryManager12);
    try {
      discoveryCoreNodeAdapter28.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0976");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager7, monitors11);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl13 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "causal_clustering.core.discovery.cluster.converged", metricRegistryManager7);
    java.lang.String str15 = jVMAdapterPoolImpl13.moydmdmineString("db.operation.count.drop");
    jVMAdapterPoolImpl13.start();
    try {
      jVMAdapterPoolImpl13.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "db.operation.count.drop" + "'", str15,
        "db.operation.count.drop");
  }

  @Test
  public void test0977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0977");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.setabys((long) (-1));
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
  }

  @Test
  public void test0978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0978");
    }
    io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied petConsensusLogApplied0 = new io.github.onograph.metrics.incoming.cluster.PetConsensusLogApplied();
    petConsensusLogApplied0.apldid((long) (short) 100);
    long long3 = petConsensusLogApplied0.apldid();
    long long4 = petConsensusLogApplied0.apldid();
    petConsensusLogApplied0.apldid((long) ' ');
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 100L + "'", long3 == 100L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
  }

  @Test
  public void test0979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0979");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl5 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier18 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter19 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "hi!", monitorsClusterConsensusImpl5, metricRegistryManager12,
        coreNodeLeaderCheckSupplier18);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter21 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.operation.count.start", metricRegistryManager12, monitors20);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.create", metricRegistryManager12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "vm.heap.max", metricRegistryManager12);
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier24 = null;
    org.neo4j.kernel.impl.transaction.stats.TransactionCounters transactionCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter globalTransactionStatsAdapter26 = new io.github.onograph.metrics.incoming.gdb.GlobalTransactionStatsAdapter(
        "db.operation.count.create", metricRegistryManager12, transactionIdStoreSupplier24,
        transactionCounters25);
    try {
      globalTransactionStatsAdapter26.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0980");
    }
    io.github.onograph.cluster.raft.shared.MonitorsClusterConsensusImpl monitorsClusterConsensusImpl1 = null;
    org.neo4j.monitoring.Monitors monitors3 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter14 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12, monitors13);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter17 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.drop", metricRegistryManager12, storeEntityCountersSupplier15,
        pageCacheTracer16);
    java.util.function.Supplier<org.neo4j.server.web.WebContainerThreadInfo> webContainerThreadInfoSupplier18 = null;
    io.github.onograph.metrics.incoming.JettyAdapter jettyAdapter19 = new io.github.onograph.metrics.incoming.JettyAdapter(
        "vm.heap.max", metricRegistryManager12, webContainerThreadInfoSupplier18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "hi!", metricRegistryManager12, storeEntityCountersSupplier20, pageCacheTracer21);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter23 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.recovered", monitors3, metricRegistryManager12);
    java.util.function.Supplier<io.github.onograph.cluster.raft.share.calg.CoreNodeLeaderCheck> coreNodeLeaderCheckSupplier24 = null;
    io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter consensusCoreNodeAdapter25 = new io.github.onograph.metrics.incoming.cluster.ConsensusCoreNodeAdapter(
        "vm.heap.committed", monitorsClusterConsensusImpl1, metricRegistryManager12,
        coreNodeLeaderCheckSupplier24);
    try {
      consensusCoreNodeAdapter25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0981");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.memory.MemoryPools memoryPools2 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl4 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.failed", metricRegistryManager1, memoryPools2,
        "pool.<pool>.<database>.db.operation.count.failed");
    java.lang.String str6 = memoryPoolsAdapterGdbImpl4.moydmdmineString(
        "pool.<pool>.<database>.db.operation.count.failed");
    org.junit.Assert.assertEquals("'" + str6 + "' != '"
            + "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.failed" + "'", str6,
        "pool.<pool>.<database>.pool.<pool>.<database>.db.operation.count.failed");
  }

  @Test
  public void test0982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0982");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter12 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager10, monitors11);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier13 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter15 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager10, storeEntityCountersSupplier13,
        pageCacheTracer14);
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout18 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter19 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        jobScheduler16, fileSystemAbstraction17, databaseLayout18);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier20 = null;
    io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter gdbElementStatsAdapter21 = new io.github.onograph.metrics.incoming.gdb.GdbElementStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager10,
        storeEntityCountersSupplier20);
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10,
        monitors22);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters24 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter25 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "pool.<pool>.<database>.vm.heap.used", metricRegistryManager10, pageCacheCounters24);
    try {
      neoPageCacheAdapter25.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0983");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray4 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList5 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        globbingPatternArray4);
    com.codahale.metrics.MetricRegistry metricRegistry7 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager8 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList5,
        metricRegistry7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter10 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message", metricRegistryManager8,
        monitors9);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager8, storeEntityCountersSupplier11,
        pageCacheTracer12);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl14 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.start", metricRegistryManager8);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl jVMAdapterMemoryHeapImpl15 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMemoryHeapImpl(
        "db.operation.count.start", metricRegistryManager8);
    try {
      jVMAdapterMemoryHeapImpl15.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test0984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0984");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray2 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList3 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        globbingPatternArray2);
    com.codahale.metrics.MetricRegistry metricRegistry5 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager6 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList3,
        metricRegistry5);
    org.neo4j.memory.MemoryPools memoryPools7 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl9 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager6, memoryPools7,
        "causal_clustering.core.discovery.cluster.unreachable");
    io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl jVMAdapterPoolImpl10 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterPoolImpl(
        "db.operation.count.drop", metricRegistryManager6);
    jVMAdapterPoolImpl10.start();
    jVMAdapterPoolImpl10.start();
    org.junit.Assert.assertNotNull(globbingPatternArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test0985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0985");
    }
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager1 = null;
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters2 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter3 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "causal_clustering.core.discovery.cluster.members", metricRegistryManager1,
        pageCacheCounters2);
  }

  @Test
  public void test0986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0986");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager10, databaseOperationCounts17);
    org.neo4j.memory.MemoryPools memoryPools19 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl21 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager10, memoryPools19,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors22 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl23 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager10, monitors22);
    org.neo4j.memory.MemoryPools memoryPools24 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl memoryPoolsAdapterNeoStackImpl25 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterNeoStackImpl(
        "Extension:ExtensionFactoryGdbMetricsImpl[databaseMetrics]", metricRegistryManager10,
        memoryPools24);
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test0987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0987");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    org.neo4j.memory.MemoryPools memoryPools8 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl10 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager7, memoryPools8,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier11 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter13 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager7, storeEntityCountersSupplier11,
        pageCacheTracer12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl15 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager7,
        monitors14);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery16 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery16,
        "pool.<pool>.<database>.db.operation.count.failed");
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery19 = null;
    queryExecutionMonitorMetricsImpl15.startProcessing(executingQuery19);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery21 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery21);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery23 = null;
    java.lang.Throwable throwable24 = null;
    queryExecutionMonitorMetricsImpl15.endFailure(executingQuery23, throwable24);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery26 = null;
    queryExecutionMonitorMetricsImpl15.startExecution(executingQuery26);
    try {
      queryExecutionMonitorMetricsImpl15.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0988");
    }
    io.github.onograph.metrics.incoming.cluster.ClusterMembersCount clusterMembersCount0 = new io.github.onograph.metrics.incoming.cluster.ClusterMembersCount();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge1 = clusterMembersCount0.mebsGauge();
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge2 = clusterMembersCount0.unehlGauge();
    clusterMembersCount0.seuehl((int) (short) -1);
    clusterMembersCount0.sembs((int) (byte) 1);
    clusterMembersCount0.secvg(false);
    clusterMembersCount0.sembs(10);
    com.codahale.metrics.Gauge<java.lang.Integer> intGauge11 = clusterMembersCount0.covgGauge();
    org.junit.Assert.assertNotNull(intGauge1);
    org.junit.Assert.assertNotNull(intGauge2);
    org.junit.Assert.assertNotNull(intGauge11);
  }

  @Test
  public void test0989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0989");
    }
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats0 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType1 = null;
    com.codahale.metrics.Timer timer2 = consensusMessageStats0.getTimer(raftConsensusMessageType1);
    long long3 = consensusMessageStats0.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = null;
    com.codahale.metrics.Timer timer5 = consensusMessageStats0.getTimer(raftConsensusMessageType4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType6 = null;
    com.codahale.metrics.Timer timer7 = consensusMessageStats0.getTimer(raftConsensusMessageType6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = null;
    com.codahale.metrics.Timer timer9 = consensusMessageStats0.getTimer(raftConsensusMessageType8);
    java.time.Duration duration10 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats0.sedaForDu(duration10);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats12 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long13 = consensusMessageStats12.dea();
    com.codahale.metrics.Timer timer14 = consensusMessageStats12.getTimer();
    com.codahale.metrics.Timer timer15 = consensusMessageStats12.getTimer();
    java.time.Duration duration16 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats12.sedaForDu(duration16);
    consensusMessageStats0.sedaForDu(duration16);
    com.codahale.metrics.Timer timer19 = consensusMessageStats0.getTimer();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats20 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType21 = null;
    com.codahale.metrics.Timer timer22 = consensusMessageStats20.getTimer(
        raftConsensusMessageType21);
    long long23 = consensusMessageStats20.dea();
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats24 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType25 = null;
    com.codahale.metrics.Timer timer26 = consensusMessageStats24.getTimer(
        raftConsensusMessageType25);
    long long27 = consensusMessageStats24.dea();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType28 = null;
    com.codahale.metrics.Timer timer29 = consensusMessageStats24.getTimer(
        raftConsensusMessageType28);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType30 = null;
    com.codahale.metrics.Timer timer31 = consensusMessageStats24.getTimer(
        raftConsensusMessageType30);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType32 = null;
    com.codahale.metrics.Timer timer33 = consensusMessageStats24.getTimer(
        raftConsensusMessageType32);
    java.time.Duration duration34 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats24.sedaForDu(duration34);
    io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats consensusMessageStats36 = io.github.onograph.metrics.incoming.cluster.ConsensusMessageStats.craConsensusMessageStats();
    long long37 = consensusMessageStats36.dea();
    com.codahale.metrics.Timer timer38 = consensusMessageStats36.getTimer();
    com.codahale.metrics.Timer timer39 = consensusMessageStats36.getTimer();
    java.time.Duration duration40 = io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter.UPAIEA_DURATION;
    consensusMessageStats36.sedaForDu(duration40);
    consensusMessageStats24.sedaForDu(duration40);
    consensusMessageStats20.sedaForDu(duration40);
    consensusMessageStats0.sedaForDu(duration40);
    org.junit.Assert.assertNotNull(consensusMessageStats0);
    org.junit.Assert.assertNull(timer2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNull(timer5);
    org.junit.Assert.assertNull(timer7);
    org.junit.Assert.assertNull(timer9);
    org.junit.Assert.assertNotNull(duration10);
    org.junit.Assert.assertNotNull(consensusMessageStats12);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNotNull(timer14);
    org.junit.Assert.assertNotNull(timer15);
    org.junit.Assert.assertNotNull(duration16);
    org.junit.Assert.assertNotNull(timer19);
    org.junit.Assert.assertNotNull(consensusMessageStats20);
    org.junit.Assert.assertNull(timer22);
    org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    org.junit.Assert.assertNotNull(consensusMessageStats24);
    org.junit.Assert.assertNull(timer26);
    org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    org.junit.Assert.assertNull(timer29);
    org.junit.Assert.assertNull(timer31);
    org.junit.Assert.assertNull(timer33);
    org.junit.Assert.assertNotNull(duration34);
    org.junit.Assert.assertNotNull(consensusMessageStats36);
    org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    org.junit.Assert.assertNotNull(timer38);
    org.junit.Assert.assertNotNull(timer39);
    org.junit.Assert.assertNotNull(duration40);
  }

  @Test
  public void test0990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0990");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark(100L);
    metricsMeter1.mark();
    metricsMeter1.mark((long) 10);
    double double7 = metricsMeter1.getMeanRate();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    metricsMeter1.mark((long) '4');
    double double12 = metricsMeter1.getMeanRate();
    double double13 = metricsMeter1.getFiveMinuteRate();
    double double14 = metricsMeter1.getMeanRate();
    metricsMeter1.mark();
    double double16 = metricsMeter1.getMeanRate();
    double double17 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
  }

  @Test
  public void test0991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0991");
    }
    java.util.function.LongSupplier longSupplier0 = null;
    io.github.onograph.metrics.MetricsMeter metricsMeter1 = new io.github.onograph.metrics.MetricsMeter(
        longSupplier0);
    metricsMeter1.mark((long) (-1));
    double double4 = metricsMeter1.getFifteenMinuteRate();
    double double5 = metricsMeter1.getFifteenMinuteRate();
    double double6 = metricsMeter1.getOneMinuteRate();
    long long7 = metricsMeter1.getCount();
    double double8 = metricsMeter1.getMeanRate();
    metricsMeter1.mark(600000L);
    double double11 = metricsMeter1.getOneMinuteRate();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
  }

  @Test
  public void test0992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0992");
    }
    io.github.onograph.metrics.incoming.cluster.SyncStat syncStat0 = new io.github.onograph.metrics.incoming.cluster.SyncStat();
    syncStat0.marc();
    syncStat0.norlad();
    syncStat0.marc();
    syncStat0.clerut();
    syncStat0.clerut();
    syncStat0.recnam();
    syncStat0.suslrle();
    syncStat0.clerut();
    syncStat0.recnam();
  }

  @Test
  public void test0993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0993");
    }
    org.neo4j.monitoring.Monitors monitors1 = null;
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray9 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList10 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        globbingPatternArray9);
    com.codahale.metrics.MetricRegistry metricRegistry12 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager13 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList10,
        metricRegistry12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter15 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager13, monitors14);
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "db.operation.count.start", metricRegistryManager13, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout21 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter22 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "causal_clustering.core.discovery.cluster.unreachable", metricRegistryManager13,
        jobScheduler19, fileSystemAbstraction20, databaseLayout21);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter24 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "causal_clustering.core.last_leader_message", metricRegistryManager13, monitors23);
    org.neo4j.io.pagecache.monitoring.PageCacheCounters pageCacheCounters25 = null;
    io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter neoPageCacheAdapter26 = new io.github.onograph.metrics.incoming.gdb.NeoPageCacheAdapter(
        "", metricRegistryManager13, pageCacheCounters25);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl27 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.create", metricRegistryManager13);
    org.neo4j.monitoring.Monitors monitors28 = null;
    io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter cypherPlanAdapter29 = new io.github.onograph.metrics.incoming.gdb.CypherPlanAdapter(
        "db.query.execution", metricRegistryManager13, monitors28);
    io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter discoveryCoreNodeAdapter30 = new io.github.onograph.metrics.incoming.cluster.DiscoveryCoreNodeAdapter(
        "db.operation.count.drop", monitors1, metricRegistryManager13);
    try {
      metricRegistryManager13.reoForSt("causal_clustering.core.last_leader_message");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0994");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray3 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList4 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        globbingPatternArray3);
    com.codahale.metrics.MetricRegistry metricRegistry6 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager7 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList4,
        metricRegistry6);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl8 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "causal_clustering.core.last_leader_message", metricRegistryManager7);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl jVMAdapterThreadMXImpl9 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterThreadMXImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager7);
    org.neo4j.monitoring.Monitors monitors10 = null;
    io.github.onograph.metrics.incoming.gdb.BoltAdapter boltAdapter11 = new io.github.onograph.metrics.incoming.gdb.BoltAdapter(
        "db.operation.count.create", metricRegistryManager7, monitors10);
    try {
      boltAdapter11.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(globbingPatternArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test0995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0995");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gems();
    livingCacheMeta0.seeec(100);
    long long4 = livingCacheMeta0.getLgBm();
    long long5 = livingCacheMeta0.gehs();
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.setabys((long) 0);
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test0996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0996");
    }
    io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl extensionFactoryGdbMetricsImpl0 = new io.github.onograph.metrics.gdb.ExtensionFactoryGdbMetricsImpl();
    org.neo4j.function.ThrowingAction throwingAction1 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle2 = org.neo4j.kernel.lifecycle.LifecycleAdapter.onStop(
        throwingAction1);
    boolean boolean3 = extensionFactoryGdbMetricsImpl0.equals((java.lang.Object) lifecycle2);
    java.lang.String str4 = extensionFactoryGdbMetricsImpl0.getName();
    org.junit.Assert.assertNotNull(lifecycle2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "databaseMetrics" + "'", str4,
        "databaseMetrics");
  }

  @Test
  public void test0997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0997");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray8 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList9 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        globbingPatternArray8);
    com.codahale.metrics.MetricRegistry metricRegistry11 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager12 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList9,
        metricRegistry11);
    org.neo4j.memory.MemoryPools memoryPools13 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl15 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager12, memoryPools13,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier16 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter18 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager12, storeEntityCountersSupplier16,
        pageCacheTracer17);
    org.neo4j.dbms.database.DatabaseOperationCounts databaseOperationCounts19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter gdbActionsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbActionsAdapter(
        "db.query.execution", metricRegistryManager12, databaseOperationCounts19);
    org.neo4j.memory.MemoryPools memoryPools21 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl23 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "db.operation.count.drop", metricRegistryManager12, memoryPools21,
        "db.operation.count.create");
    org.neo4j.monitoring.Monitors monitors24 = null;
    io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl jVMAdapterSDPImpl25 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterSDPImpl(
        "hi!", metricRegistryManager12, monitors24);
    org.neo4j.monitoring.Monitors monitors26 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl27 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager12, monitors26);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl28 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "pool.<pool>.<database>.causal_clustering.core.last_leader_message",
        metricRegistryManager12);
    org.neo4j.kernel.impl.transaction.stats.TransactionLogCounters transactionLogCounters29 = null;
    io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter gdbTransactionLogAdapter30 = new io.github.onograph.metrics.incoming.gdb.GdbTransactionLogAdapter(
        "vm.heap.max", metricRegistryManager12, transactionLogCounters29);
    gdbTransactionLogAdapter30.start();
    gdbTransactionLogAdapter30.start();
    org.junit.Assert.assertNotNull(globbingPatternArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test0998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0998");
    }
    io.github.onograph.metrics.incoming.cluster.LivingCacheMeta livingCacheMeta0 = new io.github.onograph.metrics.incoming.cluster.LivingCacheMeta();
    long long1 = livingCacheMeta0.gehs();
    long long2 = livingCacheMeta0.getSizeCnt();
    livingCacheMeta0.sembe((long) (byte) 0);
    livingCacheMeta0.sememt(0);
    livingCacheMeta0.sememt((int) (short) 1);
    livingCacheMeta0.cacheHit();
    livingCacheMeta0.seeec((-1));
    long long12 = livingCacheMeta0.getSizeCnt();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
  }

  @Test
  public void test0999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0999");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray1 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        globbingPatternArray1);
    com.codahale.metrics.MetricRegistry metricRegistry4 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager5 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList2,
        metricRegistry4);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl jVMAdapterMBImpl6 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterMBImpl(
        "db.operation.count.stop", metricRegistryManager5);
    java.lang.String str8 = jVMAdapterMBImpl6.moydmdmineString(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]");
    jVMAdapterMBImpl6.start();
    org.junit.Assert.assertNotNull(globbingPatternArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:MetricsServiceExtensionFactory[globalMetrics]" + "'",
        str8, "Extension:MetricsServiceExtensionFactory[globalMetrics]");
  }

  @Test
  public void test1000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test1000");
    }
    org.neo4j.configuration.helpers.GlobbingPattern[] globbingPatternArray6 = new org.neo4j.configuration.helpers.GlobbingPattern[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern> globbingPatternList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.GlobbingPattern>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        globbingPatternArray6);
    com.codahale.metrics.MetricRegistry metricRegistry9 = null;
    io.github.onograph.metrics.MetricRegistryManager metricRegistryManager10 = new io.github.onograph.metrics.MetricRegistryManager(
        (java.util.List<org.neo4j.configuration.helpers.GlobbingPattern>) globbingPatternList7,
        metricRegistry9);
    org.neo4j.memory.MemoryPools memoryPools11 = null;
    io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl memoryPoolsAdapterGdbImpl13 = new io.github.onograph.metrics.incoming.gdb.MemoryPoolsAdapterGdbImpl(
        "vm.heap.used", metricRegistryManager10, memoryPools11,
        "causal_clustering.core.discovery.cluster.unreachable");
    java.util.function.Supplier<org.neo4j.kernel.impl.store.stats.StoreEntityCounters> storeEntityCountersSupplier14 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter gdbStatsAdapter16 = new io.github.onograph.metrics.incoming.gdb.GdbStatsAdapter(
        "neo4j.count.relationship", metricRegistryManager10, storeEntityCountersSupplier14,
        pageCacheTracer15);
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout19 = null;
    io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter gdbStoreStatsAdapter20 = new io.github.onograph.metrics.incoming.gdb.GdbStoreStatsAdapter(
        "db.operation.count.failed", metricRegistryManager10, jobScheduler17,
        fileSystemAbstraction18, databaseLayout19);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl21 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "Extension:MetricsServiceExtensionFactory[globalMetrics]", metricRegistryManager10);
    io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl jVMAdapterGarbageCollectionImpl22 = new io.github.onograph.metrics.incoming.jvm.JVMAdapterGarbageCollectionImpl(
        "db.operation.count.failed", metricRegistryManager10);
    org.neo4j.monitoring.Monitors monitors23 = null;
    io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl queryExecutionMonitorMetricsImpl24 = new io.github.onograph.metrics.incoming.gdb.QueryExecutionMonitorMetricsImpl(
        "pool.<pool>.<database>.db.operation.count.failed", metricRegistryManager10, monitors23);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery25 = null;
    queryExecutionMonitorMetricsImpl24.startProcessing(executingQuery25);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery27 = null;
    queryExecutionMonitorMetricsImpl24.beforeEnd(executingQuery27, true);
    org.neo4j.kernel.api.query.ExecutingQuery executingQuery30 = null;
    queryExecutionMonitorMetricsImpl24.endFailure(executingQuery30,
        "dbms.pool.<pool>.causal_clustering.core.discovery.replicated_data");
    org.junit.Assert.assertNotNull(globbingPatternArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }
}

